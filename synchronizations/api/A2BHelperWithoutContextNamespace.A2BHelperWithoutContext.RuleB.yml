### YamlMime:ManagedReference
items:
- uid: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB
  commentId: T:A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB
  id: A2BHelperWithoutContext.RuleB
  parent: A2BHelperWithoutContextNamespace
  children:
  - A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization
  langs:
  - csharp
  - vb
  name: A2BHelperWithoutContext.RuleB
  nameWithType: A2BHelperWithoutContext.RuleB
  fullName: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/A2B/A2BHelperWithoutContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RuleB
    path: src/Synchronizations/Synchronizations.Tests/A2B/A2BHelperWithoutContext.cs
    startLine: 50
  assemblies:
  - Synchronizations.Tests
  namespace: A2BHelperWithoutContextNamespace
  syntax:
    content: 'public class RuleB : SynchronizationRule<IB, IB>'
    content.vb: >-
      Public Class RuleB
          Inherits SynchronizationRule(Of IB, IB)
  inheritance:
  - System.Object
  - NMF.Synchronizations.SynchronizationRuleBase
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  inheritedMembers:
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizationJobs
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftToRight
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightToLeft
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.TransformationDelayLevel
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.OutputDelayLevel
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.ShouldCorrespond(A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.ISynchronizationContext)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftType
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightType
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLefttOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateRightOutput(A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateLeftOutput(A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRuleBase.LeftType
  - NMF.Synchronizations.SynchronizationRuleBase.RightType
  - NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  - NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  - NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization
  commentId: M:A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization
  id: DeclareSynchronization
  parent: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB
  langs:
  - csharp
  - vb
  name: DeclareSynchronization()
  nameWithType: A2BHelperWithoutContext.RuleB.DeclareSynchronization()
  fullName: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/A2B/A2BHelperWithoutContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclareSynchronization
    path: src/Synchronizations/Synchronizations.Tests/A2B/A2BHelperWithoutContext.cs
    startLine: 52
  assemblies:
  - Synchronizations.Tests
  namespace: A2BHelperWithoutContextNamespace
  syntax:
    content: public override void DeclareSynchronization()
    content.vb: Public Overrides Sub DeclareSynchronization
  overridden: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  overload: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: A2BHelperWithoutContextNamespace
  commentId: N:A2BHelperWithoutContextNamespace
  name: A2BHelperWithoutContextNamespace
  nameWithType: A2BHelperWithoutContextNamespace
  fullName: A2BHelperWithoutContextNamespace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  parent: NMF.Synchronizations
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  commentId: T:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<IB, IB>
  nameWithType: SynchronizationRule<IB, IB>
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>
  nameWithType.vb: SynchronizationRule(Of IB, IB)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB)
  name.vb: SynchronizationRule(Of IB, IB)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizationJobs
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizationJobs
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  name: SynchronizationJobs
  nameWithType: SynchronizationRule<IB, IB>.SynchronizationJobs
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftToRight
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftToRight
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  name: LeftToRight
  nameWithType: SynchronizationRule<IB, IB>.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of IB, IB).LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightToLeft
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightToLeft
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  name: RightToLeft
  nameWithType: SynchronizationRule<IB, IB>.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of IB, IB).RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.TransformationDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.TransformationDelayLevel
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  name: TransformationDelayLevel
  nameWithType: SynchronizationRule<IB, IB>.TransformationDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of IB, IB).TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.OutputDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.OutputDelayLevel
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  name: OutputDelayLevel
  nameWithType: SynchronizationRule<IB, IB>.OutputDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of IB, IB).OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.ShouldCorrespond(A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.ShouldCorrespond(A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.ISynchronizationContext)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: ShouldCorrespond(IB, IB, ISynchronizationContext)
  nameWithType: SynchronizationRule<IB, IB>.ShouldCorrespond(IB, IB, ISynchronizationContext)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.ShouldCorrespond(A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: SynchronizationRule(Of IB, IB).ShouldCorrespond(IB, IB, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).ShouldCorrespond(A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule<IB, IB>.ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule(Of IB, IB).ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.LeftType
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.LeftType
  name: LeftType
  nameWithType: SynchronizationRule<IB, IB>.LeftType
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.LeftType
  nameWithType.vb: SynchronizationRule(Of IB, IB).LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).LeftType
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.RightType
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.RightType
  name: RightType
  nameWithType: SynchronizationRule<IB, IB>.RightType
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.RightType
  nameWithType.vb: SynchronizationRule(Of IB, IB).RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).RightType
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Action<IB, TDepLeft>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Action<IB, TDepLeft>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Action(Of IB, TDepLeft), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Action(Of IB, TDepLeft), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Action<IB, ITransformationContext, TDepLeft>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Action<IB, ITransformationContext, TDepLeft>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Action(Of IB, ITransformationContext, TDepLeft), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Action(Of IB, ITransformationContext, TDepLeft), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Action<IB, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Action<IB, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Action(Of IB, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Action(Of IB, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Action<IB, ITransformationContext, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Action<IB, ITransformationContext, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Action(Of IB, ITransformationContext, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Action(Of IB, ITransformationContext, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Action<IB, TDepLeft>, Expression<Func<IB, TDepRight>>, Action<IB, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Action<IB, TDepLeft>, Expression<Func<IB, TDepRight>>, Action<IB, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Action(Of IB, TDepLeft), Expression(Of Func(Of IB, TDepRight)), Action(Of IB, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Action(Of IB, TDepLeft), Expression(Of Func(Of IB, TDepRight)), Action(Of IB, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Action<IB, ITransformationContext, TDepLeft>, Expression<Func<IB, ITransformationContext, TDepRight>>, Action<IB, ITransformationContext, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Action<IB, ITransformationContext, TDepLeft>, Expression<Func<IB, ITransformationContext, TDepRight>>, Action<IB, ITransformationContext, TDepRight>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Action(Of IB, ITransformationContext, TDepLeft), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Action(Of IB, ITransformationContext, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Action(Of IB, ITransformationContext, TDepLeft), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Action(Of IB, ITransformationContext, TDepRight), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, TDepLeft>>, Expression<Func<IB, TDepRight>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, TDepLeft)), Expression(Of Func(Of IB, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, TDepLeft>>, Expression<Func<IB, ITransformationContext, TDepRight>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, TDepLeft)), Expression(Of Func(Of IB, ITransformationContext, TDepRight)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ICollectionExpression<TDepLeft>>>, Expression<Func<IB, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ICollectionExpression<TDepLeft>>>, Expression<Func<IB, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IB, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IB, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<IB, ITransformationContext, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<IB, ITransformationContext, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, IEnumerableExpression<TDepLeft>>>, Expression<Func<IB, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, IEnumerableExpression<TDepLeft>>>, Expression<Func<IB, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IB, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IB, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<IB, ITransformationContext, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<IB, ITransformationContext, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ICollection<TDepLeft>>>, Expression<Func<IB, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ICollection<TDepLeft>>>, Expression<Func<IB, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ICollection(Of TDepLeft))), Expression(Of Func(Of IB, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ICollection(Of TDepLeft))), Expression(Of Func(Of IB, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<IB, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IB, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<IB, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IB, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of IB, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLate<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLate<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLate<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLate(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLate(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeLate(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: Synchronize<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.Synchronize<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).Synchronize(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<IB, IB>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  name: SynchronizeMany<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeMany``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: SynchronizeMany<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  name: SynchronizeManyLate<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLate<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLate(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.ICollectionExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: SynchronizeManyLate<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>, Expression<Func<IB, IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLate<TValue>(Func<IB, ICollectionExpression<TValue>>, Func<IB, ICollectionExpression<TValue>>, Expression<Func<IB, IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLate(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of IB, ICollectionExpression(Of TValue)), Func(Of IB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IB, IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IB, ITransformationContext, IEnumerableExpression<TValue>>, Func<IB, ITransformationContext, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IB, ITransformationContext, IEnumerableExpression<TValue>>, Func<IB, ITransformationContext, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IB, ITransformationContext, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IB, ITransformationContext, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IB, ITransformationContext, IEnumerableExpression<TValue>>, Func<IB, ITransformationContext, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IB, ITransformationContext, IEnumerableExpression<TValue>>, Func<IB, ITransformationContext, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IB, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IB, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IB, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IB, IEnumerableExpression<TValue>>, Func<IB, ICollection<TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IB, IEnumerableExpression(Of TValue)), Func(Of IB, ICollection(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  name: SynchronizeManyRightToLeftOnly<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLefttOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLefttOnly``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeManyRightToLefttOnly<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLefttOnly<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLefttOnly<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLefttOnly(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLefttOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLefttOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLefttOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLefttOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{{TValue}}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.ICollection{``0}},System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IB, ICollection<TValue>>, Func<IB, IEnumerableExpression<TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection<TValue>>, System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IB, ICollection(Of TValue)), Func(Of IB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,``0})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,``0})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Action{A2BHelperWithoutContextNamespace.TypeB.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IB, TValue>>, Action<IB, TValue>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Action<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Action(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Action(Of IB, TValue), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>(System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeLateRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateRightToLeftOnly<TValue>(System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateRightToLeftOnly(Of TValue)(System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<IB, TValue>>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,{TValue}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,{TValue}}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeRightToLeftOnly``1(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,``0},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,``0}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>(Action<IB, TValue>, Expression<Func<IB, TValue>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>(System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, TValue>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, TValue>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, TValue), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of IB, TValue), Expression(Of Func(Of IB, TValue)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  name: SynchronizeOpaque(Func<IB, IB, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeOpaque(Func<IB, IB, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeOpaque(System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeOpaque(Func(Of IB, IB, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeOpaque(System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable), System.Boolean)
  name.vb: SynchronizeOpaque(Func(Of IB, IB, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeOpaque(System.Action{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  name: SynchronizeOpaque(Action<IB, IB, SynchronizationDirection, ISynchronizationContext>, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeOpaque(Action<IB, IB, SynchronizationDirection, ISynchronizationContext>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeOpaque(System.Action<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeOpaque(Action(Of IB, IB, SynchronizationDirection, ISynchronizationContext), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeOpaque(System.Action(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext), System.Boolean)
  name.vb: SynchronizeOpaque(Action(Of IB, IB, SynchronizationDirection, ISynchronizationContext), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateRightOutput(A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateRightOutput(A2BHelperWithoutContextNamespace.TypeA.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateRightOutput(IB, IEnumerable<IB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.CreateRightOutput(IB, IEnumerable<IB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.CreateRightOutput(A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.IEnumerable<A2BHelperWithoutContextNamespace.TypeB.IB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).CreateRightOutput(IB, IEnumerable(Of IB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).CreateRightOutput(A2BHelperWithoutContextNamespace.TypeA.IB, System.Collections.Generic.IEnumerable(Of A2BHelperWithoutContextNamespace.TypeB.IB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateRightOutput(IB, IEnumerable(Of IB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule<IB, IB>.CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule(Of IB, IB).CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateLeftOutput(A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.CreateLeftOutput(A2BHelperWithoutContextNamespace.TypeB.IB,System.Collections.Generic.IEnumerable{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateLeftOutput(IB, IEnumerable<IB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.CreateLeftOutput(IB, IEnumerable<IB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.CreateLeftOutput(A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.IEnumerable<A2BHelperWithoutContextNamespace.TypeA.IB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).CreateLeftOutput(IB, IEnumerable(Of IB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).CreateLeftOutput(A2BHelperWithoutContextNamespace.TypeB.IB, System.Collections.Generic.IEnumerable(Of A2BHelperWithoutContextNamespace.TypeA.IB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateLeftOutput(IB, IEnumerable(Of IB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule<IB, IB>.CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule(Of IB, IB).CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsRightToLeft(ICollection<IB>, ICollection<IB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeCollectionsRightToLeft(ICollection<IB>, ICollection<IB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection<A2BHelperWithoutContextNamespace.TypeA.IB>, System.Collections.Generic.ICollection<A2BHelperWithoutContextNamespace.TypeB.IB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeCollectionsRightToLeft(ICollection(Of IB), ICollection(Of IB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection(Of A2BHelperWithoutContextNamespace.TypeA.IB), System.Collections.Generic.ICollection(Of A2BHelperWithoutContextNamespace.TypeB.IB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsRightToLeft(ICollection(Of IB), ICollection(Of IB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeB.IB},System.Collections.Generic.ICollection{A2BHelperWithoutContextNamespace.TypeA.IB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsLeftToRight(ICollection<IB>, ICollection<IB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IB, IB>.SynchronizeCollectionsLeftToRight(ICollection<IB>, ICollection<IB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection<A2BHelperWithoutContextNamespace.TypeB.IB>, System.Collections.Generic.ICollection<A2BHelperWithoutContextNamespace.TypeA.IB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IB, IB).SynchronizeCollectionsLeftToRight(ICollection(Of IB), ICollection(Of IB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection(Of A2BHelperWithoutContextNamespace.TypeB.IB), System.Collections.Generic.ICollection(Of A2BHelperWithoutContextNamespace.TypeA.IB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsLeftToRight(ICollection(Of IB), ICollection(Of IB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule<IB, IB>.SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule(Of IB, IB).SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeA.IB,System.Boolean}},System.Linq.Expressions.Expression{System.Func{A2BHelperWithoutContextNamespace.TypeB.IB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{A2BHelperWithoutContextNamespace.TypeA.IB,A2BHelperWithoutContextNamespace.TypeB.IB}
  definition: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<IB, Boolean>>, Expression<Func<IB, Boolean>>)
  nameWithType: SynchronizationRule<IB, IB>.MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<IB, Boolean>>, Expression<Func<IB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IB, IB).MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of IB, Boolean)), Expression(Of Func(Of IB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeA.IB, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of A2BHelperWithoutContextNamespace.TypeB.IB, System.Boolean)))
  name.vb: MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of IB, Boolean)), Expression(Of Func(Of IB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule<IB, IB>.MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule<A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB>.MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule(Of IB, IB).MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule(Of A2BHelperWithoutContextNamespace.TypeA.IB, A2BHelperWithoutContextNamespace.TypeB.IB).MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeA.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeA.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: A2BHelperWithoutContextNamespace.TypeB.IB
    name: IB
    nameWithType: IB
    fullName: A2BHelperWithoutContextNamespace.TypeB.IB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.RightType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: SyncRule<TRule>()
  nameWithType: SynchronizationRuleBase.SyncRule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.SyncRule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)()
  name.vb: SyncRule(Of TRule)()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
    name: SyncRule<TRule>
    nameWithType: SynchronizationRuleBase.SyncRule<TRule>
    fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
    name: SyncRule(Of TRule)
    nameWithType: SynchronizationRuleBase.SyncRule(Of TRule)
    fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: Rule<TRule>()
  nameWithType: SynchronizationRuleBase.Rule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.Rule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)()
  name.vb: Rule(Of TRule)()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
    name: Rule<TRule>
    nameWithType: SynchronizationRuleBase.Rule<TRule>
    fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
    name: Rule(Of TRule)
    nameWithType: SynchronizationRuleBase.Rule(Of TRule)
    fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
- uid: NMF.Synchronizations.SynchronizationRule`2
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  name: SynchronizationJobs
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  name: LeftToRight
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  name: RightToLeft
  nameWithType: SynchronizationRule<TLeft, TRight>.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  name: TransformationDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  name: OutputDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftType
  name: LeftType
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftType
- uid: NMF.Synchronizations.SynchronizationRule`2.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightType
  name: RightType
  nameWithType: SynchronizationRule<TLeft, TRight>.RightType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightType
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  isExternal: true
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  isExternal: true
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  isExternal: true
  name: SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  isExternal: true
  name: SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyRightToLefttOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  isExternal: true
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  isExternal: true
  name: SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(System.Func<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(System.Func(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable), System.Boolean)
  name.vb: SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  isExternal: true
  name: SynchronizeOpaque(Action<TLeft, TRight, SynchronizationDirection, ISynchronizationContext>, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(Action<TLeft, TRight, SynchronizationDirection, ISynchronizationContext>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(System.Action<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(Action(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(System.Action(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext), System.Boolean)
  name.vb: SynchronizeOpaque(Action(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  isExternal: true
  name: CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable<TRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable(Of TRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule(Of TLeft, TRight).CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  isExternal: true
  name: CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable<TLeft>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable(Of TLeft), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  isExternal: true
  name: SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection<TLeft>, System.Collections.Generic.ICollection<TRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection(Of TLeft), System.Collections.Generic.ICollection(Of TRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  isExternal: true
  name: SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection<TRight>, System.Collections.Generic.ICollection<TLeft>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection(Of TRight), System.Collections.Generic.ICollection(Of TLeft), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: DeclareSynchronization()
  nameWithType: SynchronizationRuleBase.DeclareSynchronization()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
    name: DeclareSynchronization
    nameWithType: SynchronizationRuleBase.DeclareSynchronization
    fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
    name: DeclareSynchronization
    nameWithType: SynchronizationRuleBase.DeclareSynchronization
    fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization*
  commentId: Overload:A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization
  name: DeclareSynchronization
  nameWithType: A2BHelperWithoutContext.RuleB.DeclareSynchronization
  fullName: A2BHelperWithoutContextNamespace.A2BHelperWithoutContext.RuleB.DeclareSynchronization
