### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  id: SynchronizationDirection
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationDirection.LeftToRight
  - NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  - NMF.Synchronizations.SynchronizationDirection.LeftWins
  - NMF.Synchronizations.SynchronizationDirection.RightToLeft
  - NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  - NMF.Synchronizations.SynchronizationDirection.RightWins
  langs:
  - csharp
  - vb
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
  type: Enum
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SynchronizationDirection
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 8
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public enum SynchronizationDirection
    content.vb: Public Enum SynchronizationDirection
  extensionMethods:
  - NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRight
  id: LeftToRight
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftToRight
  nameWithType: SynchronizationDirection.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftToRight
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 10
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: LeftToRight = 0
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeft
  id: RightToLeft
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightToLeft
  nameWithType: SynchronizationDirection.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightToLeft
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 11
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: RightToLeft = 1
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  id: LeftToRightForced
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftToRightForced
  nameWithType: SynchronizationDirection.LeftToRightForced
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftToRightForced
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 12
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: LeftToRightForced = 2
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  id: RightToLeftForced
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightToLeftForced
  nameWithType: SynchronizationDirection.RightToLeftForced
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightToLeftForced
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 13
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: RightToLeftForced = 3
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Synchronizations.SynchronizationDirection.LeftWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftWins
  id: LeftWins
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftWins
  nameWithType: SynchronizationDirection.LeftWins
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftWins
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftWins
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 14
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: LeftWins = 4
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Synchronizations.SynchronizationDirection.RightWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightWins
  id: RightWins
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightWins
  nameWithType: SynchronizationDirection.RightWins
  fullName: NMF.Synchronizations.SynchronizationDirection.RightWins
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightWins
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 15
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: RightWins = 5
    return:
      type: NMF.Synchronizations.SynchronizationDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
- uid: NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  parent: NMF.Synchronizations.SynchronizationDirectionExtensions
  definition: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  name: IsLeftToRight()
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight()
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
    name: IsLeftToRight
    nameWithType: SynchronizationDirectionExtensions.IsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
    name: IsLeftToRight
    nameWithType: SynchronizationDirectionExtensions.IsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  parent: NMF.Synchronizations.SynchronizationDirectionExtensions
  definition: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  name: IsRightToLeft()
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft()
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
    name: IsRightToLeft
    nameWithType: SynchronizationDirectionExtensions.IsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
    name: IsRightToLeft
    nameWithType: SynchronizationDirectionExtensions.IsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  name: IsLeftToRight(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    nameWithType: SynchronizationDirectionExtensions.IsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    nameWithType: SynchronizationDirectionExtensions.IsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions
  commentId: T:NMF.Synchronizations.SynchronizationDirectionExtensions
  parent: NMF.Synchronizations
  name: SynchronizationDirectionExtensions
  nameWithType: SynchronizationDirectionExtensions
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  name: IsRightToLeft(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    nameWithType: SynchronizationDirectionExtensions.IsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    nameWithType: SynchronizationDirectionExtensions.IsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  parent: NMF.Synchronizations
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
