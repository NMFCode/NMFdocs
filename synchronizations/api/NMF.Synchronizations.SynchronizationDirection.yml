### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  id: SynchronizationDirection
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationDirection.CheckOnly
  - NMF.Synchronizations.SynchronizationDirection.LeftToRight
  - NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  - NMF.Synchronizations.SynchronizationDirection.LeftWins
  - NMF.Synchronizations.SynchronizationDirection.RightToLeft
  - NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  - NMF.Synchronizations.SynchronizationDirection.RightWins
  langs:
  - csharp
  - vb
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
  type: Enum
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SynchronizationDirection
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 11
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes the direction of a synchronization
  example: []
  syntax:
    content: public enum SynchronizationDirection
    content.vb: Public Enum SynchronizationDirection
  extensionMethods:
  - NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  - NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRight
  id: LeftToRight
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftToRight
  nameWithType: SynchronizationDirection.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftToRight
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 16
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in LHS are translated to RHS
  example: []
  syntax:
    content: LeftToRight = 0
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeft
  id: RightToLeft
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightToLeft
  nameWithType: SynchronizationDirection.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightToLeft
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 20
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in RHS are translated to LHS
  example: []
  syntax:
    content: RightToLeft = 1
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  id: LeftToRightForced
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftToRightForced
  nameWithType: SynchronizationDirection.LeftToRightForced
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftToRightForced
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 24
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in LHS are translated to RHS, RHS elements with no existing corresponding LHS element are deleted
  example: []
  syntax:
    content: LeftToRightForced = 2
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  id: RightToLeftForced
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightToLeftForced
  nameWithType: SynchronizationDirection.RightToLeftForced
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightToLeftForced
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 28
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in RHS are translated to LHS, LHS elements with no existing corresponding HS element are deleted
  example: []
  syntax:
    content: RightToLeftForced = 3
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.LeftWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftWins
  id: LeftWins
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: LeftWins
  nameWithType: SynchronizationDirection.LeftWins
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftWins
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftWins
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 32
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in LHS are translated to RHS and vice versa, in case of conflicts the LHS wins
  example: []
  syntax:
    content: LeftWins = 4
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.RightWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightWins
  id: RightWins
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: RightWins
  nameWithType: SynchronizationDirection.RightWins
  fullName: NMF.Synchronizations.SynchronizationDirection.RightWins
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightWins
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 36
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Elements existing in LHS are translated to RHS and vice versa, in case of conflicts the RHS wins
  example: []
  syntax:
    content: RightWins = 5
    return:
      type: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.CheckOnly
  commentId: F:NMF.Synchronizations.SynchronizationDirection.CheckOnly
  id: CheckOnly
  parent: NMF.Synchronizations.SynchronizationDirection
  langs:
  - csharp
  - vb
  name: CheckOnly
  nameWithType: SynchronizationDirection.CheckOnly
  fullName: NMF.Synchronizations.SynchronizationDirection.CheckOnly
  type: Field
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationDirection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CheckOnly
    path: src/Synchronizations/Synchronizations/SynchronizationDirection.cs
    startLine: 40
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: No changes are made, but only inconsistencies are found and reported
  example: []
  syntax:
    content: CheckOnly = 6
    return:
      type: NMF.Synchronizations.SynchronizationDirection
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  parent: NMF.Synchronizations.SynchronizationDirectionExtensions
  definition: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  name: IsLeftToRight(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
- uid: NMF.Synchronizations.SynchronizationDirection.NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  parent: NMF.Synchronizations.SynchronizationDirectionExtensions
  definition: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  name: IsRightToLeft(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  name: IsLeftToRight(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
    name: IsLeftToRight
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions
  commentId: T:NMF.Synchronizations.SynchronizationDirectionExtensions
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.SynchronizationDirectionExtensions.html
  name: SynchronizationDirectionExtensions
  nameWithType: SynchronizationDirectionExtensions
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  name: IsRightToLeft(SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft(SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
    name: IsRightToLeft
    href: NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: )
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.SynchronizationDirection.html
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
