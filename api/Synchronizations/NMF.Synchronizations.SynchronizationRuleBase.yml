### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  id: SynchronizationRuleBase
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationRuleBase.#ctor
  - NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - NMF.Synchronizations.SynchronizationRuleBase.LeftType
  - NMF.Synchronizations.SynchronizationRuleBase.RightType
  - NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  - NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  - NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  langs:
  - csharp
  - vb
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SynchronizationRuleBase
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 9
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public abstract class SynchronizationRuleBase
    content.vb: Public MustInherit Class SynchronizationRuleBase
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Synchronizations.SynchronizationRule`2
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  id: '#ctor'
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: SynchronizationRuleBase()
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase()
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 11
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: protected SynchronizationRuleBase()
    content.vb: Protected Sub New
  overload: NMF.Synchronizations.SynchronizationRuleBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  id: LeftType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftType
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 13
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public abstract Type LeftType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property LeftType As Type
  overload: NMF.Synchronizations.SynchronizationRuleBase.LeftType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.RightType
  id: RightType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightType
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 15
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public abstract Type RightType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property RightType As Type
  overload: NMF.Synchronizations.SynchronizationRuleBase.RightType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  id: DeclareSynchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: DeclareSynchronization()
  nameWithType: SynchronizationRuleBase.DeclareSynchronization()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclareSynchronization
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 17
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public abstract void DeclareSynchronization()
    content.vb: Public MustOverride Sub DeclareSynchronization
  overload: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  id: Synchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Synchronization
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 23
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public Synchronization Synchronization { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.Synchronization
    content.vb: Public ReadOnly Property Synchronization As Synchronization
  overload: NMF.Synchronizations.SynchronizationRuleBase.Synchronization*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  id: SyncRule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: SyncRule<TRule>()
  nameWithType: SynchronizationRuleBase.SyncRule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SyncRule
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 25
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: >-
      public TRule SyncRule<TRule>()
          where TRule : SynchronizationRuleBase
    typeParameters:
    - id: TRule
    return:
      type: '{TRule}'
    content.vb: Public Function SyncRule(Of TRule As SynchronizationRuleBase) As TRule
  overload: NMF.Synchronizations.SynchronizationRuleBase.SyncRule*
  nameWithType.vb: SynchronizationRuleBase.SyncRule(Of TRule)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)()
  name.vb: SyncRule(Of TRule)()
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  id: Rule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: Rule<TRule>()
  nameWithType: SynchronizationRuleBase.Rule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Rule
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 30
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: >-
      public TRule Rule<TRule>()
          where TRule : GeneralTransformationRule
    typeParameters:
    - id: TRule
    return:
      type: '{TRule}'
    content.vb: Public Function Rule(Of TRule As GeneralTransformationRule) As TRule
  overload: NMF.Synchronizations.SynchronizationRuleBase.Rule*
  nameWithType.vb: SynchronizationRuleBase.Rule(Of TRule)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)()
  name.vb: Rule(Of TRule)()
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.RightType
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  name: DeclareSynchronization
  nameWithType: SynchronizationRuleBase.DeclareSynchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.Synchronization
  commentId: T:NMF.Synchronizations.Synchronization
  parent: NMF.Synchronizations
  name: Synchronization
  nameWithType: Synchronization
  fullName: NMF.Synchronizations.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.SyncRule
  name: SyncRule
  nameWithType: SynchronizationRuleBase.SyncRule
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule
- uid: '{TRule}'
  commentId: '!:TRule'
  definition: TRule
  name: TRule
  nameWithType: TRule
  fullName: TRule
- uid: TRule
  name: TRule
  nameWithType: TRule
  fullName: TRule
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Rule
  name: Rule
  nameWithType: SynchronizationRuleBase.Rule
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule
