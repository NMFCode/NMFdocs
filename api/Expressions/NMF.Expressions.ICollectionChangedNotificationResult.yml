### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.ICollectionChangedNotificationResult
  commentId: T:NMF.Expressions.ICollectionChangedNotificationResult
  id: ICollectionChangedNotificationResult
  parent: NMF.Expressions
  children:
  - NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  - NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  - NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  - NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  - NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  - NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  langs:
  - csharp
  - vb
  name: ICollectionChangedNotificationResult
  nameWithType: ICollectionChangedNotificationResult
  fullName: NMF.Expressions.ICollectionChangedNotificationResult
  type: Interface
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ICollectionChangedNotificationResult
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 10
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: 'public interface ICollectionChangedNotificationResult : INotificationResult'
    content.vb: >-
      Public Interface ICollectionChangedNotificationResult

          Inherits INotificationResult
  inheritedMembers:
  - NMF.Expressions.INotificationResult.Source
  - NMF.Expressions.INotificationResult.Changed
  - NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  - NMF.Expressions.INotificationResult.FreeReference
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  id: IsReset
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: IsReset
  nameWithType: ICollectionChangedNotificationResult.IsReset
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsReset
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 12
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: bool IsReset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReset As Boolean
  overload: NMF.Expressions.ICollectionChangedNotificationResult.IsReset*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  id: AddedItems
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: AddedItems
  nameWithType: ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AddedItems
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 14
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: IList AddedItems { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: ReadOnly Property AddedItems As IList
  overload: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  id: RemovedItems
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: RemovedItems
  nameWithType: ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RemovedItems
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 16
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: IList RemovedItems { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: ReadOnly Property RemovedItems As IList
  overload: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  id: MovedItems
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: MovedItems
  nameWithType: ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MovedItems
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 18
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: IList MovedItems { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: ReadOnly Property MovedItems As IList
  overload: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  id: OldItemsStartIndex
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: OldItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.OldItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldItemsStartIndex
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 20
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: int OldItemsStartIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property OldItemsStartIndex As Integer
  overload: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  id: NewItemsStartIndex
  parent: NMF.Expressions.ICollectionChangedNotificationResult
  langs:
  - csharp
  - vb
  name: NewItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.NewItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NewItemsStartIndex
    path: src/Expressions/Expressions/Execution/CollectionChangedNotificationResult.cs
    startLine: 22
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: int NewItemsStartIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property NewItemsStartIndex As Integer
  overload: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Expressions.INotificationResult.Source
  commentId: P:NMF.Expressions.INotificationResult.Source
  parent: NMF.Expressions.INotificationResult
  name: Source
  nameWithType: INotificationResult.Source
  fullName: NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.INotificationResult.Changed
  commentId: P:NMF.Expressions.INotificationResult.Changed
  parent: NMF.Expressions.INotificationResult
  name: Changed
  nameWithType: INotificationResult.Changed
  fullName: NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  commentId: M:NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  parent: NMF.Expressions.INotificationResult
  isExternal: true
  name: IncreaseReferences(Int32)
  nameWithType: INotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
    nameWithType: INotificationResult.IncreaseReferences
    fullName: NMF.Expressions.INotificationResult.IncreaseReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
    nameWithType: INotificationResult.IncreaseReferences
    fullName: NMF.Expressions.INotificationResult.IncreaseReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotificationResult.FreeReference
  commentId: M:NMF.Expressions.INotificationResult.FreeReference
  parent: NMF.Expressions.INotificationResult
  name: FreeReference()
  nameWithType: INotificationResult.FreeReference()
  fullName: NMF.Expressions.INotificationResult.FreeReference()
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
    nameWithType: INotificationResult.FreeReference
    fullName: NMF.Expressions.INotificationResult.FreeReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
    nameWithType: INotificationResult.FreeReference
    fullName: NMF.Expressions.INotificationResult.FreeReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: NMF.Expressions.ICollectionChangedNotificationResult.IsReset*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  name: IsReset
  nameWithType: ICollectionChangedNotificationResult.IsReset
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  name: AddedItems
  nameWithType: ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  name: RemovedItems
  nameWithType: ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  name: MovedItems
  nameWithType: ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  name: OldItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.OldItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex*
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  name: NewItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.NewItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
