### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.EClassEOperationsCollection
  commentId: T:NMF.Interop.Ecore.EClassEOperationsCollection
  id: EClassEOperationsCollection
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.EClassEOperationsCollection.#ctor(NMF.Interop.Ecore.IEClass)
  - NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  langs:
  - csharp
  - vb
  name: EClassEOperationsCollection
  nameWithType: EClassEOperationsCollection
  fullName: NMF.Interop.Ecore.EClassEOperationsCollection
  type: Class
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClassEOperationsCollection
    path: src/Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
    startLine: 33
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: 'public class EClassEOperationsCollection : ObservableOppositeOrderedSet<IEClass, IEOperation>, INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, IOrderedSetExpression<IEOperation>, IListExpression<IEOperation>, ISetExpression<IEOperation>, ICollectionExpression<IEOperation>, IEnumerableExpression<IEOperation>, IOrderedSet<IEOperation>, IList<IEOperation>, ISet<IEOperation>, ICollection<IEOperation>, IEnumerable<IEOperation>, ICollectionExpression, IEnumerableExpression, IList, ICollection, IEnumerable'
    content.vb: Public Class EClassEOperationsCollection Inherits ObservableOppositeOrderedSet(Of IEClass, IEOperation) Implements INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, IOrderedSetExpression(Of IEOperation), IListExpression(Of IEOperation), ISetExpression(Of IEOperation), ICollectionExpression(Of IEOperation), IEnumerableExpression(Of IEOperation), IOrderedSet(Of IEOperation), IList(Of IEOperation), ISet(Of IEOperation), ICollection(Of IEOperation), IEnumerable(Of IEOperation), ICollectionExpression, IEnumerableExpression, IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged
  - NMF.Collections.ObjectModel.INotifyCollectionChanging
  - System.ComponentModel.INotifyPropertyChanged
  - NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
  - NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEOperation}
  - NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEOperation}
  - NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEOperation}
  - NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEOperation}
  - NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEOperation}
  - System.Collections.Generic.IList{NMF.Interop.Ecore.IEOperation}
  - System.Collections.Generic.ISet{NMF.Interop.Ecore.IEOperation}
  - System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEOperation}
  - System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation}
  - NMF.Expressions.ICollectionExpression
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Parent
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Clear
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.ToString
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnPropertyChanged(System.String)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanged
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanging
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.PropertyChanged
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.AsNotifiable
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.RequireEvents
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentAdd(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Clear
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentClear
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentRemove(NMF.Interop.Ecore.IEOperation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.ToString
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.GetEnumerator
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.IndexOf(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.RemoveAt(System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Item(System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.AsReadOnly
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Items
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Contains(NMF.Interop.Ecore.IEOperation)
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.CopyTo(NMF.Interop.Ecore.IEOperation[],System.Int32)
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Count
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NMF.Interop.Ecore.EClassEOperationsCollection.#ctor(NMF.Interop.Ecore.IEClass)
  commentId: M:NMF.Interop.Ecore.EClassEOperationsCollection.#ctor(NMF.Interop.Ecore.IEClass)
  id: '#ctor(NMF.Interop.Ecore.IEClass)'
  parent: NMF.Interop.Ecore.EClassEOperationsCollection
  langs:
  - csharp
  - vb
  name: EClassEOperationsCollection(IEClass)
  nameWithType: EClassEOperationsCollection.EClassEOperationsCollection(IEClass)
  fullName: NMF.Interop.Ecore.EClassEOperationsCollection.EClassEOperationsCollection(NMF.Interop.Ecore.IEClass)
  type: Constructor
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: public EClassEOperationsCollection(IEClass parent)
    parameters:
    - id: parent
      type: NMF.Interop.Ecore.IEClass
    content.vb: Public Sub New(parent As IEClass)
  overload: NMF.Interop.Ecore.EClassEOperationsCollection.#ctor*
  nameWithType.vb: EClassEOperationsCollection.New(IEClass)
  fullName.vb: NMF.Interop.Ecore.EClassEOperationsCollection.New(NMF.Interop.Ecore.IEClass)
  name.vb: New(IEClass)
- uid: NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  commentId: M:NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  id: SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  parent: NMF.Interop.Ecore.EClassEOperationsCollection
  langs:
  - csharp
  - vb
  name: SetOpposite(IEOperation, IEClass)
  nameWithType: EClassEOperationsCollection.SetOpposite(IEOperation, IEClass)
  fullName: NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite(NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEClass)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetOpposite
    path: src/Interop/EcoreInterop/Model/EClassEOperationsCollection.cs
    startLine: 49
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  example: []
  syntax:
    content: protected override void SetOpposite(IEOperation item, IEClass parent)
    parameters:
    - id: item
      type: NMF.Interop.Ecore.IEOperation
    - id: parent
      type: NMF.Interop.Ecore.IEClass
    content.vb: Protected Overrides Sub SetOpposite(item As IEOperation, parent As IEClass)
  overridden: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  overload: NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite*
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  href: NMF.html
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Interop
    name: Interop
    href: NMF.Interop.html
  - name: .
  - uid: NMF.Interop.Ecore
    name: Ecore
    href: NMF.Interop.Ecore.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Interop
    name: Interop
    href: NMF.Interop.html
  - name: .
  - uid: NMF.Interop.Ecore
    name: Ecore
    href: NMF.Interop.Ecore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.DecoratedSet`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: DecoratedSet<IEOperation>
  nameWithType: DecoratedSet<IEOperation>
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: DecoratedSet(Of IEOperation)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation)
  name.vb: DecoratedSet(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.OrderedSet`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: OrderedSet<IEOperation>
  nameWithType: OrderedSet<IEOperation>
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: OrderedSet(Of IEOperation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation)
  name.vb: OrderedSet(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: ObservableOrderedSet<IEOperation>
  nameWithType: ObservableOrderedSet<IEOperation>
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ObservableOrderedSet(Of IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation)
  name.vb: ObservableOrderedSet(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  href: NMF.Interop.Ecore.IEClass.html
  name: ObservableOppositeOrderedSet<IEClass, IEOperation>
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation)
  name.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
  - name: <
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    href: NMF.Interop.Ecore.IEClass.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    href: NMF.Interop.Ecore.IEClass.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
  commentId: T:NMF.Collections.ObjectModel.INotifyCollectionChanging
  parent: NMF.Collections.ObjectModel
  name: INotifyCollectionChanging
  nameWithType: INotifyCollectionChanging
  fullName: NMF.Collections.ObjectModel.INotifyCollectionChanging
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: IOrderedSetExpression<IEOperation>
  nameWithType: IOrderedSetExpression<IEOperation>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IOrderedSetExpression(Of IEOperation)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IOrderedSetExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Expressions
  definition: NMF.Expressions.IListExpression`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: IListExpression<IEOperation>
  nameWithType: IListExpression<IEOperation>
  fullName: NMF.Expressions.IListExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IListExpression(Of IEOperation)
  fullName.vb: NMF.Expressions.IListExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IListExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Expressions
  definition: NMF.Expressions.ISetExpression`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: ISetExpression<IEOperation>
  nameWithType: ISetExpression<IEOperation>
  fullName: NMF.Expressions.ISetExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ISetExpression(Of IEOperation)
  fullName.vb: NMF.Expressions.ISetExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: ISetExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: ICollectionExpression<IEOperation>
  nameWithType: ICollectionExpression<IEOperation>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ICollectionExpression(Of IEOperation)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: ICollectionExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: IEnumerableExpression<IEOperation>
  nameWithType: IEnumerableExpression<IEOperation>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IEnumerableExpression(Of IEOperation)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IEnumerableExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSet`1
  href: NMF.Interop.Ecore.IEOperation.html
  name: IOrderedSet<IEOperation>
  nameWithType: IOrderedSet<IEOperation>
  fullName: NMF.Collections.Generic.IOrderedSet<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IOrderedSet(Of IEOperation)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IOrderedSet(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: System.Collections.Generic.IList{NMF.Interop.Ecore.IEOperation}
  commentId: T:System.Collections.Generic.IList{NMF.Interop.Ecore.IEOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<IEOperation>
  nameWithType: IList<IEOperation>
  fullName: System.Collections.Generic.IList<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IList(Of IEOperation)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IList(Of IEOperation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: System.Collections.Generic.ISet{NMF.Interop.Ecore.IEOperation}
  commentId: T:System.Collections.Generic.ISet{NMF.Interop.Ecore.IEOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<IEOperation>
  nameWithType: ISet<IEOperation>
  fullName: System.Collections.Generic.ISet<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ISet(Of IEOperation)
  fullName.vb: System.Collections.Generic.ISet(Of NMF.Interop.Ecore.IEOperation)
  name.vb: ISet(Of IEOperation)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEOperation}
  commentId: T:System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IEOperation>
  nameWithType: ICollection<IEOperation>
  fullName: System.Collections.Generic.ICollection<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: ICollection(Of IEOperation)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Interop.Ecore.IEOperation)
  name.vb: ICollection(Of IEOperation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IEOperation>
  nameWithType: IEnumerable<IEOperation>
  fullName: System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IEnumerable(Of IEOperation)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IEnumerable(Of IEOperation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Expressions.ICollectionExpression
  commentId: T:NMF.Expressions.ICollectionExpression
  parent: NMF.Expressions
  name: ICollectionExpression
  nameWithType: ICollectionExpression
  fullName: NMF.Expressions.ICollectionExpression
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Parent
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Parent
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: SetOpposite(IEOperation, IEClass)
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.SetOpposite(IEOperation, IEClass)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.SetOpposite(NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEClass)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).SetOpposite(IEOperation, IEClass)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).SetOpposite(NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEClass)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
    name: SetOpposite
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    href: NMF.Interop.Ecore.IEClass.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.SetOpposite(NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEClass)
    name: SetOpposite
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    href: NMF.Interop.Ecore.IEClass.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Clear
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Clear()
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Add(IEOperation)
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Add(IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Add(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Add(IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Add(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
    name: Add
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
    name: Add
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Insert(int, IEOperation)
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Insert(int, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Insert(int, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Insert(Integer, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Insert(Integer, NMF.Interop.Ecore.IEOperation)
  name.vb: Insert(Integer, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: Insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: Insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Remove(IEOperation, int)
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Remove(IEOperation, int)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Remove(NMF.Interop.Ecore.IEOperation, int)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Remove(IEOperation, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Remove(NMF.Interop.Ecore.IEOperation, Integer)
  name.vb: Remove(IEOperation, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Replace(int, IEOperation, IEOperation)
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.Replace(int, IEOperation, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.Replace(int, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).Replace(Integer, IEOperation, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).Replace(Integer, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  name.vb: Replace(Integer, IEOperation, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: Replace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: Replace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.ToString
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.ToString
  name: ToString()
  nameWithType: ObservableOppositeOrderedSet<IEClass, IEOperation>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation>.ToString()
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEClass, IEOperation).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEClass, NMF.Interop.Ecore.IEOperation).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEClass,NMF.Interop.Ecore.IEOperation}.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnPropertyChanged(System.String)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OnPropertyChanged(string)
  nameWithType: ObservableOrderedSet<IEOperation>.OnPropertyChanged(string)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.OnPropertyChanged(string)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<IEOperation>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<IEOperation>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanged
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableOrderedSet<IEOperation>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.CollectionChanged
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.CollectionChanging
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableOrderedSet<IEOperation>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.CollectionChanging
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.PropertyChanged
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableOrderedSet<IEOperation>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.PropertyChanged
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableOrderedSet<IEOperation>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.RequireEvents
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableOrderedSet<IEOperation>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.RequireEvents()
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Add(IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.Add(IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.Add(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).Add(IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).Add(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
    name: Add
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Add(NMF.Interop.Ecore.IEOperation)
    name: Add
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentAdd(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentAdd(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: SilentAdd(IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.SilentAdd(IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.SilentAdd(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).SilentAdd(IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).SilentAdd(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentAdd(NMF.Interop.Ecore.IEOperation)
    name: SilentAdd
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentAdd(NMF.Interop.Ecore.IEOperation)
    name: SilentAdd
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Insert(int, IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.Insert(int, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.Insert(int, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).Insert(Integer, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).Insert(Integer, NMF.Interop.Ecore.IEOperation)
  name.vb: Insert(Integer, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: Insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Insert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: Insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SilentInsert(int, IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.SilentInsert(int, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.SilentInsert(int, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).SilentInsert(Integer, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).SilentInsert(Integer, NMF.Interop.Ecore.IEOperation)
  name.vb: SilentInsert(Integer, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: SilentInsert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEOperation)
    name: SilentInsert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Clear
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  name: Clear()
  nameWithType: ObservableOrderedSet<IEOperation>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.Clear()
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentClear
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableOrderedSet<IEOperation>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.SilentClear()
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentClear
    name: SilentClear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentClear
    name: SilentClear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Remove(IEOperation, int)
  nameWithType: ObservableOrderedSet<IEOperation>.Remove(IEOperation, int)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.Remove(NMF.Interop.Ecore.IEOperation, int)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).Remove(IEOperation, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).Remove(NMF.Interop.Ecore.IEOperation, Integer)
  name.vb: Remove(IEOperation, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentRemove(NMF.Interop.Ecore.IEOperation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentRemove(NMF.Interop.Ecore.IEOperation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  href: NMF.Interop.Ecore.IEOperation.html
  name: SilentRemove(IEOperation, int)
  nameWithType: ObservableOrderedSet<IEOperation>.SilentRemove(IEOperation, int)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.SilentRemove(NMF.Interop.Ecore.IEOperation, int)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).SilentRemove(IEOperation, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).SilentRemove(NMF.Interop.Ecore.IEOperation, Integer)
  name.vb: SilentRemove(IEOperation, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentRemove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: SilentRemove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentRemove(NMF.Interop.Ecore.IEOperation,System.Int32)
    name: SilentRemove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Replace(int, IEOperation, IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.Replace(int, IEOperation, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.Replace(int, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).Replace(Integer, IEOperation, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).Replace(Integer, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  name.vb: Replace(Integer, IEOperation, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: Replace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.Replace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: Replace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SilentReplace(int, IEOperation, IEOperation)
  nameWithType: ObservableOrderedSet<IEOperation>.SilentReplace(int, IEOperation, IEOperation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.SilentReplace(int, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).SilentReplace(Integer, IEOperation, IEOperation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).SilentReplace(Integer, NMF.Interop.Ecore.IEOperation, NMF.Interop.Ecore.IEOperation)
  name.vb: SilentReplace(Integer, IEOperation, IEOperation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: SilentReplace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEOperation,NMF.Interop.Ecore.IEOperation)
    name: SilentReplace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: ','
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.ToString
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.ToString
  name: ToString()
  nameWithType: ObservableOrderedSet<IEOperation>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEOperation>.ToString()
  nameWithType.vb: ObservableOrderedSet(Of IEOperation).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEOperation).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEOperation}.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Remove(IEOperation)
  nameWithType: OrderedSet<IEOperation>.Remove(IEOperation)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.Remove(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: OrderedSet(Of IEOperation).Remove(IEOperation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).Remove(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Remove(NMF.Interop.Ecore.IEOperation)
    name: Remove
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.GetEnumerator
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<IEOperation>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of IEOperation).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.IndexOf(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.IndexOf(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: IndexOf(IEOperation)
  nameWithType: OrderedSet<IEOperation>.IndexOf(IEOperation)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.IndexOf(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: OrderedSet(Of IEOperation).IndexOf(IEOperation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).IndexOf(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.IndexOf(NMF.Interop.Ecore.IEOperation)
    name: IndexOf
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.IndexOf(NMF.Interop.Ecore.IEOperation)
    name: IndexOf
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.RemoveAt(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: RemoveAt(int)
  nameWithType: OrderedSet<IEOperation>.RemoveAt(int)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.RemoveAt(int)
  nameWithType.vb: OrderedSet(Of IEOperation).RemoveAt(Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.RemoveAt(System.Int32)
    name: RemoveAt
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.RemoveAt(System.Int32)
    name: RemoveAt
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Item(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: OrderedSet<IEOperation>.this[int]
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.this[int]
  nameWithType.vb: OrderedSet(Of IEOperation).this[](Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.Item(System.Int32)
    name: this[]
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.AsReadOnly
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<IEOperation>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEOperation>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of IEOperation).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEOperation).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.AsReadOnly
    name: AsReadOnly
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEOperation}.AsReadOnly
    name: AsReadOnly
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Items
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<IEOperation>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.Items
  nameWithType.vb: DecoratedSet(Of IEOperation).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).Items
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: ExceptWith(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.ExceptWith(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.ExceptWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).ExceptWith(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).ExceptWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: ExceptWith(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IntersectWith(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.IntersectWith(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.IntersectWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).IntersectWith(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).IntersectWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: IntersectWith(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSubsetOf(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.IsProperSubsetOf(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).IsProperSubsetOf(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: IsProperSubsetOf(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSupersetOf(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.IsProperSupersetOf(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).IsProperSupersetOf(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: IsProperSupersetOf(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSubsetOf(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.IsSubsetOf(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.IsSubsetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).IsSubsetOf(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).IsSubsetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: IsSubsetOf(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSupersetOf(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.IsSupersetOf(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.IsSupersetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).IsSupersetOf(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).IsSupersetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: IsSupersetOf(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Overlaps(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.Overlaps(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.Overlaps(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).Overlaps(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).Overlaps(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: Overlaps(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SetEquals(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.SetEquals(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.SetEquals(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).SetEquals(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).SetEquals(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: SetEquals(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SymmetricExceptWith(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.SymmetricExceptWith(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).SymmetricExceptWith(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: SymmetricExceptWith(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: UnionWith(IEnumerable<IEOperation>)
  nameWithType: DecoratedSet<IEOperation>.UnionWith(IEnumerable<IEOperation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.UnionWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEOperation>)
  nameWithType.vb: DecoratedSet(Of IEOperation).UnionWith(IEnumerable(Of IEOperation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).UnionWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEOperation))
  name.vb: UnionWith(IEnumerable(Of IEOperation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEOperation})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Contains(NMF.Interop.Ecore.IEOperation)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Contains(NMF.Interop.Ecore.IEOperation)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  href: NMF.Interop.Ecore.IEOperation.html
  name: Contains(IEOperation)
  nameWithType: DecoratedSet<IEOperation>.Contains(IEOperation)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.Contains(NMF.Interop.Ecore.IEOperation)
  nameWithType.vb: DecoratedSet(Of IEOperation).Contains(IEOperation)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).Contains(NMF.Interop.Ecore.IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Contains(NMF.Interop.Ecore.IEOperation)
    name: Contains
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Contains(NMF.Interop.Ecore.IEOperation)
    name: Contains
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.CopyTo(NMF.Interop.Ecore.IEOperation[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.CopyTo(NMF.Interop.Ecore.IEOperation[],System.Int32)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  href: NMF.Interop.Ecore.IEOperation.html
  name: CopyTo(IEOperation[], int)
  nameWithType: DecoratedSet<IEOperation>.CopyTo(IEOperation[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.CopyTo(NMF.Interop.Ecore.IEOperation[], int)
  nameWithType.vb: DecoratedSet(Of IEOperation).CopyTo(IEOperation(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).CopyTo(NMF.Interop.Ecore.IEOperation(), Integer)
  name.vb: CopyTo(IEOperation(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.CopyTo(NMF.Interop.Ecore.IEOperation[],System.Int32)
    name: CopyTo
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.CopyTo(NMF.Interop.Ecore.IEOperation[],System.Int32)
    name: CopyTo
  - name: (
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    href: NMF.Interop.Ecore.IEOperation.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}.Count
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEOperation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<IEOperation>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEOperation>.Count
  nameWithType.vb: DecoratedSet(Of IEOperation).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEOperation).Count
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Collections.Generic.DecoratedSet`1
  commentId: T:NMF.Collections.Generic.DecoratedSet`1
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
- uid: NMF.Collections.Generic.OrderedSet`1
  commentId: T:NMF.Collections.Generic.OrderedSet`1
  name: OrderedSet<T>
  nameWithType: OrderedSet<T>
  fullName: NMF.Collections.Generic.OrderedSet<T>
  nameWithType.vb: OrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T)
  name.vb: OrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
  commentId: T:NMF.Collections.ObjectModel.ObservableOrderedSet`1
  name: ObservableOrderedSet<T>
  nameWithType: ObservableOrderedSet<T>
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>
  nameWithType.vb: ObservableOrderedSet(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T)
  name.vb: ObservableOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  name: ObservableOppositeOrderedSet<TParent, TCollected>
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected)
  name.vb: ObservableOppositeOrderedSet(Of TParent, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
  - name: <
  - name: TParent
  - name: ','
  - name: " "
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
  - name: (
  - name: Of
  - name: " "
  - name: TParent
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IListExpression`1
  commentId: T:NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  nameWithType: IListExpression<T>
  fullName: NMF.Expressions.IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  name.vb: IListExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Expressions.ISetExpression`1
  commentId: T:NMF.Expressions.ISetExpression`1
  name: ISetExpression<T>
  nameWithType: ISetExpression<T>
  fullName: NMF.Expressions.ISetExpression<T>
  nameWithType.vb: ISetExpression(Of T)
  fullName.vb: NMF.Expressions.ISetExpression(Of T)
  name.vb: ISetExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.IOrderedSet`1
  commentId: T:NMF.Collections.Generic.IOrderedSet`1
  name: IOrderedSet<T>
  nameWithType: IOrderedSet<T>
  fullName: NMF.Collections.Generic.IOrderedSet<T>
  nameWithType.vb: IOrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of T)
  name.vb: IOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Parent
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  name: SetOpposite(TCollected, TParent)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - name: TParent
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - name: TParent
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Clear()
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  name: Add(TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Insert(int, TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Insert(int, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Insert(int, TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Insert(Integer, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Insert(Integer, TCollected)
  name.vb: Insert(Integer, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Remove(TCollected, int)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Remove(TCollected, int)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Remove(TCollected, int)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, Integer)
  name.vb: Remove(TCollected, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Replace(int, TCollected, TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Replace(int, TCollected, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Replace(int, TCollected, TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Replace(Integer, TCollected, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Replace(Integer, TCollected, TCollected)
  name.vb: Replace(Integer, TCollected, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.ToString
  name: ToString()
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.ToString()
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OnPropertyChanged(string)
  nameWithType: ObservableOrderedSet<T>.OnPropertyChanged(string)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnPropertyChanged(string)
  nameWithType.vb: ObservableOrderedSet(Of T).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableOrderedSet<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.CollectionChanged
  nameWithType.vb: ObservableOrderedSet(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableOrderedSet<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.CollectionChanging
  nameWithType.vb: ObservableOrderedSet(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableOrderedSet<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.PropertyChanged
  nameWithType.vb: ObservableOrderedSet(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableOrderedSet<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableOrderedSet<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.RequireEvents()
  nameWithType.vb: ObservableOrderedSet(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  name: Add(T)
  nameWithType: ObservableOrderedSet<T>.Add(T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Add(T)
  nameWithType.vb: ObservableOrderedSet(Of T).Add(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  name: SilentAdd(T)
  nameWithType: ObservableOrderedSet<T>.SilentAdd(T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentAdd(T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentAdd(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentAdd(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Insert(int, T)
  nameWithType: ObservableOrderedSet<T>.Insert(int, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Insert(int, T)
  nameWithType.vb: ObservableOrderedSet(Of T).Insert(Integer, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SilentInsert(int, T)
  nameWithType: ObservableOrderedSet<T>.SilentInsert(int, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentInsert(int, T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentInsert(Integer, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentInsert(Integer, T)
  name.vb: SilentInsert(Integer, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  name: Clear()
  nameWithType: ObservableOrderedSet<T>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Clear()
  nameWithType.vb: ObservableOrderedSet(Of T).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableOrderedSet<T>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentClear()
  nameWithType.vb: ObservableOrderedSet(Of T).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Remove(T, int)
  nameWithType: ObservableOrderedSet<T>.Remove(T, int)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Remove(T, int)
  nameWithType.vb: ObservableOrderedSet(Of T).Remove(T, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Remove(T, Integer)
  name.vb: Remove(T, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SilentRemove(T, int)
  nameWithType: ObservableOrderedSet<T>.SilentRemove(T, int)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentRemove(T, int)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentRemove(T, Integer)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentRemove(T, Integer)
  name.vb: SilentRemove(T, Integer)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Replace(int, T, T)
  nameWithType: ObservableOrderedSet<T>.Replace(int, T, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Replace(int, T, T)
  nameWithType.vb: ObservableOrderedSet(Of T).Replace(Integer, T, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Replace(Integer, T, T)
  name.vb: Replace(Integer, T, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SilentReplace(int, T, T)
  nameWithType: ObservableOrderedSet<T>.SilentReplace(int, T, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentReplace(int, T, T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentReplace(Integer, T, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentReplace(Integer, T, T)
  name.vb: SilentReplace(Integer, T, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.ToString
  name: ToString()
  nameWithType: ObservableOrderedSet<T>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.ToString()
  nameWithType.vb: ObservableOrderedSet(Of T).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  name: Remove(T)
  nameWithType: OrderedSet<T>.Remove(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Remove(T)
  nameWithType.vb: OrderedSet(Of T).Remove(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<T>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<T>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of T).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  name: IndexOf(T)
  nameWithType: OrderedSet<T>.IndexOf(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.IndexOf(T)
  nameWithType.vb: OrderedSet(Of T).IndexOf(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).IndexOf(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: RemoveAt(int)
  nameWithType: OrderedSet<T>.RemoveAt(int)
  fullName: NMF.Collections.Generic.OrderedSet<T>.RemoveAt(int)
  nameWithType.vb: OrderedSet(Of T).RemoveAt(Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: OrderedSet<T>.this[int]
  fullName: NMF.Collections.Generic.OrderedSet<T>.this[int]
  nameWithType.vb: OrderedSet(Of T).this[](Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: this[]
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<T>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<T>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of T).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<T>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Items
  nameWithType.vb: DecoratedSet(Of T).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Items
- uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: ExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IntersectWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Overlaps(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.Overlaps(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SetEquals(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SetEquals(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: UnionWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.UnionWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  name: Contains(T)
  nameWithType: DecoratedSet<T>.Contains(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains(T)
  nameWithType.vb: DecoratedSet(Of T).Contains(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Contains(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: CopyTo(T[], int)
  nameWithType: DecoratedSet<T>.CopyTo(T[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo(T[], int)
  nameWithType.vb: DecoratedSet(Of T).CopyTo(T(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<T>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Count
  nameWithType.vb: DecoratedSet(Of T).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Count
- uid: NMF.Interop.Ecore.EClassEOperationsCollection.#ctor*
  commentId: Overload:NMF.Interop.Ecore.EClassEOperationsCollection.#ctor
  href: NMF.Interop.Ecore.EClassEOperationsCollection.html#NMF_Interop_Ecore_EClassEOperationsCollection__ctor_NMF_Interop_Ecore_IEClass_
  name: EClassEOperationsCollection
  nameWithType: EClassEOperationsCollection.EClassEOperationsCollection
  fullName: NMF.Interop.Ecore.EClassEOperationsCollection.EClassEOperationsCollection
  nameWithType.vb: EClassEOperationsCollection.New
  fullName.vb: NMF.Interop.Ecore.EClassEOperationsCollection.New
  name.vb: New
- uid: NMF.Interop.Ecore.IEClass
  commentId: T:NMF.Interop.Ecore.IEClass
  parent: NMF.Interop.Ecore
  href: NMF.Interop.Ecore.IEClass.html
  name: IEClass
  nameWithType: IEClass
  fullName: NMF.Interop.Ecore.IEClass
- uid: NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite*
  commentId: Overload:NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite
  href: NMF.Interop.Ecore.EClassEOperationsCollection.html#NMF_Interop_Ecore_EClassEOperationsCollection_SetOpposite_NMF_Interop_Ecore_IEOperation_NMF_Interop_Ecore_IEClass_
  name: SetOpposite
  nameWithType: EClassEOperationsCollection.SetOpposite
  fullName: NMF.Interop.Ecore.EClassEOperationsCollection.SetOpposite
- uid: NMF.Interop.Ecore.IEOperation
  commentId: T:NMF.Interop.Ecore.IEOperation
  parent: NMF.Interop.Ecore
  href: NMF.Interop.Ecore.IEOperation.html
  name: IEOperation
  nameWithType: IEOperation
  fullName: NMF.Interop.Ecore.IEOperation
