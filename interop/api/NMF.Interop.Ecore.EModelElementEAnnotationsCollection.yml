### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.EModelElementEAnnotationsCollection
  commentId: T:NMF.Interop.Ecore.EModelElementEAnnotationsCollection
  id: EModelElementEAnnotationsCollection
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor(NMF.Interop.Ecore.IEModelElement)
  - NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  langs:
  - csharp
  - vb
  name: EModelElementEAnnotationsCollection
  nameWithType: EModelElementEAnnotationsCollection
  fullName: NMF.Interop.Ecore.EModelElementEAnnotationsCollection
  type: Class
  source:
    remote:
      path: Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EModelElementEAnnotationsCollection
    path: src/Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
    startLine: 33
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: 'public class EModelElementEAnnotationsCollection : ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>, INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, IOrderedSetExpression<IEAnnotation>, IListExpression<IEAnnotation>, ISetExpression<IEAnnotation>, ICollectionExpression<IEAnnotation>, IEnumerableExpression<IEAnnotation>, IOrderedSet<IEAnnotation>, IList<IEAnnotation>, ISet<IEAnnotation>, ICollection<IEAnnotation>, IEnumerable<IEAnnotation>, ICollectionExpression, IEnumerableExpression, IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class EModelElementEAnnotationsCollection
          Inherits ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation)
          Implements INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, IOrderedSetExpression(Of IEAnnotation), IListExpression(Of IEAnnotation), ISetExpression(Of IEAnnotation), ICollectionExpression(Of IEAnnotation), IEnumerableExpression(Of IEAnnotation), IOrderedSet(Of IEAnnotation), IList(Of IEAnnotation), ISet(Of IEAnnotation), ICollection(Of IEAnnotation), IEnumerable(Of IEAnnotation), ICollectionExpression, IEnumerableExpression, IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged
  - NMF.Collections.ObjectModel.INotifyCollectionChanging
  - System.ComponentModel.INotifyPropertyChanged
  - NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  - System.Collections.Generic.IList{NMF.Interop.Ecore.IEAnnotation}
  - System.Collections.Generic.ISet{NMF.Interop.Ecore.IEAnnotation}
  - System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEAnnotation}
  - System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation}
  - NMF.Expressions.ICollectionExpression
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Parent
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Clear
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnPropertyChanged(System.String)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanged
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanging
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.PropertyChanged
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsNotifiable
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.RequireEvents
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentAdd(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Clear
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentClear
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentRemove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.GetEnumerator
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.IndexOf(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.RemoveAt(System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Item(System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Add(System.Object)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Contains(System.Object)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IndexOf(System.Object)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Insert(System.Int32,System.Object)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsFixedSize
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Remove(System.Object)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Item(System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#IsSynchronized
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#SyncRoot
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsReadOnly
  - NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsReadOnly
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Items
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#Add(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Contains(NMF.Interop.Ecore.IEAnnotation)
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.CopyTo(NMF.Interop.Ecore.IEAnnotation[],System.Int32)
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Count
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IEnumerable#GetEnumerator
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Clear
  - NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#RemoveAt(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor(NMF.Interop.Ecore.IEModelElement)
  commentId: M:NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor(NMF.Interop.Ecore.IEModelElement)
  id: '#ctor(NMF.Interop.Ecore.IEModelElement)'
  parent: NMF.Interop.Ecore.EModelElementEAnnotationsCollection
  langs:
  - csharp
  - vb
  name: EModelElementEAnnotationsCollection(IEModelElement)
  nameWithType: EModelElementEAnnotationsCollection.EModelElementEAnnotationsCollection(IEModelElement)
  fullName: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.EModelElementEAnnotationsCollection(NMF.Interop.Ecore.IEModelElement)
  type: Constructor
  source:
    remote:
      path: Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: public EModelElementEAnnotationsCollection(IEModelElement parent)
    parameters:
    - id: parent
      type: NMF.Interop.Ecore.IEModelElement
    content.vb: Public Sub New(parent As IEModelElement)
  overload: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  commentId: M:NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  id: SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  parent: NMF.Interop.Ecore.EModelElementEAnnotationsCollection
  langs:
  - csharp
  - vb
  name: SetOpposite(IEAnnotation, IEModelElement)
  nameWithType: EModelElementEAnnotationsCollection.SetOpposite(IEAnnotation, IEModelElement)
  fullName: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite(NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEModelElement)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetOpposite
    path: src/Interop/EcoreInterop/Model/EModelElementEAnnotationsCollection.cs
    startLine: 49
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: protected override void SetOpposite(IEAnnotation item, IEModelElement parent)
    parameters:
    - id: item
      type: NMF.Interop.Ecore.IEAnnotation
    - id: parent
      type: NMF.Interop.Ecore.IEModelElement
    content.vb: Protected Overrides Sub SetOpposite(item As IEAnnotation, parent As IEModelElement)
  overridden: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  overload: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.DecoratedSet`1
  name: DecoratedSet<IEAnnotation>
  nameWithType: DecoratedSet<IEAnnotation>
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: DecoratedSet(Of IEAnnotation)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: DecoratedSet(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    nameWithType: DecoratedSet
    fullName: NMF.Collections.Generic.DecoratedSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    nameWithType: DecoratedSet
    fullName: NMF.Collections.Generic.DecoratedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.OrderedSet`1
  name: OrderedSet<IEAnnotation>
  nameWithType: OrderedSet<IEAnnotation>
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: OrderedSet(Of IEAnnotation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: OrderedSet(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    nameWithType: OrderedSet
    fullName: NMF.Collections.Generic.OrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    nameWithType: OrderedSet
    fullName: NMF.Collections.Generic.OrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1
  name: ObservableOrderedSet<IEAnnotation>
  nameWithType: ObservableOrderedSet<IEAnnotation>
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: ObservableOrderedSet(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
    nameWithType: ObservableOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
    nameWithType: ObservableOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  name: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation)
  name.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
    nameWithType: ObservableOppositeOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEModelElement
    name: IEModelElement
    nameWithType: IEModelElement
    fullName: NMF.Interop.Ecore.IEModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
    nameWithType: ObservableOppositeOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEModelElement
    name: IEModelElement
    nameWithType: IEModelElement
    fullName: NMF.Interop.Ecore.IEModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
  commentId: T:NMF.Collections.ObjectModel.INotifyCollectionChanging
  parent: NMF.Collections.ObjectModel
  name: INotifyCollectionChanging
  nameWithType: INotifyCollectionChanging
  fullName: NMF.Collections.ObjectModel.INotifyCollectionChanging
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEAnnotation>
  nameWithType: IOrderedSetExpression<IEAnnotation>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IOrderedSetExpression(Of IEAnnotation)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IOrderedSetExpression(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Expressions.IListExpression{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Expressions
  definition: NMF.Expressions.IListExpression`1
  name: IListExpression<IEAnnotation>
  nameWithType: IListExpression<IEAnnotation>
  fullName: NMF.Expressions.IListExpression<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IListExpression(Of IEAnnotation)
  fullName.vb: NMF.Expressions.IListExpression(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IListExpression(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Expressions.ISetExpression{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Expressions
  definition: NMF.Expressions.ISetExpression`1
  name: ISetExpression<IEAnnotation>
  nameWithType: ISetExpression<IEAnnotation>
  fullName: NMF.Expressions.ISetExpression<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ISetExpression(Of IEAnnotation)
  fullName.vb: NMF.Expressions.ISetExpression(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: ISetExpression(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
    nameWithType: ISetExpression
    fullName: NMF.Expressions.ISetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
    nameWithType: ISetExpression
    fullName: NMF.Expressions.ISetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<IEAnnotation>
  nameWithType: ICollectionExpression<IEAnnotation>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ICollectionExpression(Of IEAnnotation)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: ICollectionExpression(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IEAnnotation>
  nameWithType: IEnumerableExpression<IEAnnotation>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IEnumerableExpression(Of IEAnnotation)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IEnumerableExpression(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:NMF.Collections.Generic.IOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSet`1
  name: IOrderedSet<IEAnnotation>
  nameWithType: IOrderedSet<IEAnnotation>
  fullName: NMF.Collections.Generic.IOrderedSet<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IOrderedSet(Of IEAnnotation)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IOrderedSet(Of IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    nameWithType: IOrderedSet
    fullName: NMF.Collections.Generic.IOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    nameWithType: IOrderedSet
    fullName: NMF.Collections.Generic.IOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:System.Collections.Generic.IList{NMF.Interop.Ecore.IEAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEAnnotation>
  nameWithType: IList<IEAnnotation>
  fullName: System.Collections.Generic.IList<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IList(Of IEAnnotation)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IList(Of IEAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:System.Collections.Generic.ISet{NMF.Interop.Ecore.IEAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<IEAnnotation>
  nameWithType: ISet<IEAnnotation>
  fullName: System.Collections.Generic.ISet<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ISet(Of IEAnnotation)
  fullName.vb: System.Collections.Generic.ISet(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: ISet(Of IEAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:System.Collections.Generic.ICollection{NMF.Interop.Ecore.IEAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IEAnnotation>
  nameWithType: ICollection<IEAnnotation>
  fullName: System.Collections.Generic.ICollection<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: ICollection(Of IEAnnotation)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: ICollection(Of IEAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEAnnotation>
  nameWithType: IEnumerable<IEAnnotation>
  fullName: System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>
  nameWithType.vb: IEnumerable(Of IEAnnotation)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation)
  name.vb: IEnumerable(Of IEAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ICollectionExpression
  commentId: T:NMF.Expressions.ICollectionExpression
  parent: NMF.Expressions
  name: ICollectionExpression
  nameWithType: ICollectionExpression
  fullName: NMF.Expressions.ICollectionExpression
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Parent
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Parent
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.SetOpposite(NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEModelElement)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  name: SetOpposite(IEAnnotation, IEModelElement)
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.SetOpposite(IEAnnotation, IEModelElement)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.SetOpposite(NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEModelElement)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).SetOpposite(IEAnnotation, IEModelElement)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).SetOpposite(NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEModelElement)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEModelElement
    name: IEModelElement
    nameWithType: IEModelElement
    fullName: NMF.Interop.Ecore.IEModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEModelElement
    name: IEModelElement
    nameWithType: IEModelElement
    fullName: NMF.Interop.Ecore.IEModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Clear
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Clear()
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Clear
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Clear
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  name: Add(IEAnnotation)
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Add(IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Add(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Add(IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Add(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Add
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Add
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  name: Insert(Int32, IEAnnotation)
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Insert(Int32, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Insert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Insert(Int32, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Insert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Insert
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Insert
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  name: Remove(IEAnnotation, Int32)
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Remove(IEAnnotation, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Remove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Remove(IEAnnotation, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Remove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Remove
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Remove
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet{NMF.Interop.Ecore.IEModelElement,NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  name: Replace(Int32, IEAnnotation, IEAnnotation)
  nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Replace(Int32, IEAnnotation, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Replace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Replace(Int32, IEAnnotation, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Replace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
    nameWithType: ObservableOppositeOrderedSet<IEModelElement, IEAnnotation>.Replace
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation>.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
    nameWithType: ObservableOppositeOrderedSet(Of IEModelElement, IEAnnotation).Replace
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of NMF.Interop.Ecore.IEModelElement, NMF.Interop.Ecore.IEAnnotation).Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnPropertyChanged(System.String)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: ObservableOrderedSet<IEAnnotation>.OnPropertyChanged(String)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnPropertyChanged(System.String)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: ObservableOrderedSet<IEAnnotation>.OnPropertyChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: ObservableOrderedSet(Of IEAnnotation).OnPropertyChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<IEAnnotation>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableOrderedSet<IEAnnotation>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableOrderedSet(Of IEAnnotation).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<IEAnnotation>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableOrderedSet<IEAnnotation>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableOrderedSet(Of IEAnnotation).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanged
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableOrderedSet<IEAnnotation>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.CollectionChanged
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.CollectionChanging
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableOrderedSet<IEAnnotation>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.CollectionChanging
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.PropertyChanged
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableOrderedSet<IEAnnotation>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.PropertyChanged
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableOrderedSet<IEAnnotation>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableOrderedSet<IEAnnotation>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableOrderedSet(Of IEAnnotation).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  name: IEnumerableExpression<IEAnnotation>.AsNotifiable()
  nameWithType: ObservableOrderedSet<IEAnnotation>.IEnumerableExpression<IEAnnotation>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.NMF.Expressions.IEnumerableExpression<NMF.Interop.Ecore.IEAnnotation>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: IEnumerableExpression<IEAnnotation>.AsNotifiable
    nameWithType: ObservableOrderedSet<IEAnnotation>.IEnumerableExpression<IEAnnotation>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.NMF.Expressions.IEnumerableExpression<NMF.Interop.Ecore.IEAnnotation>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableOrderedSet(Of IEAnnotation).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  nameWithType: ObservableOrderedSet<IEAnnotation>.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: IEnumerableExpression.AsNotifiable
    nameWithType: ObservableOrderedSet<IEAnnotation>.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression.AsNotifiable
    nameWithType: ObservableOrderedSet(Of IEAnnotation).NMF.Expressions.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.RequireEvents
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableOrderedSet<IEAnnotation>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.RequireEvents()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableOrderedSet<IEAnnotation>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableOrderedSet(Of IEAnnotation).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Add(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  name: Add(IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.Add(IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Add(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).Add(IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Add(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
    nameWithType: ObservableOrderedSet<IEAnnotation>.Add
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
    nameWithType: ObservableOrderedSet(Of IEAnnotation).Add
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentAdd(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentAdd(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  name: SilentAdd(IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.SilentAdd(IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentAdd(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).SilentAdd(IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentAdd(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
    nameWithType: ObservableOrderedSet<IEAnnotation>.SilentAdd
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
    nameWithType: ObservableOrderedSet(Of IEAnnotation).SilentAdd
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Insert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  name: Insert(Int32, IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.Insert(Int32, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Insert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).Insert(Int32, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Insert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: ObservableOrderedSet<IEAnnotation>.Insert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: ObservableOrderedSet(Of IEAnnotation).Insert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentInsert(System.Int32,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  name: SilentInsert(Int32, IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.SilentInsert(Int32, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentInsert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).SilentInsert(Int32, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentInsert(System.Int32, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
    nameWithType: ObservableOrderedSet<IEAnnotation>.SilentInsert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentInsert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
    nameWithType: ObservableOrderedSet(Of IEAnnotation).SilentInsert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentInsert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Clear
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  name: Clear()
  nameWithType: ObservableOrderedSet<IEAnnotation>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Clear()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
    nameWithType: ObservableOrderedSet<IEAnnotation>.Clear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
    nameWithType: ObservableOrderedSet(Of IEAnnotation).Clear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentClear
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableOrderedSet<IEAnnotation>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentClear()
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
    nameWithType: ObservableOrderedSet<IEAnnotation>.SilentClear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentClear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
    nameWithType: ObservableOrderedSet(Of IEAnnotation).SilentClear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentClear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  name: Remove(IEAnnotation, Int32)
  nameWithType: ObservableOrderedSet<IEAnnotation>.Remove(IEAnnotation, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Remove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).Remove(IEAnnotation, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Remove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    nameWithType: ObservableOrderedSet<IEAnnotation>.Remove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    nameWithType: ObservableOrderedSet(Of IEAnnotation).Remove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentRemove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentRemove(NMF.Interop.Ecore.IEAnnotation,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  name: SilentRemove(IEAnnotation, Int32)
  nameWithType: ObservableOrderedSet<IEAnnotation>.SilentRemove(IEAnnotation, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentRemove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).SilentRemove(IEAnnotation, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentRemove(NMF.Interop.Ecore.IEAnnotation, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
    nameWithType: ObservableOrderedSet<IEAnnotation>.SilentRemove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentRemove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
    nameWithType: ObservableOrderedSet(Of IEAnnotation).SilentRemove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentRemove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.Replace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  name: Replace(Int32, IEAnnotation, IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.Replace(Int32, IEAnnotation, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Replace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).Replace(Int32, IEAnnotation, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Replace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    nameWithType: ObservableOrderedSet<IEAnnotation>.Replace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    nameWithType: ObservableOrderedSet(Of IEAnnotation).Replace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}.SilentReplace(System.Int32,NMF.Interop.Ecore.IEAnnotation,NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.ObjectModel.ObservableOrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  name: SilentReplace(Int32, IEAnnotation, IEAnnotation)
  nameWithType: ObservableOrderedSet<IEAnnotation>.SilentReplace(Int32, IEAnnotation, IEAnnotation)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentReplace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: ObservableOrderedSet(Of IEAnnotation).SilentReplace(Int32, IEAnnotation, IEAnnotation)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentReplace(System.Int32, NMF.Interop.Ecore.IEAnnotation, NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
    nameWithType: ObservableOrderedSet<IEAnnotation>.SilentReplace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<NMF.Interop.Ecore.IEAnnotation>.SilentReplace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
    nameWithType: ObservableOrderedSet(Of IEAnnotation).SilentReplace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of NMF.Interop.Ecore.IEAnnotation).SilentReplace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Remove(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  name: Remove(IEAnnotation)
  nameWithType: OrderedSet<IEAnnotation>.Remove(IEAnnotation)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.Remove(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: OrderedSet(Of IEAnnotation).Remove(IEAnnotation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Remove(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    nameWithType: OrderedSet<IEAnnotation>.Remove
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    nameWithType: OrderedSet(Of IEAnnotation).Remove
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.GetEnumerator
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<IEAnnotation>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of IEAnnotation).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: OrderedSet<IEAnnotation>.GetEnumerator
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: OrderedSet(Of IEAnnotation).GetEnumerator
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.IndexOf(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.IndexOf(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  name: IndexOf(IEAnnotation)
  nameWithType: OrderedSet<IEAnnotation>.IndexOf(IEAnnotation)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.IndexOf(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: OrderedSet(Of IEAnnotation).IndexOf(IEAnnotation)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).IndexOf(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    nameWithType: OrderedSet<IEAnnotation>.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    nameWithType: OrderedSet(Of IEAnnotation).IndexOf
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.RemoveAt(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: OrderedSet<IEAnnotation>.RemoveAt(Int32)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.RemoveAt(System.Int32)
  nameWithType.vb: OrderedSet(Of IEAnnotation).RemoveAt(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).RemoveAt(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: OrderedSet<IEAnnotation>.RemoveAt
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: OrderedSet(Of IEAnnotation).RemoveAt
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.Item(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: OrderedSet<IEAnnotation>.Item[Int32]
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.Item[System.Int32]
  nameWithType.vb: OrderedSet(Of IEAnnotation).Item(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: Item
    nameWithType: OrderedSet<IEAnnotation>.Item
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: Item
    nameWithType: OrderedSet(Of IEAnnotation).Item
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Add(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Add(System.Object)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: OrderedSet<IEAnnotation>.IList.Add(Object)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.Add(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: OrderedSet<IEAnnotation>.IList.Add
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.Add
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Contains(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Contains(System.Object)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: OrderedSet<IEAnnotation>.IList.Contains(Object)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.Contains(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: OrderedSet<IEAnnotation>.IList.Contains
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.Contains
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IndexOf(System.Object)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: OrderedSet<IEAnnotation>.IList.IndexOf(Object)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.IndexOf(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: OrderedSet<IEAnnotation>.IList.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: OrderedSet<IEAnnotation>.IList.Insert(Int32, Object)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: OrderedSet<IEAnnotation>.IList.Insert
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.Insert
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsFixedSize
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsFixedSize
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: OrderedSet<IEAnnotation>.IList.IsFixedSize
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.IsFixedSize
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.IsFixedSize
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Remove(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Remove(System.Object)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: OrderedSet<IEAnnotation>.IList.Remove(Object)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.Remove(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: OrderedSet<IEAnnotation>.IList.Remove
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.Remove
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Item(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: OrderedSet<IEAnnotation>.IList.Item[Int32]
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.Item(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: OrderedSet<IEAnnotation>.IList.Item
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.IList.Item
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: OrderedSet<IEAnnotation>.ICollection.CopyTo(Array, Int32)
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: OrderedSet<IEAnnotation>.ICollection.CopyTo
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: OrderedSet(Of IEAnnotation).System.Collections.ICollection.CopyTo
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#IsSynchronized
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#IsSynchronized
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: OrderedSet<IEAnnotation>.ICollection.IsSynchronized
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.ICollection.IsSynchronized
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#SyncRoot
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#ICollection#SyncRoot
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: OrderedSet<IEAnnotation>.ICollection.SyncRoot
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.ICollection.SyncRoot
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsReadOnly
  commentId: P:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#IsReadOnly
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: OrderedSet<IEAnnotation>.IList.IsReadOnly
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.IsReadOnly
  nameWithType.vb: OrderedSet(Of IEAnnotation).System.Collections.IList.IsReadOnly
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}.AsReadOnly
  parent: NMF.Collections.Generic.OrderedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<IEAnnotation>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of IEAnnotation).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    nameWithType: OrderedSet<IEAnnotation>.AsReadOnly
    fullName: NMF.Collections.Generic.OrderedSet<NMF.Interop.Ecore.IEAnnotation>.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    nameWithType: OrderedSet(Of IEAnnotation).AsReadOnly
    fullName: NMF.Collections.Generic.OrderedSet(Of NMF.Interop.Ecore.IEAnnotation).AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Items
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<IEAnnotation>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Items
  nameWithType.vb: DecoratedSet(Of IEAnnotation).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Items
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.ExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  name: ExceptWith(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.ExceptWith(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.ExceptWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).ExceptWith(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).ExceptWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: ExceptWith(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: DecoratedSet<IEAnnotation>.ExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.ExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: DecoratedSet(Of IEAnnotation).ExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).ExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IntersectWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  name: IntersectWith(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.IntersectWith(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IntersectWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).IntersectWith(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IntersectWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: IntersectWith(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: DecoratedSet<IEAnnotation>.IntersectWith
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IntersectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: DecoratedSet(Of IEAnnotation).IntersectWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IntersectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsProperSubsetOf(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.IsProperSubsetOf(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).IsProperSubsetOf(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: IsProperSubsetOf(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: DecoratedSet<IEAnnotation>.IsProperSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsProperSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: DecoratedSet(Of IEAnnotation).IsProperSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsProperSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsProperSupersetOf(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.IsProperSupersetOf(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).IsProperSupersetOf(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: IsProperSupersetOf(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: DecoratedSet<IEAnnotation>.IsProperSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsProperSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: DecoratedSet(Of IEAnnotation).IsProperSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsProperSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSubsetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsSubsetOf(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.IsSubsetOf(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsSubsetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).IsSubsetOf(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsSubsetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: IsSubsetOf(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: DecoratedSet<IEAnnotation>.IsSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: DecoratedSet(Of IEAnnotation).IsSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.IsSupersetOf(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsSupersetOf(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.IsSupersetOf(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsSupersetOf(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).IsSupersetOf(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsSupersetOf(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: IsSupersetOf(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: DecoratedSet<IEAnnotation>.IsSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.IsSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: DecoratedSet(Of IEAnnotation).IsSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).IsSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Overlaps(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  name: Overlaps(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.Overlaps(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Overlaps(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).Overlaps(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Overlaps(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: Overlaps(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: DecoratedSet<IEAnnotation>.Overlaps
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Overlaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: DecoratedSet(Of IEAnnotation).Overlaps
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Overlaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SetEquals(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  name: SetEquals(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.SetEquals(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.SetEquals(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).SetEquals(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).SetEquals(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: SetEquals(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: DecoratedSet<IEAnnotation>.SetEquals
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.SetEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: DecoratedSet(Of IEAnnotation).SetEquals
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).SetEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  name: SymmetricExceptWith(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.SymmetricExceptWith(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).SymmetricExceptWith(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: SymmetricExceptWith(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: DecoratedSet<IEAnnotation>.SymmetricExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.SymmetricExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: DecoratedSet(Of IEAnnotation).SymmetricExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).SymmetricExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.UnionWith(System.Collections.Generic.IEnumerable{NMF.Interop.Ecore.IEAnnotation})
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  name: UnionWith(IEnumerable<IEAnnotation>)
  nameWithType: DecoratedSet<IEAnnotation>.UnionWith(IEnumerable<IEAnnotation>)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.UnionWith(System.Collections.Generic.IEnumerable<NMF.Interop.Ecore.IEAnnotation>)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).UnionWith(IEnumerable(Of IEAnnotation))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).UnionWith(System.Collections.Generic.IEnumerable(Of NMF.Interop.Ecore.IEAnnotation))
  name.vb: UnionWith(IEnumerable(Of IEAnnotation))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: DecoratedSet<IEAnnotation>.UnionWith
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.UnionWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: DecoratedSet(Of IEAnnotation).UnionWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).UnionWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#Add(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#Add(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<IEAnnotation>.Add(IEAnnotation)
  nameWithType: DecoratedSet<IEAnnotation>.ICollection<IEAnnotation>.Add(IEAnnotation)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.Generic.ICollection<NMF.Interop.Ecore.IEAnnotation>.Add(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).System.Collections.Generic.ICollection<T>.Add(IEAnnotation)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.Generic.ICollection<T>.Add(NMF.Interop.Ecore.IEAnnotation)
  name.vb: System.Collections.Generic.ICollection<T>.Add(IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<IEAnnotation>.Add
    nameWithType: DecoratedSet<IEAnnotation>.ICollection<IEAnnotation>.Add
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.Generic.ICollection<NMF.Interop.Ecore.IEAnnotation>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: DecoratedSet(Of IEAnnotation).System.Collections.Generic.ICollection<T>.Add
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.Generic.ICollection<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Contains(NMF.Interop.Ecore.IEAnnotation)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Contains(NMF.Interop.Ecore.IEAnnotation)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  name: Contains(IEAnnotation)
  nameWithType: DecoratedSet<IEAnnotation>.Contains(IEAnnotation)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Contains(NMF.Interop.Ecore.IEAnnotation)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).Contains(IEAnnotation)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Contains(NMF.Interop.Ecore.IEAnnotation)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    nameWithType: DecoratedSet<IEAnnotation>.Contains
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    nameWithType: DecoratedSet(Of IEAnnotation).Contains
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.CopyTo(NMF.Interop.Ecore.IEAnnotation[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.CopyTo(NMF.Interop.Ecore.IEAnnotation[],System.Int32)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IEAnnotation[], Int32)
  nameWithType: DecoratedSet<IEAnnotation>.CopyTo(IEAnnotation[], Int32)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.CopyTo(NMF.Interop.Ecore.IEAnnotation[], System.Int32)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).CopyTo(IEAnnotation(), Int32)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).CopyTo(NMF.Interop.Ecore.IEAnnotation(), System.Int32)
  name.vb: CopyTo(IEAnnotation(), Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: DecoratedSet<IEAnnotation>.CopyTo
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: DecoratedSet(Of IEAnnotation).CopyTo
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Interop.Ecore.IEAnnotation
    name: IEAnnotation
    nameWithType: IEAnnotation
    fullName: NMF.Interop.Ecore.IEAnnotation
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.Count
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<IEAnnotation>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.Count
  nameWithType.vb: DecoratedSet(Of IEAnnotation).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).Count
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<IEAnnotation>.IsReadOnly
  nameWithType: DecoratedSet<IEAnnotation>.ICollection<IEAnnotation>.IsReadOnly
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.Generic.ICollection<NMF.Interop.Ecore.IEAnnotation>.IsReadOnly
  nameWithType.vb: DecoratedSet(Of IEAnnotation).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IEnumerable#GetEnumerator
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: DecoratedSet<IEAnnotation>.IEnumerable.GetEnumerator()
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: DecoratedSet(Of IEAnnotation).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: DecoratedSet<IEAnnotation>.IEnumerable.GetEnumerator
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: DecoratedSet(Of IEAnnotation).System.Collections.IEnumerable.GetEnumerator
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Clear
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#Clear
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
  name: IList.Clear()
  nameWithType: DecoratedSet<IEAnnotation>.IList.Clear()
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Clear()
  nameWithType.vb: DecoratedSet(Of IEAnnotation).System.Collections.IList.Clear()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: DecoratedSet<IEAnnotation>.IList.Clear
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: DecoratedSet(Of IEAnnotation).System.Collections.IList.Clear
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}.System#Collections#IList#RemoveAt(System.Int32)
  parent: NMF.Collections.Generic.DecoratedSet{NMF.Interop.Ecore.IEAnnotation}
  definition: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  nameWithType: DecoratedSet<IEAnnotation>.IList.RemoveAt(Int32)
  fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: DecoratedSet(Of IEAnnotation).System.Collections.IList.RemoveAt(Int32)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: DecoratedSet<IEAnnotation>.IList.RemoveAt
    fullName: NMF.Collections.Generic.DecoratedSet<NMF.Interop.Ecore.IEAnnotation>.System.Collections.IList.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: DecoratedSet(Of IEAnnotation).System.Collections.IList.RemoveAt
    fullName: NMF.Collections.Generic.DecoratedSet(Of NMF.Interop.Ecore.IEAnnotation).System.Collections.IList.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Collections.Generic.DecoratedSet`1
  commentId: T:NMF.Collections.Generic.DecoratedSet`1
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    nameWithType: DecoratedSet
    fullName: NMF.Collections.Generic.DecoratedSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    nameWithType: DecoratedSet
    fullName: NMF.Collections.Generic.DecoratedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
- uid: NMF.Collections.Generic.OrderedSet`1
  commentId: T:NMF.Collections.Generic.OrderedSet`1
  name: OrderedSet<T>
  nameWithType: OrderedSet<T>
  fullName: NMF.Collections.Generic.OrderedSet<T>
  nameWithType.vb: OrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T)
  name.vb: OrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    nameWithType: OrderedSet
    fullName: NMF.Collections.Generic.OrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    nameWithType: OrderedSet
    fullName: NMF.Collections.Generic.OrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
  commentId: T:NMF.Collections.ObjectModel.ObservableOrderedSet`1
  name: ObservableOrderedSet<T>
  nameWithType: ObservableOrderedSet<T>
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>
  nameWithType.vb: ObservableOrderedSet(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T)
  name.vb: ObservableOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
    nameWithType: ObservableOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet
    nameWithType: ObservableOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
  name: ObservableOppositeOrderedSet<TParent, TCollected>
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected)
  name.vb: ObservableOppositeOrderedSet(Of TParent, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
    nameWithType: ObservableOppositeOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet
    nameWithType: ObservableOppositeOrderedSet
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IListExpression`1
  commentId: T:NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  nameWithType: IListExpression<T>
  fullName: NMF.Expressions.IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  name.vb: IListExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Expressions.ISetExpression`1
  commentId: T:NMF.Expressions.ISetExpression`1
  name: ISetExpression<T>
  nameWithType: ISetExpression<T>
  fullName: NMF.Expressions.ISetExpression<T>
  nameWithType.vb: ISetExpression(Of T)
  fullName.vb: NMF.Expressions.ISetExpression(Of T)
  name.vb: ISetExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
    nameWithType: ISetExpression
    fullName: NMF.Expressions.ISetExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
    nameWithType: ISetExpression
    fullName: NMF.Expressions.ISetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.IOrderedSet`1
  commentId: T:NMF.Collections.Generic.IOrderedSet`1
  name: IOrderedSet<T>
  nameWithType: IOrderedSet<T>
  fullName: NMF.Collections.Generic.IOrderedSet<T>
  nameWithType.vb: IOrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of T)
  name.vb: IOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    nameWithType: IOrderedSet
    fullName: NMF.Collections.Generic.IOrderedSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    nameWithType: IOrderedSet
    fullName: NMF.Collections.Generic.IOrderedSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Parent
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
  name: SetOpposite(TCollected, TParent)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Clear()
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Clear
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Clear
    name: Clear
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).Clear
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
  name: Add(TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Add
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Add(`1)
    name: Add
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).Add
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
  isExternal: true
  name: Insert(Int32, TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Insert(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Insert(System.Int32, TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Insert(Int32, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Insert(System.Int32, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Insert
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Insert(System.Int32,`1)
    name: Insert
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).Insert
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
  isExternal: true
  name: Remove(TCollected, Int32)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Remove(TCollected, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Remove(TCollected, System.Int32)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Remove
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Remove(`1,System.Int32)
    name: Remove
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).Remove
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  isExternal: true
  name: Replace(Int32, TCollected, TCollected)
  nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Replace(Int32, TCollected, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Replace(System.Int32, TCollected, TCollected)
  nameWithType.vb: ObservableOppositeOrderedSet(Of TParent, TCollected).Replace(Int32, TCollected, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Replace(System.Int32, TCollected, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
    nameWithType: ObservableOppositeOrderedSet<TParent, TCollected>.Replace
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet<TParent, TCollected>.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2.Replace(System.Int32,`1,`1)
    name: Replace
    nameWithType: ObservableOppositeOrderedSet(Of TParent, TCollected).Replace
    fullName: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet(Of TParent, TCollected).Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: ObservableOrderedSet<T>.OnPropertyChanged(String)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: ObservableOrderedSet(Of T).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: ObservableOrderedSet<T>.OnPropertyChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: ObservableOrderedSet(Of T).OnPropertyChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableOrderedSet<T>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableOrderedSet(Of T).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableOrderedSet<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableOrderedSet(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableOrderedSet<T>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableOrderedSet(Of T).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableOrderedSet<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.CollectionChanged
  nameWithType.vb: ObservableOrderedSet(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableOrderedSet<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.CollectionChanging
  nameWithType.vb: ObservableOrderedSet(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableOrderedSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableOrderedSet<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.PropertyChanged
  nameWithType.vb: ObservableOrderedSet(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableOrderedSet<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableOrderedSet<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableOrderedSet(Of T).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  name: IEnumerableExpression<T>.AsNotifiable()
  nameWithType: ObservableOrderedSet<T>.IEnumerableExpression<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableOrderedSet<T>.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  nameWithType: ObservableOrderedSet<T>.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: IEnumerableExpression.AsNotifiable
    nameWithType: ObservableOrderedSet<T>.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression.AsNotifiable
    nameWithType: ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableOrderedSet<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.RequireEvents()
  nameWithType.vb: ObservableOrderedSet(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableOrderedSet<T>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableOrderedSet(Of T).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
  name: Add(T)
  nameWithType: ObservableOrderedSet<T>.Add(T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Add(T)
  nameWithType.vb: ObservableOrderedSet(Of T).Add(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
    nameWithType: ObservableOrderedSet<T>.Add
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Add(`0)
    name: Add
    nameWithType: ObservableOrderedSet(Of T).Add
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
  name: SilentAdd(T)
  nameWithType: ObservableOrderedSet<T>.SilentAdd(T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentAdd(T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentAdd(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentAdd(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
    nameWithType: ObservableOrderedSet<T>.SilentAdd
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentAdd
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentAdd(`0)
    name: SilentAdd
    nameWithType: ObservableOrderedSet(Of T).SilentAdd
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentAdd
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: ObservableOrderedSet<T>.Insert(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Insert(System.Int32, T)
  nameWithType.vb: ObservableOrderedSet(Of T).Insert(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: ObservableOrderedSet<T>.Insert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: ObservableOrderedSet(Of T).Insert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
  isExternal: true
  name: SilentInsert(Int32, T)
  nameWithType: ObservableOrderedSet<T>.SilentInsert(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentInsert(System.Int32, T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentInsert(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentInsert(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
    nameWithType: ObservableOrderedSet<T>.SilentInsert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentInsert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentInsert(System.Int32,`0)
    name: SilentInsert
    nameWithType: ObservableOrderedSet(Of T).SilentInsert
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentInsert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
  name: Clear()
  nameWithType: ObservableOrderedSet<T>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Clear()
  nameWithType.vb: ObservableOrderedSet(Of T).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
    nameWithType: ObservableOrderedSet<T>.Clear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Clear
    name: Clear
    nameWithType: ObservableOrderedSet(Of T).Clear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableOrderedSet<T>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentClear()
  nameWithType.vb: ObservableOrderedSet(Of T).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
    nameWithType: ObservableOrderedSet<T>.SilentClear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentClear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentClear
    name: SilentClear
    nameWithType: ObservableOrderedSet(Of T).SilentClear
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentClear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
  isExternal: true
  name: Remove(T, Int32)
  nameWithType: ObservableOrderedSet<T>.Remove(T, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Remove(T, System.Int32)
  nameWithType.vb: ObservableOrderedSet(Of T).Remove(T, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Remove(T, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    nameWithType: ObservableOrderedSet<T>.Remove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    nameWithType: ObservableOrderedSet(Of T).Remove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
  isExternal: true
  name: SilentRemove(T, Int32)
  nameWithType: ObservableOrderedSet<T>.SilentRemove(T, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentRemove(T, System.Int32)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentRemove(T, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentRemove(T, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
    nameWithType: ObservableOrderedSet<T>.SilentRemove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentRemove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentRemove(`0,System.Int32)
    name: SilentRemove
    nameWithType: ObservableOrderedSet(Of T).SilentRemove
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentRemove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
  isExternal: true
  name: Replace(Int32, T, T)
  nameWithType: ObservableOrderedSet<T>.Replace(Int32, T, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Replace(System.Int32, T, T)
  nameWithType.vb: ObservableOrderedSet(Of T).Replace(Int32, T, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Replace(System.Int32, T, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    nameWithType: ObservableOrderedSet<T>.Replace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    nameWithType: ObservableOrderedSet(Of T).Replace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
  isExternal: true
  name: SilentReplace(Int32, T, T)
  nameWithType: ObservableOrderedSet<T>.SilentReplace(Int32, T, T)
  fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentReplace(System.Int32, T, T)
  nameWithType.vb: ObservableOrderedSet(Of T).SilentReplace(Int32, T, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentReplace(System.Int32, T, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
    nameWithType: ObservableOrderedSet<T>.SilentReplace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet<T>.SilentReplace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1.SilentReplace(System.Int32,`0,`0)
    name: SilentReplace
    nameWithType: ObservableOrderedSet(Of T).SilentReplace
    fullName: NMF.Collections.ObjectModel.ObservableOrderedSet(Of T).SilentReplace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  name: Remove(T)
  nameWithType: OrderedSet<T>.Remove(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Remove(T)
  nameWithType.vb: OrderedSet(Of T).Remove(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    nameWithType: OrderedSet<T>.Remove
    fullName: NMF.Collections.Generic.OrderedSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    nameWithType: OrderedSet(Of T).Remove
    fullName: NMF.Collections.Generic.OrderedSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<T>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<T>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of T).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: OrderedSet<T>.GetEnumerator
    fullName: NMF.Collections.Generic.OrderedSet<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: OrderedSet(Of T).GetEnumerator
    fullName: NMF.Collections.Generic.OrderedSet(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  name: IndexOf(T)
  nameWithType: OrderedSet<T>.IndexOf(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.IndexOf(T)
  nameWithType.vb: OrderedSet(Of T).IndexOf(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).IndexOf(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    nameWithType: OrderedSet<T>.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet<T>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    nameWithType: OrderedSet(Of T).IndexOf
    fullName: NMF.Collections.Generic.OrderedSet(Of T).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: OrderedSet<T>.RemoveAt(Int32)
  fullName: NMF.Collections.Generic.OrderedSet<T>.RemoveAt(System.Int32)
  nameWithType.vb: OrderedSet(Of T).RemoveAt(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: OrderedSet<T>.RemoveAt
    fullName: NMF.Collections.Generic.OrderedSet<T>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: OrderedSet(Of T).RemoveAt
    fullName: NMF.Collections.Generic.OrderedSet(Of T).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: OrderedSet<T>.Item[Int32]
  fullName: NMF.Collections.Generic.OrderedSet<T>.Item[System.Int32]
  nameWithType.vb: OrderedSet(Of T).Item(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: Item
    nameWithType: OrderedSet<T>.Item
    fullName: NMF.Collections.Generic.OrderedSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: Item
    nameWithType: OrderedSet(Of T).Item
    fullName: NMF.Collections.Generic.OrderedSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: OrderedSet<T>.IList.Add(Object)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.Add(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: OrderedSet<T>.IList.Add
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: OrderedSet(Of T).System.Collections.IList.Add
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: OrderedSet<T>.IList.Contains(Object)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: OrderedSet<T>.IList.Contains
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: OrderedSet(Of T).System.Collections.IList.Contains
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: OrderedSet<T>.IList.IndexOf(Object)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: OrderedSet<T>.IList.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: OrderedSet(Of T).System.Collections.IList.IndexOf
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: OrderedSet<T>.IList.Insert(Int32, Object)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: OrderedSet<T>.IList.Insert
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: OrderedSet(Of T).System.Collections.IList.Insert
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsFixedSize
  commentId: P:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: OrderedSet<T>.IList.IsFixedSize
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: OrderedSet<T>.IList.Remove(Object)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: OrderedSet<T>.IList.Remove
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: OrderedSet(Of T).System.Collections.IList.Remove
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: OrderedSet<T>.IList.Item[Int32]
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: OrderedSet<T>.IList.Item
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: OrderedSet(Of T).System.Collections.IList.Item
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: OrderedSet<T>.ICollection.CopyTo(Array, Int32)
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: OrderedSet(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: OrderedSet<T>.ICollection.CopyTo
    fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: OrderedSet(Of T).System.Collections.ICollection.CopyTo
    fullName: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#IsSynchronized
  commentId: P:NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: OrderedSet<T>.ICollection.IsSynchronized
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: OrderedSet(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#SyncRoot
  commentId: P:NMF.Collections.Generic.OrderedSet`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: OrderedSet<T>.ICollection.SyncRoot
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: OrderedSet(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsReadOnly
  commentId: P:NMF.Collections.Generic.OrderedSet`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: OrderedSet<T>.IList.IsReadOnly
  fullName: NMF.Collections.Generic.OrderedSet<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: OrderedSet(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<T>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<T>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of T).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    nameWithType: OrderedSet<T>.AsReadOnly
    fullName: NMF.Collections.Generic.OrderedSet<T>.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    nameWithType: OrderedSet(Of T).AsReadOnly
    fullName: NMF.Collections.Generic.OrderedSet(Of T).AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<T>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Items
  nameWithType.vb: DecoratedSet(Of T).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Items
- uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: ExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: DecoratedSet<T>.ExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: DecoratedSet(Of T).ExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IntersectWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: DecoratedSet<T>.IntersectWith
    fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: DecoratedSet(Of T).IntersectWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: DecoratedSet<T>.IsProperSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: DecoratedSet(Of T).IsProperSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: DecoratedSet<T>.IsProperSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: DecoratedSet(Of T).IsProperSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: DecoratedSet<T>.IsSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: DecoratedSet(Of T).IsSubsetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: DecoratedSet<T>.IsSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: DecoratedSet(Of T).IsSupersetOf
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Overlaps(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.Overlaps(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: DecoratedSet<T>.Overlaps
    fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: DecoratedSet(Of T).Overlaps
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: SetEquals(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SetEquals(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: DecoratedSet<T>.SetEquals
    fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: DecoratedSet(Of T).SetEquals
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: DecoratedSet<T>.SymmetricExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: DecoratedSet(Of T).SymmetricExceptWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: UnionWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.UnionWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: DecoratedSet<T>.UnionWith
    fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: DecoratedSet(Of T).UnionWith
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  nameWithType: DecoratedSet<T>.ICollection<T>.Add(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    nameWithType: DecoratedSet<T>.ICollection<T>.Add
    fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.Generic.ICollection<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.Add
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  name: Contains(T)
  nameWithType: DecoratedSet<T>.Contains(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains(T)
  nameWithType.vb: DecoratedSet(Of T).Contains(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Contains(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    nameWithType: DecoratedSet<T>.Contains
    fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    nameWithType: DecoratedSet(Of T).Contains
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: DecoratedSet<T>.CopyTo(T[], Int32)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: DecoratedSet(Of T).CopyTo(T(), Int32)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: DecoratedSet<T>.CopyTo
    fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: DecoratedSet(Of T).CopyTo
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<T>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Count
  nameWithType.vb: DecoratedSet(Of T).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Count
- uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<T>.IsReadOnly
  nameWithType: DecoratedSet<T>.ICollection<T>.IsReadOnly
  fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: DecoratedSet<T>.IEnumerable.GetEnumerator()
  fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: DecoratedSet(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: DecoratedSet<T>.IEnumerable.GetEnumerator
    fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: DecoratedSet(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
  name: IList.Clear()
  nameWithType: DecoratedSet<T>.IList.Clear()
  fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IList.Clear()
  nameWithType.vb: DecoratedSet(Of T).System.Collections.IList.Clear()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: DecoratedSet<T>.IList.Clear
    fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IList.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: DecoratedSet(Of T).System.Collections.IList.Clear
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IList.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
  isExternal: true
  name: IList.RemoveAt(Int32)
  nameWithType: DecoratedSet<T>.IList.RemoveAt(Int32)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: DecoratedSet(Of T).System.Collections.IList.RemoveAt(Int32)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: DecoratedSet<T>.IList.RemoveAt
    fullName: NMF.Collections.Generic.DecoratedSet<T>.System.Collections.IList.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: DecoratedSet(Of T).System.Collections.IList.RemoveAt
    fullName: NMF.Collections.Generic.DecoratedSet(Of T).System.Collections.IList.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor*
  commentId: Overload:NMF.Interop.Ecore.EModelElementEAnnotationsCollection.#ctor
  name: EModelElementEAnnotationsCollection
  nameWithType: EModelElementEAnnotationsCollection.EModelElementEAnnotationsCollection
  fullName: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.EModelElementEAnnotationsCollection
- uid: NMF.Interop.Ecore.IEModelElement
  commentId: T:NMF.Interop.Ecore.IEModelElement
  parent: NMF.Interop.Ecore
  name: IEModelElement
  nameWithType: IEModelElement
  fullName: NMF.Interop.Ecore.IEModelElement
- uid: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite*
  commentId: Overload:NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite
  name: SetOpposite
  nameWithType: EModelElementEAnnotationsCollection.SetOpposite
  fullName: NMF.Interop.Ecore.EModelElementEAnnotationsCollection.SetOpposite
- uid: NMF.Interop.Ecore.IEAnnotation
  commentId: T:NMF.Interop.Ecore.IEAnnotation
  parent: NMF.Interop.Ecore
  name: IEAnnotation
  nameWithType: IEAnnotation
  fullName: NMF.Interop.Ecore.IEAnnotation
