### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.EClass
  commentId: T:NMF.Interop.Ecore.EClass
  id: EClass
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.EClass.#ctor
  - NMF.Interop.Ecore.EClass.Abstract
  - NMF.Interop.Ecore.EClass.AbstractChanged
  - NMF.Interop.Ecore.EClass.AbstractChanging
  - NMF.Interop.Ecore.EClass.Children
  - NMF.Interop.Ecore.EClass.ClassInstance
  - NMF.Interop.Ecore.EClass.EGenericSuperTypes
  - NMF.Interop.Ecore.EClass.EOperations
  - NMF.Interop.Ecore.EClass.EStructuralFeatures
  - NMF.Interop.Ecore.EClass.ESuperTypes
  - NMF.Interop.Ecore.EClass.GetAttributeValue(System.String,System.Int32)
  - NMF.Interop.Ecore.EClass.GetClass
  - NMF.Interop.Ecore.EClass.GetCollectionForFeature(System.String)
  - NMF.Interop.Ecore.EClass.GetModelElementForReference(System.String,System.Int32)
  - NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EClass.Interface
  - NMF.Interop.Ecore.EClass.InterfaceChanged
  - NMF.Interop.Ecore.EClass.InterfaceChanging
  - NMF.Interop.Ecore.EClass.OnAbstractChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClass.OnAbstractChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClass.OnInterfaceChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClass.OnInterfaceChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClass.ReferencedElements
  - NMF.Interop.Ecore.EClass.SetFeature(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: EClass
  nameWithType: EClass
  fullName: NMF.Interop.Ecore.EClass
  type: Class
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClass
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe default implementation of the EClass class\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://www.eclipse.org/emf/2002/Ecore")]

      [XmlNamespacePrefix("ecore")]

      [ModelRepresentationClass("http://www.eclipse.org/emf/2002/Ecore#//EClass/")]

      public class EClass : EClassifier, IEClass, IEClassifier, IENamedElement, IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://www.eclipse.org/emf/2002/Ecore")>

      <XmlNamespacePrefix("ecore")>

      <ModelRepresentationClass("http://www.eclipse.org/emf/2002/Ecore#//EClass/")>

      Public Class EClass
          Inherits EClassifier
          Implements IEClass, IEClassifier, IENamedElement, IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Interop.Ecore.EModelElement
  - NMF.Interop.Ecore.ENamedElement
  - NMF.Interop.Ecore.EClassifier
  implements:
  - NMF.Interop.Ecore.IEClass
  - NMF.Interop.Ecore.IEClassifier
  - NMF.Interop.Ecore.IENamedElement
  - NMF.Interop.Ecore.IEModelElement
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Interop.Ecore.EClassifier.InstanceClassName
  - NMF.Interop.Ecore.EClassifier.InstanceTypeName
  - NMF.Interop.Ecore.EClassifier.EPackage
  - NMF.Interop.Ecore.EClassifier.ETypeParameters
  - NMF.Interop.Ecore.EClassifier.InstanceClassNameChanging
  - NMF.Interop.Ecore.EClassifier.InstanceClassNameChanged
  - NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanging
  - NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanged
  - NMF.Interop.Ecore.EClassifier.EPackageChanging
  - NMF.Interop.Ecore.EClassifier.EPackageChanged
  - NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
  - NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
  - NMF.Interop.Ecore.ENamedElement.Name
  - NMF.Interop.Ecore.ENamedElement.IsIdentified
  - NMF.Interop.Ecore.ENamedElement.NameChanging
  - NMF.Interop.Ecore.ENamedElement.NameChanged
  - NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - NMF.Interop.Ecore.EModelElement.EAnnotations
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.eclipse.org/emf/2002/Ecore
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ecore
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.eclipse.org/emf/2002/Ecore#//EClass/
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Interop.Ecore.EClass.#ctor
  commentId: M:NMF.Interop.Ecore.EClass.#ctor
  id: '#ctor'
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: EClass()
  nameWithType: EClass.EClass()
  fullName: NMF.Interop.Ecore.EClass.EClass()
  type: Constructor
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 75
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: public EClass()
    content.vb: Public Sub New
  overload: NMF.Interop.Ecore.EClass.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EClass.Abstract
  commentId: P:NMF.Interop.Ecore.EClass.Abstract
  id: Abstract
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: Abstract
  nameWithType: EClass.Abstract
  fullName: NMF.Interop.Ecore.EClass.Abstract
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Abstract
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 94
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe abstract property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("abstract")]

      [XmlAttribute(true)]

      public virtual bool? Abstract { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <XmlElementName("abstract")>

      <XmlAttribute(True)>

      Public Overridable Property Abstract As Boolean?
  overload: NMF.Interop.Ecore.EClass.Abstract*
  implements:
  - NMF.Interop.Ecore.IEClass.Abstract
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: abstract
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EClass.Interface
  commentId: P:NMF.Interop.Ecore.EClass.Interface
  id: Interface
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: Interface
  nameWithType: EClass.Interface
  fullName: NMF.Interop.Ecore.EClass.Interface
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Interface
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 120
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe interface property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("interface")]

      [XmlAttribute(true)]

      public virtual bool? Interface { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <XmlElementName("interface")>

      <XmlAttribute(True)>

      Public Overridable Property Interface As Boolean?
  overload: NMF.Interop.Ecore.EClass.Interface*
  implements:
  - NMF.Interop.Ecore.IEClass.Interface
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: interface
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EClass.ESuperTypes
  commentId: P:NMF.Interop.Ecore.EClass.ESuperTypes
  id: ESuperTypes
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: ESuperTypes
  nameWithType: EClass.ESuperTypes
  fullName: NMF.Interop.Ecore.EClass.ESuperTypes
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ESuperTypes
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 146
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eSuperTypes property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eSuperTypes")]

      [XmlAttribute(true)]

      public virtual IOrderedSetExpression<IEClass> ESuperTypes { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClass}
    content.vb: >-
      <XmlElementName("eSuperTypes")>

      <XmlAttribute(True)>

      Public Overridable ReadOnly Property ESuperTypes As IOrderedSetExpression(Of IEClass)
  overload: NMF.Interop.Ecore.EClass.ESuperTypes*
  implements:
  - NMF.Interop.Ecore.IEClass.ESuperTypes
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eSuperTypes
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.EOperations
  commentId: P:NMF.Interop.Ecore.EClass.EOperations
  id: EOperations
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: EOperations
  nameWithType: EClass.EOperations
  fullName: NMF.Interop.Ecore.EClass.EOperations
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EOperations
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 161
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eOperations property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eOperations")]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("eContainingClass")]

      public virtual IOrderedSetExpression<IEOperation> EOperations { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
    content.vb: >-
      <XmlElementName("eOperations")>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("eContainingClass")>

      Public Overridable ReadOnly Property EOperations As IOrderedSetExpression(Of IEOperation)
  overload: NMF.Interop.Ecore.EClass.EOperations*
  implements:
  - NMF.Interop.Ecore.IEClass.EOperations
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eOperations
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eContainingClass
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.EStructuralFeatures
  commentId: P:NMF.Interop.Ecore.EClass.EStructuralFeatures
  id: EStructuralFeatures
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: EStructuralFeatures
  nameWithType: EClass.EStructuralFeatures
  fullName: NMF.Interop.Ecore.EClass.EStructuralFeatures
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EStructuralFeatures
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 178
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eStructuralFeatures property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eStructuralFeatures")]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("eContainingClass")]

      public virtual IOrderedSetExpression<IEStructuralFeature> EStructuralFeatures { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEStructuralFeature}
    content.vb: >-
      <XmlElementName("eStructuralFeatures")>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("eContainingClass")>

      Public Overridable ReadOnly Property EStructuralFeatures As IOrderedSetExpression(Of IEStructuralFeature)
  overload: NMF.Interop.Ecore.EClass.EStructuralFeatures*
  implements:
  - NMF.Interop.Ecore.IEClass.EStructuralFeatures
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eStructuralFeatures
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eContainingClass
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.EGenericSuperTypes
  commentId: P:NMF.Interop.Ecore.EClass.EGenericSuperTypes
  id: EGenericSuperTypes
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: EGenericSuperTypes
  nameWithType: EClass.EGenericSuperTypes
  fullName: NMF.Interop.Ecore.EClass.EGenericSuperTypes
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EGenericSuperTypes
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 195
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eGenericSuperTypes property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eGenericSuperTypes")]

      [XmlAttribute(false)]

      [Containment]

      public virtual IOrderedSetExpression<IEGenericType> EGenericSuperTypes { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
    content.vb: >-
      <XmlElementName("eGenericSuperTypes")>

      <XmlAttribute(False)>

      <Containment>

      Public Overridable ReadOnly Property EGenericSuperTypes As IOrderedSetExpression(Of IEGenericType)
  overload: NMF.Interop.Ecore.EClass.EGenericSuperTypes*
  implements:
  - NMF.Interop.Ecore.IEClass.EGenericSuperTypes
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eGenericSuperTypes
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.Children
  commentId: P:NMF.Interop.Ecore.EClass.Children
  id: Children
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: EClass.Children
  fullName: NMF.Interop.Ecore.EClass.Children
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Children
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 211
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the child model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Interop.Ecore.EClassifier.Children
  overload: NMF.Interop.Ecore.EClass.Children*
  implements:
  - NMF.Models.IModelElement.Children
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.ReferencedElements
  commentId: P:NMF.Interop.Ecore.EClass.ReferencedElements
  id: ReferencedElements
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: EClass.ReferencedElements
  fullName: NMF.Interop.Ecore.EClass.ReferencedElements
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 222
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Interop.Ecore.EClassifier.ReferencedElements
  overload: NMF.Interop.Ecore.EClass.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.ClassInstance
  commentId: P:NMF.Interop.Ecore.EClass.ClassInstance
  id: ClassInstance
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: EClass.ClassInstance
  fullName: NMF.Interop.Ecore.EClass.ClassInstance
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 233
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Interop.Ecore.EClass.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Interop.Ecore.EClass.AbstractChanging
  commentId: E:NMF.Interop.Ecore.EClass.AbstractChanging
  id: AbstractChanging
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: AbstractChanging
  nameWithType: EClass.AbstractChanging
  fullName: NMF.Interop.Ecore.EClass.AbstractChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AbstractChanging
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 248
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Abstract property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> AbstractChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event AbstractChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEClass.AbstractChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EClass.AbstractChanged
  commentId: E:NMF.Interop.Ecore.EClass.AbstractChanged
  id: AbstractChanged
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: AbstractChanged
  nameWithType: EClass.AbstractChanged
  fullName: NMF.Interop.Ecore.EClass.AbstractChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AbstractChanged
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 253
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Abstract property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> AbstractChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event AbstractChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEClass.AbstractChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EClass.InterfaceChanging
  commentId: E:NMF.Interop.Ecore.EClass.InterfaceChanging
  id: InterfaceChanging
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: InterfaceChanging
  nameWithType: EClass.InterfaceChanging
  fullName: NMF.Interop.Ecore.EClass.InterfaceChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InterfaceChanging
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 258
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Interface property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> InterfaceChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event InterfaceChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEClass.InterfaceChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EClass.InterfaceChanged
  commentId: E:NMF.Interop.Ecore.EClass.InterfaceChanged
  id: InterfaceChanged
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: InterfaceChanged
  nameWithType: EClass.InterfaceChanged
  fullName: NMF.Interop.Ecore.EClass.InterfaceChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InterfaceChanged
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 263
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Interface property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> InterfaceChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event InterfaceChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEClass.InterfaceChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EClass.OnAbstractChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClass.OnAbstractChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnAbstractChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: OnAbstractChanging(ValueChangedEventArgs)
  nameWithType: EClass.OnAbstractChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClass.OnAbstractChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnAbstractChanging
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 269
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the AbstractChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnAbstractChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnAbstractChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EClass.OnAbstractChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EClass.OnAbstractChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClass.OnAbstractChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnAbstractChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: OnAbstractChanged(ValueChangedEventArgs)
  nameWithType: EClass.OnAbstractChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClass.OnAbstractChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnAbstractChanged
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 282
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the AbstractChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnAbstractChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnAbstractChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EClass.OnAbstractChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EClass.OnInterfaceChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClass.OnInterfaceChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnInterfaceChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: OnInterfaceChanging(ValueChangedEventArgs)
  nameWithType: EClass.OnInterfaceChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClass.OnInterfaceChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnInterfaceChanging
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 295
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the InterfaceChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnInterfaceChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnInterfaceChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EClass.OnInterfaceChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EClass.OnInterfaceChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClass.OnInterfaceChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnInterfaceChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: OnInterfaceChanged(ValueChangedEventArgs)
  nameWithType: EClass.OnInterfaceChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClass.OnInterfaceChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnInterfaceChanged
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 308
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the InterfaceChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnInterfaceChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnInterfaceChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EClass.OnInterfaceChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  id: GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: EClass.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRelativePathForNonIdentifiedChild
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 402
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the relative URI fragment for the given child model element\n"
  example: []
  syntax:
    content: protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The element that should be looked for
    return:
      type: System.String
      description: A fragment of the relative URI
    content.vb: Protected Overrides Function GetRelativePathForNonIdentifiedChild(element As IModelElement) As String
  overridden: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  overload: NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EClass.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EClass.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: EClass.GetModelElementForReference(String, Int32)
  fullName: NMF.Interop.Ecore.EClass.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 428
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nResolves the given URI to a child model element\n"
  example: []
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference name
    - id: index
      type: System.Int32
      description: The index of this reference
    return:
      type: NMF.Models.IModelElement
      description: The model element or null if it could not be found
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Interop.Ecore.EClass.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EClass.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EClass.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: GetAttributeValue(String, Int32)
  nameWithType: EClass.GetAttributeValue(String, Int32)
  fullName: NMF.Interop.Ecore.EClass.GetAttributeValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 472
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Interop.Ecore.EClass.GetAttributeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EClass.GetCollectionForFeature(System.String)
  commentId: M:NMF.Interop.Ecore.EClass.GetCollectionForFeature(System.String)
  id: GetCollectionForFeature(System.String)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: GetCollectionForFeature(String)
  nameWithType: EClass.GetCollectionForFeature(String)
  fullName: NMF.Interop.Ecore.EClass.GetCollectionForFeature(System.String)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCollectionForFeature
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 490
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Model element collection for the given feature\n"
  example: []
  syntax:
    content: protected override IList GetCollectionForFeature(string feature)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    return:
      type: System.Collections.IList
      description: A non-generic list of elements
    content.vb: Protected Overrides Function GetCollectionForFeature(feature As String) As IList
  overridden: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
  overload: NMF.Interop.Ecore.EClass.GetCollectionForFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EClass.SetFeature(System.String,System.Object)
  commentId: M:NMF.Interop.Ecore.EClass.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: EClass.SetFeature(String, Object)
  fullName: NMF.Interop.Ecore.EClass.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 516
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Interop.Ecore.EClassifier.SetFeature(System.String,System.Object)
  overload: NMF.Interop.Ecore.EClass.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EClass.GetClass
  commentId: M:NMF.Interop.Ecore.EClass.GetClass
  id: GetClass
  parent: NMF.Interop.Ecore.EClass
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: EClass.GetClass()
  fullName: NMF.Interop.Ecore.EClass.GetClass()
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EClass.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Interop/EcoreInterop/Model/EClass.cs
    startLine: 534
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Interop.Ecore.EClassifier.GetClass
  overload: NMF.Interop.Ecore.EClass.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Interop.Ecore.EModelElement
  commentId: T:NMF.Interop.Ecore.EModelElement
  parent: NMF.Interop.Ecore
  name: EModelElement
  nameWithType: EModelElement
  fullName: NMF.Interop.Ecore.EModelElement
- uid: NMF.Interop.Ecore.ENamedElement
  commentId: T:NMF.Interop.Ecore.ENamedElement
  parent: NMF.Interop.Ecore
  name: ENamedElement
  nameWithType: ENamedElement
  fullName: NMF.Interop.Ecore.ENamedElement
- uid: NMF.Interop.Ecore.EClassifier
  commentId: T:NMF.Interop.Ecore.EClassifier
  parent: NMF.Interop.Ecore
  name: EClassifier
  nameWithType: EClassifier
  fullName: NMF.Interop.Ecore.EClassifier
- uid: NMF.Interop.Ecore.IEClass
  commentId: T:NMF.Interop.Ecore.IEClass
  parent: NMF.Interop.Ecore
  name: IEClass
  nameWithType: IEClass
  fullName: NMF.Interop.Ecore.IEClass
- uid: NMF.Interop.Ecore.IEClassifier
  commentId: T:NMF.Interop.Ecore.IEClassifier
  parent: NMF.Interop.Ecore
  name: IEClassifier
  nameWithType: IEClassifier
  fullName: NMF.Interop.Ecore.IEClassifier
- uid: NMF.Interop.Ecore.IENamedElement
  commentId: T:NMF.Interop.Ecore.IENamedElement
  parent: NMF.Interop.Ecore
  name: IENamedElement
  nameWithType: IENamedElement
  fullName: NMF.Interop.Ecore.IENamedElement
- uid: NMF.Interop.Ecore.IEModelElement
  commentId: T:NMF.Interop.Ecore.IEModelElement
  parent: NMF.Interop.Ecore
  name: IEModelElement
  nameWithType: IEModelElement
  fullName: NMF.Interop.Ecore.IEModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Interop.Ecore.EClassifier.InstanceClassName
  commentId: P:NMF.Interop.Ecore.EClassifier.InstanceClassName
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceClassName
  nameWithType: EClassifier.InstanceClassName
  fullName: NMF.Interop.Ecore.EClassifier.InstanceClassName
- uid: NMF.Interop.Ecore.EClassifier.InstanceTypeName
  commentId: P:NMF.Interop.Ecore.EClassifier.InstanceTypeName
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceTypeName
  nameWithType: EClassifier.InstanceTypeName
  fullName: NMF.Interop.Ecore.EClassifier.InstanceTypeName
- uid: NMF.Interop.Ecore.EClassifier.EPackage
  commentId: P:NMF.Interop.Ecore.EClassifier.EPackage
  parent: NMF.Interop.Ecore.EClassifier
  name: EPackage
  nameWithType: EClassifier.EPackage
  fullName: NMF.Interop.Ecore.EClassifier.EPackage
- uid: NMF.Interop.Ecore.EClassifier.ETypeParameters
  commentId: P:NMF.Interop.Ecore.EClassifier.ETypeParameters
  parent: NMF.Interop.Ecore.EClassifier
  name: ETypeParameters
  nameWithType: EClassifier.ETypeParameters
  fullName: NMF.Interop.Ecore.EClassifier.ETypeParameters
- uid: NMF.Interop.Ecore.EClassifier.InstanceClassNameChanging
  commentId: E:NMF.Interop.Ecore.EClassifier.InstanceClassNameChanging
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceClassNameChanging
  nameWithType: EClassifier.InstanceClassNameChanging
  fullName: NMF.Interop.Ecore.EClassifier.InstanceClassNameChanging
- uid: NMF.Interop.Ecore.EClassifier.InstanceClassNameChanged
  commentId: E:NMF.Interop.Ecore.EClassifier.InstanceClassNameChanged
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceClassNameChanged
  nameWithType: EClassifier.InstanceClassNameChanged
  fullName: NMF.Interop.Ecore.EClassifier.InstanceClassNameChanged
- uid: NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanging
  commentId: E:NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanging
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceTypeNameChanging
  nameWithType: EClassifier.InstanceTypeNameChanging
  fullName: NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanging
- uid: NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanged
  commentId: E:NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanged
  parent: NMF.Interop.Ecore.EClassifier
  name: InstanceTypeNameChanged
  nameWithType: EClassifier.InstanceTypeNameChanged
  fullName: NMF.Interop.Ecore.EClassifier.InstanceTypeNameChanged
- uid: NMF.Interop.Ecore.EClassifier.EPackageChanging
  commentId: E:NMF.Interop.Ecore.EClassifier.EPackageChanging
  parent: NMF.Interop.Ecore.EClassifier
  name: EPackageChanging
  nameWithType: EClassifier.EPackageChanging
  fullName: NMF.Interop.Ecore.EClassifier.EPackageChanging
- uid: NMF.Interop.Ecore.EClassifier.EPackageChanged
  commentId: E:NMF.Interop.Ecore.EClassifier.EPackageChanged
  parent: NMF.Interop.Ecore.EClassifier
  name: EPackageChanged
  nameWithType: EClassifier.EPackageChanged
  fullName: NMF.Interop.Ecore.EClassifier.EPackageChanged
- uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnInstanceClassNameChanging(ValueChangedEventArgs)
  nameWithType: EClassifier.OnInstanceClassNameChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceClassNameChanging
    nameWithType: EClassifier.OnInstanceClassNameChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceClassNameChanging
    nameWithType: EClassifier.OnInstanceClassNameChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnInstanceClassNameChanged(ValueChangedEventArgs)
  nameWithType: EClassifier.OnInstanceClassNameChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceClassNameChanged
    nameWithType: EClassifier.OnInstanceClassNameChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceClassNameChanged
    nameWithType: EClassifier.OnInstanceClassNameChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceClassNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnInstanceTypeNameChanging(ValueChangedEventArgs)
  nameWithType: EClassifier.OnInstanceTypeNameChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceTypeNameChanging
    nameWithType: EClassifier.OnInstanceTypeNameChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceTypeNameChanging
    nameWithType: EClassifier.OnInstanceTypeNameChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnInstanceTypeNameChanged(ValueChangedEventArgs)
  nameWithType: EClassifier.OnInstanceTypeNameChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceTypeNameChanged
    nameWithType: EClassifier.OnInstanceTypeNameChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnInstanceTypeNameChanged
    nameWithType: EClassifier.OnInstanceTypeNameChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnInstanceTypeNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnEPackageChanging(ValueChangedEventArgs)
  nameWithType: EClassifier.OnEPackageChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnEPackageChanging
    nameWithType: EClassifier.OnEPackageChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnEPackageChanging
    nameWithType: EClassifier.OnEPackageChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: EClassifier.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: EClassifier.OnParentChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: EClassifier.OnParentChanging
    fullName: NMF.Interop.Ecore.EClassifier.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnEPackageChanged(ValueChangedEventArgs)
  nameWithType: EClassifier.OnEPackageChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnEPackageChanged
    nameWithType: EClassifier.OnEPackageChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnEPackageChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnEPackageChanged
    nameWithType: EClassifier.OnEPackageChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnEPackageChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EClassifier
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: EClassifier.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: EClassifier.OnParentChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: EClassifier.OnParentChanged
    fullName: NMF.Interop.Ecore.EClassifier.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: EClassifier.GetExpressionForAttribute(String)
  fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: EClassifier.GetExpressionForAttribute
    fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: EClassifier.GetExpressionForAttribute
    fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: EClassifier.GetExpressionForReference(String)
  fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: EClassifier.GetExpressionForReference
    fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: EClassifier.GetExpressionForReference
    fullName: NMF.Interop.Ecore.EClassifier.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.Name
  commentId: P:NMF.Interop.Ecore.ENamedElement.Name
  parent: NMF.Interop.Ecore.ENamedElement
  name: Name
  nameWithType: ENamedElement.Name
  fullName: NMF.Interop.Ecore.ENamedElement.Name
- uid: NMF.Interop.Ecore.ENamedElement.IsIdentified
  commentId: P:NMF.Interop.Ecore.ENamedElement.IsIdentified
  parent: NMF.Interop.Ecore.ENamedElement
  name: IsIdentified
  nameWithType: ENamedElement.IsIdentified
  fullName: NMF.Interop.Ecore.ENamedElement.IsIdentified
- uid: NMF.Interop.Ecore.ENamedElement.NameChanging
  commentId: E:NMF.Interop.Ecore.ENamedElement.NameChanging
  parent: NMF.Interop.Ecore.ENamedElement
  name: NameChanging
  nameWithType: ENamedElement.NameChanging
  fullName: NMF.Interop.Ecore.ENamedElement.NameChanging
- uid: NMF.Interop.Ecore.ENamedElement.NameChanged
  commentId: E:NMF.Interop.Ecore.ENamedElement.NameChanged
  parent: NMF.Interop.Ecore.ENamedElement
  name: NameChanged
  nameWithType: ENamedElement.NameChanged
  fullName: NMF.Interop.Ecore.ENamedElement.NameChanged
- uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.ENamedElement
  name: OnNameChanging(ValueChangedEventArgs)
  nameWithType: ENamedElement.OnNameChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: ENamedElement.OnNameChanging
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: ENamedElement.OnNameChanging
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.ENamedElement
  name: OnNameChanged(ValueChangedEventArgs)
  nameWithType: ENamedElement.OnNameChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: ENamedElement.OnNameChanged
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: ENamedElement.OnNameChanged
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  commentId: M:NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  parent: NMF.Interop.Ecore.ENamedElement
  name: ToIdentifierString()
  nameWithType: ENamedElement.ToIdentifierString()
  fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ENamedElement.ToIdentifierString
    fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ENamedElement.ToIdentifierString
    fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EModelElement.EAnnotations
  commentId: P:NMF.Interop.Ecore.EModelElement.EAnnotations
  parent: NMF.Interop.Ecore.EModelElement
  name: EAnnotations
  nameWithType: EModelElement.EAnnotations
  fullName: NMF.Interop.Ecore.EModelElement.EAnnotations
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Interop.Ecore.EClass.#ctor*
  commentId: Overload:NMF.Interop.Ecore.EClass.#ctor
  name: EClass
  nameWithType: EClass.EClass
  fullName: NMF.Interop.Ecore.EClass.EClass
- uid: NMF.Interop.Ecore.EClass.Abstract*
  commentId: Overload:NMF.Interop.Ecore.EClass.Abstract
  name: Abstract
  nameWithType: EClass.Abstract
  fullName: NMF.Interop.Ecore.EClass.Abstract
- uid: NMF.Interop.Ecore.IEClass.Abstract
  commentId: P:NMF.Interop.Ecore.IEClass.Abstract
  parent: NMF.Interop.Ecore.IEClass
  name: Abstract
  nameWithType: IEClass.Abstract
  fullName: NMF.Interop.Ecore.IEClass.Abstract
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.Interface*
  commentId: Overload:NMF.Interop.Ecore.EClass.Interface
  name: Interface
  nameWithType: EClass.Interface
  fullName: NMF.Interop.Ecore.EClass.Interface
- uid: NMF.Interop.Ecore.IEClass.Interface
  commentId: P:NMF.Interop.Ecore.IEClass.Interface
  parent: NMF.Interop.Ecore.IEClass
  name: Interface
  nameWithType: IEClass.Interface
  fullName: NMF.Interop.Ecore.IEClass.Interface
- uid: NMF.Interop.Ecore.EClass.ESuperTypes*
  commentId: Overload:NMF.Interop.Ecore.EClass.ESuperTypes
  name: ESuperTypes
  nameWithType: EClass.ESuperTypes
  fullName: NMF.Interop.Ecore.EClass.ESuperTypes
- uid: NMF.Interop.Ecore.IEClass.ESuperTypes
  commentId: P:NMF.Interop.Ecore.IEClass.ESuperTypes
  parent: NMF.Interop.Ecore.IEClass
  name: ESuperTypes
  nameWithType: IEClass.ESuperTypes
  fullName: NMF.Interop.Ecore.IEClass.ESuperTypes
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClass}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClass}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEClass>
  nameWithType: IOrderedSetExpression<IEClass>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEClass>
  nameWithType.vb: IOrderedSetExpression(Of IEClass)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEClass)
  name.vb: IOrderedSetExpression(Of IEClass)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    nameWithType: IEClass
    fullName: NMF.Interop.Ecore.IEClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEClass
    name: IEClass
    nameWithType: IEClass
    fullName: NMF.Interop.Ecore.IEClass
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
- uid: NMF.Interop.Ecore.EClass.EOperations*
  commentId: Overload:NMF.Interop.Ecore.EClass.EOperations
  name: EOperations
  nameWithType: EClass.EOperations
  fullName: NMF.Interop.Ecore.EClass.EOperations
- uid: NMF.Interop.Ecore.IEClass.EOperations
  commentId: P:NMF.Interop.Ecore.IEClass.EOperations
  parent: NMF.Interop.Ecore.IEClass
  name: EOperations
  nameWithType: IEClass.EOperations
  fullName: NMF.Interop.Ecore.IEClass.EOperations
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEOperation}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEOperation>
  nameWithType: IOrderedSetExpression<IEOperation>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEOperation>
  nameWithType.vb: IOrderedSetExpression(Of IEOperation)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEOperation)
  name.vb: IOrderedSetExpression(Of IEOperation)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    nameWithType: IEOperation
    fullName: NMF.Interop.Ecore.IEOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEOperation
    name: IEOperation
    nameWithType: IEOperation
    fullName: NMF.Interop.Ecore.IEOperation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.EStructuralFeatures*
  commentId: Overload:NMF.Interop.Ecore.EClass.EStructuralFeatures
  name: EStructuralFeatures
  nameWithType: EClass.EStructuralFeatures
  fullName: NMF.Interop.Ecore.EClass.EStructuralFeatures
- uid: NMF.Interop.Ecore.IEClass.EStructuralFeatures
  commentId: P:NMF.Interop.Ecore.IEClass.EStructuralFeatures
  parent: NMF.Interop.Ecore.IEClass
  name: EStructuralFeatures
  nameWithType: IEClass.EStructuralFeatures
  fullName: NMF.Interop.Ecore.IEClass.EStructuralFeatures
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEStructuralFeature}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEStructuralFeature}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEStructuralFeature>
  nameWithType: IOrderedSetExpression<IEStructuralFeature>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEStructuralFeature>
  nameWithType.vb: IOrderedSetExpression(Of IEStructuralFeature)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEStructuralFeature)
  name.vb: IOrderedSetExpression(Of IEStructuralFeature)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEStructuralFeature
    name: IEStructuralFeature
    nameWithType: IEStructuralFeature
    fullName: NMF.Interop.Ecore.IEStructuralFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEStructuralFeature
    name: IEStructuralFeature
    nameWithType: IEStructuralFeature
    fullName: NMF.Interop.Ecore.IEStructuralFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.EGenericSuperTypes*
  commentId: Overload:NMF.Interop.Ecore.EClass.EGenericSuperTypes
  name: EGenericSuperTypes
  nameWithType: EClass.EGenericSuperTypes
  fullName: NMF.Interop.Ecore.EClass.EGenericSuperTypes
- uid: NMF.Interop.Ecore.IEClass.EGenericSuperTypes
  commentId: P:NMF.Interop.Ecore.IEClass.EGenericSuperTypes
  parent: NMF.Interop.Ecore.IEClass
  name: EGenericSuperTypes
  nameWithType: IEClass.EGenericSuperTypes
  fullName: NMF.Interop.Ecore.IEClass.EGenericSuperTypes
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEGenericType>
  nameWithType: IOrderedSetExpression<IEGenericType>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEGenericType>
  nameWithType.vb: IOrderedSetExpression(Of IEGenericType)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEGenericType)
  name.vb: IOrderedSetExpression(Of IEGenericType)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEGenericType
    name: IEGenericType
    nameWithType: IEGenericType
    fullName: NMF.Interop.Ecore.IEGenericType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEGenericType
    name: IEGenericType
    nameWithType: IEGenericType
    fullName: NMF.Interop.Ecore.IEGenericType
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClassifier.Children
  commentId: P:NMF.Interop.Ecore.EClassifier.Children
  parent: NMF.Interop.Ecore.EClassifier
  name: Children
  nameWithType: EClassifier.Children
  fullName: NMF.Interop.Ecore.EClassifier.Children
- uid: NMF.Interop.Ecore.EClass.Children*
  commentId: Overload:NMF.Interop.Ecore.EClass.Children
  name: Children
  nameWithType: EClass.Children
  fullName: NMF.Interop.Ecore.EClass.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Interop.Ecore.EClassifier.ReferencedElements
  commentId: P:NMF.Interop.Ecore.EClassifier.ReferencedElements
  parent: NMF.Interop.Ecore.EClassifier
  name: ReferencedElements
  nameWithType: EClassifier.ReferencedElements
  fullName: NMF.Interop.Ecore.EClassifier.ReferencedElements
- uid: NMF.Interop.Ecore.EClass.ReferencedElements*
  commentId: Overload:NMF.Interop.Ecore.EClass.ReferencedElements
  name: ReferencedElements
  nameWithType: EClass.ReferencedElements
  fullName: NMF.Interop.Ecore.EClass.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Interop.Ecore.EClass.ClassInstance*
  commentId: Overload:NMF.Interop.Ecore.EClass.ClassInstance
  name: ClassInstance
  nameWithType: EClass.ClassInstance
  fullName: NMF.Interop.Ecore.EClass.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Interop.Ecore.IEClass.AbstractChanging
  commentId: E:NMF.Interop.Ecore.IEClass.AbstractChanging
  parent: NMF.Interop.Ecore.IEClass
  name: AbstractChanging
  nameWithType: IEClass.AbstractChanging
  fullName: NMF.Interop.Ecore.IEClass.AbstractChanging
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.IEClass.AbstractChanged
  commentId: E:NMF.Interop.Ecore.IEClass.AbstractChanged
  parent: NMF.Interop.Ecore.IEClass
  name: AbstractChanged
  nameWithType: IEClass.AbstractChanged
  fullName: NMF.Interop.Ecore.IEClass.AbstractChanged
- uid: NMF.Interop.Ecore.IEClass.InterfaceChanging
  commentId: E:NMF.Interop.Ecore.IEClass.InterfaceChanging
  parent: NMF.Interop.Ecore.IEClass
  name: InterfaceChanging
  nameWithType: IEClass.InterfaceChanging
  fullName: NMF.Interop.Ecore.IEClass.InterfaceChanging
- uid: NMF.Interop.Ecore.IEClass.InterfaceChanged
  commentId: E:NMF.Interop.Ecore.IEClass.InterfaceChanged
  parent: NMF.Interop.Ecore.IEClass
  name: InterfaceChanged
  nameWithType: IEClass.InterfaceChanged
  fullName: NMF.Interop.Ecore.IEClass.InterfaceChanged
- uid: NMF.Interop.Ecore.EClass.OnAbstractChanging*
  commentId: Overload:NMF.Interop.Ecore.EClass.OnAbstractChanging
  name: OnAbstractChanging
  nameWithType: EClass.OnAbstractChanging
  fullName: NMF.Interop.Ecore.EClass.OnAbstractChanging
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Interop.Ecore.EClass.OnAbstractChanged*
  commentId: Overload:NMF.Interop.Ecore.EClass.OnAbstractChanged
  name: OnAbstractChanged
  nameWithType: EClass.OnAbstractChanged
  fullName: NMF.Interop.Ecore.EClass.OnAbstractChanged
- uid: NMF.Interop.Ecore.EClass.OnInterfaceChanging*
  commentId: Overload:NMF.Interop.Ecore.EClass.OnInterfaceChanging
  name: OnInterfaceChanging
  nameWithType: EClass.OnInterfaceChanging
  fullName: NMF.Interop.Ecore.EClass.OnInterfaceChanging
- uid: NMF.Interop.Ecore.EClass.OnInterfaceChanged*
  commentId: Overload:NMF.Interop.Ecore.EClass.OnInterfaceChanged
  name: OnInterfaceChanged
  nameWithType: EClass.OnInterfaceChanged
  fullName: NMF.Interop.Ecore.EClass.OnInterfaceChanged
- uid: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EClassifier
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: EClassifier.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: EClassifier.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: EClassifier.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Interop.Ecore.EClassifier.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild*
  commentId: Overload:NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild
  name: GetRelativePathForNonIdentifiedChild
  nameWithType: EClass.GetRelativePathForNonIdentifiedChild
  fullName: NMF.Interop.Ecore.EClass.GetRelativePathForNonIdentifiedChild
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: EClassifier.GetModelElementForReference(String, Int32)
  fullName: NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: EClassifier.GetModelElementForReference
    fullName: NMF.Interop.Ecore.EClassifier.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: EClassifier.GetModelElementForReference
    fullName: NMF.Interop.Ecore.EClassifier.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.GetModelElementForReference*
  commentId: Overload:NMF.Interop.Ecore.EClass.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: EClass.GetModelElementForReference
  fullName: NMF.Interop.Ecore.EClass.GetModelElementForReference
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: EClassifier.GetAttributeValue(String, Int32)
  fullName: NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: EClassifier.GetAttributeValue
    fullName: NMF.Interop.Ecore.EClassifier.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: EClassifier.GetAttributeValue
    fullName: NMF.Interop.Ecore.EClassifier.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.GetAttributeValue*
  commentId: Overload:NMF.Interop.Ecore.EClass.GetAttributeValue
  name: GetAttributeValue
  nameWithType: EClass.GetAttributeValue
  fullName: NMF.Interop.Ecore.EClass.GetAttributeValue
- uid: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
  commentId: M:NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: EClassifier.GetCollectionForFeature(String)
  fullName: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: EClassifier.GetCollectionForFeature
    fullName: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: EClassifier.GetCollectionForFeature
    fullName: NMF.Interop.Ecore.EClassifier.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.GetCollectionForFeature*
  commentId: Overload:NMF.Interop.Ecore.EClass.GetCollectionForFeature
  name: GetCollectionForFeature
  nameWithType: EClass.GetCollectionForFeature
  fullName: NMF.Interop.Ecore.EClass.GetCollectionForFeature
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Interop.Ecore.EClassifier.SetFeature(System.String,System.Object)
  commentId: M:NMF.Interop.Ecore.EClassifier.SetFeature(System.String,System.Object)
  parent: NMF.Interop.Ecore.EClassifier
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: EClassifier.SetFeature(String, Object)
  fullName: NMF.Interop.Ecore.EClassifier.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: EClassifier.SetFeature
    fullName: NMF.Interop.Ecore.EClassifier.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: EClassifier.SetFeature
    fullName: NMF.Interop.Ecore.EClassifier.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.SetFeature*
  commentId: Overload:NMF.Interop.Ecore.EClass.SetFeature
  name: SetFeature
  nameWithType: EClass.SetFeature
  fullName: NMF.Interop.Ecore.EClass.SetFeature
- uid: NMF.Interop.Ecore.EClassifier.GetClass
  commentId: M:NMF.Interop.Ecore.EClassifier.GetClass
  parent: NMF.Interop.Ecore.EClassifier
  name: GetClass()
  nameWithType: EClassifier.GetClass()
  fullName: NMF.Interop.Ecore.EClassifier.GetClass()
  spec.csharp:
  - uid: NMF.Interop.Ecore.EClassifier.GetClass
    name: GetClass
    nameWithType: EClassifier.GetClass
    fullName: NMF.Interop.Ecore.EClassifier.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EClassifier.GetClass
    name: GetClass
    nameWithType: EClassifier.GetClass
    fullName: NMF.Interop.Ecore.EClassifier.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EClass.GetClass*
  commentId: Overload:NMF.Interop.Ecore.EClass.GetClass
  name: GetClass
  nameWithType: EClass.GetClass
  fullName: NMF.Interop.Ecore.EClass.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
