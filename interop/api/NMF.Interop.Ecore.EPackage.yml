### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.EPackage
  commentId: T:NMF.Interop.Ecore.EPackage
  id: EPackage
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.EPackage.#ctor
  - NMF.Interop.Ecore.EPackage.Children
  - NMF.Interop.Ecore.EPackage.ClassInstance
  - NMF.Interop.Ecore.EPackage.EClassifiers
  - NMF.Interop.Ecore.EPackage.EFactoryInstance
  - NMF.Interop.Ecore.EPackage.EFactoryInstanceChanged
  - NMF.Interop.Ecore.EPackage.EFactoryInstanceChanging
  - NMF.Interop.Ecore.EPackage.ESubpackages
  - NMF.Interop.Ecore.EPackage.ESuperPackage
  - NMF.Interop.Ecore.EPackage.ESuperPackageChanged
  - NMF.Interop.Ecore.EPackage.ESuperPackageChanging
  - NMF.Interop.Ecore.EPackage.GetAttributeValue(System.String,System.Int32)
  - NMF.Interop.Ecore.EPackage.GetClass
  - NMF.Interop.Ecore.EPackage.GetCollectionForFeature(System.String)
  - NMF.Interop.Ecore.EPackage.GetExpressionForAttribute(System.String)
  - NMF.Interop.Ecore.EPackage.GetExpressionForReference(System.String)
  - NMF.Interop.Ecore.EPackage.GetModelElementForReference(System.String,System.Int32)
  - NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EPackage.NsPrefix
  - NMF.Interop.Ecore.EPackage.NsPrefixChanged
  - NMF.Interop.Ecore.EPackage.NsPrefixChanging
  - NMF.Interop.Ecore.EPackage.NsURI
  - NMF.Interop.Ecore.EPackage.NsURIChanged
  - NMF.Interop.Ecore.EPackage.NsURIChanging
  - NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnESuperPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnESuperPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnNsPrefixChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnNsPrefixChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnNsURIChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnNsURIChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.EPackage.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EPackage.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Interop.Ecore.EPackage.ReferencedElements
  - NMF.Interop.Ecore.EPackage.SetFeature(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: EPackage
  nameWithType: EPackage
  fullName: NMF.Interop.Ecore.EPackage
  type: Class
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EPackage
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe default implementation of the EPackage class\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://www.eclipse.org/emf/2002/Ecore")]

      [XmlNamespacePrefix("ecore")]

      [ModelRepresentationClass("http://www.eclipse.org/emf/2002/Ecore#//EPackage/")]

      public class EPackage : ENamedElement, IEPackage, IENamedElement, IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://www.eclipse.org/emf/2002/Ecore")>

      <XmlNamespacePrefix("ecore")>

      <ModelRepresentationClass("http://www.eclipse.org/emf/2002/Ecore#//EPackage/")>

      Public Class EPackage
          Inherits ENamedElement
          Implements IEPackage, IENamedElement, IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Interop.Ecore.EModelElement
  - NMF.Interop.Ecore.ENamedElement
  implements:
  - NMF.Interop.Ecore.IEPackage
  - NMF.Interop.Ecore.IENamedElement
  - NMF.Interop.Ecore.IEModelElement
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Interop.Ecore.ENamedElement.Name
  - NMF.Interop.Ecore.ENamedElement.IsIdentified
  - NMF.Interop.Ecore.ENamedElement.NameChanging
  - NMF.Interop.Ecore.ENamedElement.NameChanged
  - NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - NMF.Interop.Ecore.EModelElement.EAnnotations
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.eclipse.org/emf/2002/Ecore
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ecore
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.eclipse.org/emf/2002/Ecore#//EPackage/
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Interop.Ecore.EPackage.#ctor
  commentId: M:NMF.Interop.Ecore.EPackage.#ctor
  id: '#ctor'
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: EPackage()
  nameWithType: EPackage.EPackage()
  fullName: NMF.Interop.Ecore.EPackage.EPackage()
  type: Constructor
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 70
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  syntax:
    content: public EPackage()
    content.vb: Public Sub New
  overload: NMF.Interop.Ecore.EPackage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.NsURI
  commentId: P:NMF.Interop.Ecore.EPackage.NsURI
  id: NsURI
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsURI
  nameWithType: EPackage.NsURI
  fullName: NMF.Interop.Ecore.EPackage.NsURI
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsURI
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 83
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe nsURI property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("nsURI")]

      [XmlAttribute(true)]

      public virtual string NsURI { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <XmlElementName("nsURI")>

      <XmlAttribute(True)>

      Public Overridable Property NsURI As String
  overload: NMF.Interop.Ecore.EPackage.NsURI*
  implements:
  - NMF.Interop.Ecore.IEPackage.NsURI
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nsURI
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.NsPrefix
  commentId: P:NMF.Interop.Ecore.EPackage.NsPrefix
  id: NsPrefix
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsPrefix
  nameWithType: EPackage.NsPrefix
  fullName: NMF.Interop.Ecore.EPackage.NsPrefix
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsPrefix
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 109
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe nsPrefix property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("nsPrefix")]

      [XmlAttribute(true)]

      public virtual string NsPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <XmlElementName("nsPrefix")>

      <XmlAttribute(True)>

      Public Overridable Property NsPrefix As String
  overload: NMF.Interop.Ecore.EPackage.NsPrefix*
  implements:
  - NMF.Interop.Ecore.IEPackage.NsPrefix
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nsPrefix
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.EFactoryInstance
  commentId: P:NMF.Interop.Ecore.EPackage.EFactoryInstance
  id: EFactoryInstance
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: EFactoryInstance
  nameWithType: EPackage.EFactoryInstance
  fullName: NMF.Interop.Ecore.EPackage.EFactoryInstance
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EFactoryInstance
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 135
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eFactoryInstance property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eFactoryInstance")]

      [XmlAttribute(true)]

      [XmlOpposite("ePackage")]

      public virtual IEFactory EFactoryInstance { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEFactory
    content.vb: >-
      <XmlElementName("eFactoryInstance")>

      <XmlAttribute(True)>

      <XmlOpposite("ePackage")>

      Public Overridable Property EFactoryInstance As IEFactory
  overload: NMF.Interop.Ecore.EPackage.EFactoryInstance*
  implements:
  - NMF.Interop.Ecore.IEPackage.EFactoryInstance
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eFactoryInstance
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ePackage
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.EClassifiers
  commentId: P:NMF.Interop.Ecore.EPackage.EClassifiers
  id: EClassifiers
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: EClassifiers
  nameWithType: EPackage.EClassifiers
  fullName: NMF.Interop.Ecore.EPackage.EClassifiers
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClassifiers
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 172
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eClassifiers property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eClassifiers")]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("ePackage")]

      public virtual IOrderedSetExpression<IEClassifier> EClassifiers { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClassifier}
    content.vb: >-
      <XmlElementName("eClassifiers")>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("ePackage")>

      Public Overridable ReadOnly Property EClassifiers As IOrderedSetExpression(Of IEClassifier)
  overload: NMF.Interop.Ecore.EPackage.EClassifiers*
  implements:
  - NMF.Interop.Ecore.IEPackage.EClassifiers
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eClassifiers
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ePackage
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EPackage.ESubpackages
  commentId: P:NMF.Interop.Ecore.EPackage.ESubpackages
  id: ESubpackages
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ESubpackages
  nameWithType: EPackage.ESubpackages
  fullName: NMF.Interop.Ecore.EPackage.ESubpackages
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ESubpackages
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 189
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eSubpackages property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eSubpackages")]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("eSuperPackage")]

      public virtual IOrderedSetExpression<IEPackage> ESubpackages { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEPackage}
    content.vb: >-
      <XmlElementName("eSubpackages")>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("eSuperPackage")>

      Public Overridable ReadOnly Property ESubpackages As IOrderedSetExpression(Of IEPackage)
  overload: NMF.Interop.Ecore.EPackage.ESubpackages*
  implements:
  - NMF.Interop.Ecore.IEPackage.ESubpackages
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eSubpackages
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eSuperPackage
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: NMF.Interop.Ecore.EPackage.ESuperPackage
  commentId: P:NMF.Interop.Ecore.EPackage.ESuperPackage
  id: ESuperPackage
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ESuperPackage
  nameWithType: EPackage.ESuperPackage
  fullName: NMF.Interop.Ecore.EPackage.ESuperPackage
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ESuperPackage
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 206
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eSuperPackage property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("eSuperPackage")]

      [XmlAttribute(true)]

      [XmlOpposite("eSubpackages")]

      public virtual IEPackage ESuperPackage { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEPackage
    content.vb: >-
      <XmlElementName("eSuperPackage")>

      <XmlAttribute(True)>

      <XmlOpposite("eSubpackages")>

      Public Overridable Property ESuperPackage As IEPackage
  overload: NMF.Interop.Ecore.EPackage.ESuperPackage*
  implements:
  - NMF.Interop.Ecore.IEPackage.ESuperPackage
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eSuperPackage
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: eSubpackages
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.Children
  commentId: P:NMF.Interop.Ecore.EPackage.Children
  id: Children
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: EPackage.Children
  fullName: NMF.Interop.Ecore.EPackage.Children
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Children
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 225
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the child model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Interop.Ecore.EModelElement.Children
  overload: NMF.Interop.Ecore.EPackage.Children*
  implements:
  - NMF.Models.IModelElement.Children
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Interop.Ecore.EPackage.ReferencedElements
  commentId: P:NMF.Interop.Ecore.EPackage.ReferencedElements
  id: ReferencedElements
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: EPackage.ReferencedElements
  fullName: NMF.Interop.Ecore.EPackage.ReferencedElements
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 236
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Interop.Ecore.EModelElement.ReferencedElements
  overload: NMF.Interop.Ecore.EPackage.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Interop.Ecore.EPackage.ClassInstance
  commentId: P:NMF.Interop.Ecore.EPackage.ClassInstance
  id: ClassInstance
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: EPackage.ClassInstance
  fullName: NMF.Interop.Ecore.EPackage.ClassInstance
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 247
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Interop.Ecore.EPackage.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Interop.Ecore.EPackage.NsURIChanging
  commentId: E:NMF.Interop.Ecore.EPackage.NsURIChanging
  id: NsURIChanging
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsURIChanging
  nameWithType: EPackage.NsURIChanging
  fullName: NMF.Interop.Ecore.EPackage.NsURIChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsURIChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 262
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the NsURI property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NsURIChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NsURIChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.NsURIChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.NsURIChanged
  commentId: E:NMF.Interop.Ecore.EPackage.NsURIChanged
  id: NsURIChanged
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsURIChanged
  nameWithType: EPackage.NsURIChanged
  fullName: NMF.Interop.Ecore.EPackage.NsURIChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsURIChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 267
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the NsURI property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NsURIChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NsURIChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.NsURIChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.NsPrefixChanging
  commentId: E:NMF.Interop.Ecore.EPackage.NsPrefixChanging
  id: NsPrefixChanging
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsPrefixChanging
  nameWithType: EPackage.NsPrefixChanging
  fullName: NMF.Interop.Ecore.EPackage.NsPrefixChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsPrefixChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 272
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the NsPrefix property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NsPrefixChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NsPrefixChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.NsPrefixChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.NsPrefixChanged
  commentId: E:NMF.Interop.Ecore.EPackage.NsPrefixChanged
  id: NsPrefixChanged
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: NsPrefixChanged
  nameWithType: EPackage.NsPrefixChanged
  fullName: NMF.Interop.Ecore.EPackage.NsPrefixChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NsPrefixChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 277
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the NsPrefix property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NsPrefixChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NsPrefixChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.NsPrefixChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.EFactoryInstanceChanging
  commentId: E:NMF.Interop.Ecore.EPackage.EFactoryInstanceChanging
  id: EFactoryInstanceChanging
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: EFactoryInstanceChanging
  nameWithType: EPackage.EFactoryInstanceChanging
  fullName: NMF.Interop.Ecore.EPackage.EFactoryInstanceChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EFactoryInstanceChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 282
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the EFactoryInstance property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> EFactoryInstanceChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event EFactoryInstanceChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.EFactoryInstanceChanged
  commentId: E:NMF.Interop.Ecore.EPackage.EFactoryInstanceChanged
  id: EFactoryInstanceChanged
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: EFactoryInstanceChanged
  nameWithType: EPackage.EFactoryInstanceChanged
  fullName: NMF.Interop.Ecore.EPackage.EFactoryInstanceChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EFactoryInstanceChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 287
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the EFactoryInstance property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> EFactoryInstanceChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event EFactoryInstanceChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.ESuperPackageChanging
  commentId: E:NMF.Interop.Ecore.EPackage.ESuperPackageChanging
  id: ESuperPackageChanging
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ESuperPackageChanging
  nameWithType: EPackage.ESuperPackageChanging
  fullName: NMF.Interop.Ecore.EPackage.ESuperPackageChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ESuperPackageChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 292
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the ESuperPackage property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ESuperPackageChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event ESuperPackageChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.ESuperPackageChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.ESuperPackageChanged
  commentId: E:NMF.Interop.Ecore.EPackage.ESuperPackageChanged
  id: ESuperPackageChanged
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: ESuperPackageChanged
  nameWithType: EPackage.ESuperPackageChanged
  fullName: NMF.Interop.Ecore.EPackage.ESuperPackageChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ESuperPackageChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 297
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the ESuperPackage property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ESuperPackageChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event ESuperPackageChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Interop.Ecore.IEPackage.ESuperPackageChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Interop.Ecore.EPackage.OnNsURIChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnNsURIChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnNsURIChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnNsURIChanging(ValueChangedEventArgs)
  nameWithType: EPackage.OnNsURIChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnNsURIChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNsURIChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 303
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the NsURIChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnNsURIChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNsURIChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnNsURIChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnNsURIChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnNsURIChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnNsURIChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnNsURIChanged(ValueChangedEventArgs)
  nameWithType: EPackage.OnNsURIChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnNsURIChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNsURIChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 316
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the NsURIChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnNsURIChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNsURIChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnNsURIChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnNsPrefixChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnNsPrefixChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnNsPrefixChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnNsPrefixChanging(ValueChangedEventArgs)
  nameWithType: EPackage.OnNsPrefixChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnNsPrefixChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNsPrefixChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 329
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the NsPrefixChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnNsPrefixChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNsPrefixChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnNsPrefixChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnNsPrefixChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnNsPrefixChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnNsPrefixChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnNsPrefixChanged(ValueChangedEventArgs)
  nameWithType: EPackage.OnNsPrefixChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnNsPrefixChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNsPrefixChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 342
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the NsPrefixChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnNsPrefixChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNsPrefixChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnNsPrefixChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnEFactoryInstanceChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnEFactoryInstanceChanging(ValueChangedEventArgs)
  nameWithType: EPackage.OnEFactoryInstanceChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnEFactoryInstanceChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 355
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the EFactoryInstanceChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnEFactoryInstanceChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnEFactoryInstanceChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnEFactoryInstanceChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnEFactoryInstanceChanged(ValueChangedEventArgs)
  nameWithType: EPackage.OnEFactoryInstanceChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnEFactoryInstanceChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 368
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the EFactoryInstanceChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnEFactoryInstanceChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnEFactoryInstanceChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnESuperPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnESuperPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnESuperPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnESuperPackageChanging(ValueChangedEventArgs)
  nameWithType: EPackage.OnESuperPackageChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnESuperPackageChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnESuperPackageChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 431
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the ESuperPackageChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnESuperPackageChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnESuperPackageChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnESuperPackageChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EPackage.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: EPackage.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Interop.Ecore.EPackage.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnParentChanging
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 445
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets called when the parent model element of the current model element is about to change\n"
  example: []
  syntax:
    content: protected override void OnParentChanging(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent model element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent model element
    content.vb: Protected Overrides Sub OnParentChanging(newParent As IModelElement, oldParent As IModelElement)
  overridden: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  overload: NMF.Interop.Ecore.EPackage.OnParentChanging*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.OnESuperPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.EPackage.OnESuperPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnESuperPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnESuperPackageChanged(ValueChangedEventArgs)
  nameWithType: EPackage.OnESuperPackageChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.EPackage.OnESuperPackageChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnESuperPackageChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 458
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nRaises the ESuperPackageChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnESuperPackageChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnESuperPackageChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Interop.Ecore.EPackage.OnESuperPackageChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Interop.Ecore.EPackage.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EPackage.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: EPackage.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Interop.Ecore.EPackage.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnParentChanged
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 472
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets called when the parent model element of the current model element changes\n"
  example: []
  syntax:
    content: protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent model element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent model element
    content.vb: Protected Overrides Sub OnParentChanged(newParent As IModelElement, oldParent As IModelElement)
  overridden: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  overload: NMF.Interop.Ecore.EPackage.OnParentChanged*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  id: GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: EPackage.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRelativePathForNonIdentifiedChild
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 495
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the relative URI fragment for the given child model element\n"
  example: []
  syntax:
    content: protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The element that should be looked for
    return:
      type: System.String
      description: A fragment of the relative URI
    content.vb: Protected Overrides Function GetRelativePathForNonIdentifiedChild(element As IModelElement) As String
  overridden: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  overload: NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EPackage.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: EPackage.GetModelElementForReference(String, Int32)
  fullName: NMF.Interop.Ecore.EPackage.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 516
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nResolves the given URI to a child model element\n"
  example: []
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference name
    - id: index
      type: System.Int32
      description: The index of this reference
    return:
      type: NMF.Models.IModelElement
      description: The model element or null if it could not be found
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Interop.Ecore.EPackage.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EPackage.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetAttributeValue(String, Int32)
  nameWithType: EPackage.GetAttributeValue(String, Int32)
  fullName: NMF.Interop.Ecore.EPackage.GetAttributeValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 549
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Interop.Ecore.EPackage.GetAttributeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetCollectionForFeature(System.String)
  commentId: M:NMF.Interop.Ecore.EPackage.GetCollectionForFeature(System.String)
  id: GetCollectionForFeature(System.String)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetCollectionForFeature(String)
  nameWithType: EPackage.GetCollectionForFeature(String)
  fullName: NMF.Interop.Ecore.EPackage.GetCollectionForFeature(System.String)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCollectionForFeature
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 567
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Model element collection for the given feature\n"
  example: []
  syntax:
    content: protected override IList GetCollectionForFeature(string feature)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    return:
      type: System.Collections.IList
      description: A non-generic list of elements
    content.vb: Protected Overrides Function GetCollectionForFeature(feature As String) As IList
  overridden: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
  overload: NMF.Interop.Ecore.EPackage.GetCollectionForFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.SetFeature(System.String,System.Object)
  commentId: M:NMF.Interop.Ecore.EPackage.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: EPackage.SetFeature(String, Object)
  fullName: NMF.Interop.Ecore.EPackage.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 585
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Interop.Ecore.ENamedElement.SetFeature(System.String,System.Object)
  overload: NMF.Interop.Ecore.EPackage.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Interop.Ecore.EPackage.GetExpressionForAttribute(System.String)
  id: GetExpressionForAttribute(System.String)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetExpressionForAttribute(String)
  nameWithType: EPackage.GetExpressionForAttribute(String)
  fullName: NMF.Interop.Ecore.EPackage.GetExpressionForAttribute(System.String)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForAttribute
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 615
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the property expression for the given attribute\n"
  example: []
  syntax:
    content: protected override INotifyExpression<object> GetExpressionForAttribute(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute in upper case
    return:
      type: NMF.Expressions.INotifyExpression{System.Object}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForAttribute(attribute As String) As INotifyExpression(Of Object)
  overridden: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  overload: NMF.Interop.Ecore.EPackage.GetExpressionForAttribute*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetExpressionForReference(System.String)
  commentId: M:NMF.Interop.Ecore.EPackage.GetExpressionForReference(System.String)
  id: GetExpressionForReference(System.String)
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetExpressionForReference(String)
  nameWithType: EPackage.GetExpressionForReference(String)
  fullName: NMF.Interop.Ecore.EPackage.GetExpressionForReference(System.String)
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForReference
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 633
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the property expression for the given reference\n"
  example: []
  syntax:
    content: protected override INotifyExpression<IModelElement> GetExpressionForReference(string reference)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference in upper case
    return:
      type: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForReference(reference As String) As INotifyExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  overload: NMF.Interop.Ecore.EPackage.GetExpressionForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Interop.Ecore.EPackage.GetClass
  commentId: M:NMF.Interop.Ecore.EPackage.GetClass
  id: GetClass
  parent: NMF.Interop.Ecore.EPackage
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: EPackage.GetClass()
  fullName: NMF.Interop.Ecore.EPackage.GetClass()
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Model/EPackage.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Interop/EcoreInterop/Model/EPackage.cs
    startLine: 649
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Interop.Ecore.ENamedElement.GetClass
  overload: NMF.Interop.Ecore.EPackage.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Interop.Ecore.EModelElement
  commentId: T:NMF.Interop.Ecore.EModelElement
  parent: NMF.Interop.Ecore
  name: EModelElement
  nameWithType: EModelElement
  fullName: NMF.Interop.Ecore.EModelElement
- uid: NMF.Interop.Ecore.ENamedElement
  commentId: T:NMF.Interop.Ecore.ENamedElement
  parent: NMF.Interop.Ecore
  name: ENamedElement
  nameWithType: ENamedElement
  fullName: NMF.Interop.Ecore.ENamedElement
- uid: NMF.Interop.Ecore.IEPackage
  commentId: T:NMF.Interop.Ecore.IEPackage
  parent: NMF.Interop.Ecore
  name: IEPackage
  nameWithType: IEPackage
  fullName: NMF.Interop.Ecore.IEPackage
- uid: NMF.Interop.Ecore.IENamedElement
  commentId: T:NMF.Interop.Ecore.IENamedElement
  parent: NMF.Interop.Ecore
  name: IENamedElement
  nameWithType: IENamedElement
  fullName: NMF.Interop.Ecore.IENamedElement
- uid: NMF.Interop.Ecore.IEModelElement
  commentId: T:NMF.Interop.Ecore.IEModelElement
  parent: NMF.Interop.Ecore
  name: IEModelElement
  nameWithType: IEModelElement
  fullName: NMF.Interop.Ecore.IEModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Interop.Ecore.ENamedElement.Name
  commentId: P:NMF.Interop.Ecore.ENamedElement.Name
  parent: NMF.Interop.Ecore.ENamedElement
  name: Name
  nameWithType: ENamedElement.Name
  fullName: NMF.Interop.Ecore.ENamedElement.Name
- uid: NMF.Interop.Ecore.ENamedElement.IsIdentified
  commentId: P:NMF.Interop.Ecore.ENamedElement.IsIdentified
  parent: NMF.Interop.Ecore.ENamedElement
  name: IsIdentified
  nameWithType: ENamedElement.IsIdentified
  fullName: NMF.Interop.Ecore.ENamedElement.IsIdentified
- uid: NMF.Interop.Ecore.ENamedElement.NameChanging
  commentId: E:NMF.Interop.Ecore.ENamedElement.NameChanging
  parent: NMF.Interop.Ecore.ENamedElement
  name: NameChanging
  nameWithType: ENamedElement.NameChanging
  fullName: NMF.Interop.Ecore.ENamedElement.NameChanging
- uid: NMF.Interop.Ecore.ENamedElement.NameChanged
  commentId: E:NMF.Interop.Ecore.ENamedElement.NameChanged
  parent: NMF.Interop.Ecore.ENamedElement
  name: NameChanged
  nameWithType: ENamedElement.NameChanged
  fullName: NMF.Interop.Ecore.ENamedElement.NameChanged
- uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.ENamedElement
  name: OnNameChanging(ValueChangedEventArgs)
  nameWithType: ENamedElement.OnNameChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: ENamedElement.OnNameChanging
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: ENamedElement.OnNameChanging
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Ecore.ENamedElement
  name: OnNameChanged(ValueChangedEventArgs)
  nameWithType: ENamedElement.OnNameChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: ENamedElement.OnNameChanged
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: ENamedElement.OnNameChanged
    fullName: NMF.Interop.Ecore.ENamedElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  commentId: M:NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  parent: NMF.Interop.Ecore.ENamedElement
  name: ToIdentifierString()
  nameWithType: ENamedElement.ToIdentifierString()
  fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ENamedElement.ToIdentifierString
    fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ENamedElement.ToIdentifierString
    fullName: NMF.Interop.Ecore.ENamedElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EModelElement.EAnnotations
  commentId: P:NMF.Interop.Ecore.EModelElement.EAnnotations
  parent: NMF.Interop.Ecore.EModelElement
  name: EAnnotations
  nameWithType: EModelElement.EAnnotations
  fullName: NMF.Interop.Ecore.EModelElement.EAnnotations
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Interop.Ecore.EPackage.#ctor*
  commentId: Overload:NMF.Interop.Ecore.EPackage.#ctor
  name: EPackage
  nameWithType: EPackage.EPackage
  fullName: NMF.Interop.Ecore.EPackage.EPackage
- uid: NMF.Interop.Ecore.EPackage.NsURI*
  commentId: Overload:NMF.Interop.Ecore.EPackage.NsURI
  name: NsURI
  nameWithType: EPackage.NsURI
  fullName: NMF.Interop.Ecore.EPackage.NsURI
- uid: NMF.Interop.Ecore.IEPackage.NsURI
  commentId: P:NMF.Interop.Ecore.IEPackage.NsURI
  parent: NMF.Interop.Ecore.IEPackage
  name: NsURI
  nameWithType: IEPackage.NsURI
  fullName: NMF.Interop.Ecore.IEPackage.NsURI
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Interop.Ecore.EPackage.NsPrefix*
  commentId: Overload:NMF.Interop.Ecore.EPackage.NsPrefix
  name: NsPrefix
  nameWithType: EPackage.NsPrefix
  fullName: NMF.Interop.Ecore.EPackage.NsPrefix
- uid: NMF.Interop.Ecore.IEPackage.NsPrefix
  commentId: P:NMF.Interop.Ecore.IEPackage.NsPrefix
  parent: NMF.Interop.Ecore.IEPackage
  name: NsPrefix
  nameWithType: IEPackage.NsPrefix
  fullName: NMF.Interop.Ecore.IEPackage.NsPrefix
- uid: NMF.Interop.Ecore.EPackage.EFactoryInstance*
  commentId: Overload:NMF.Interop.Ecore.EPackage.EFactoryInstance
  name: EFactoryInstance
  nameWithType: EPackage.EFactoryInstance
  fullName: NMF.Interop.Ecore.EPackage.EFactoryInstance
- uid: NMF.Interop.Ecore.IEPackage.EFactoryInstance
  commentId: P:NMF.Interop.Ecore.IEPackage.EFactoryInstance
  parent: NMF.Interop.Ecore.IEPackage
  name: EFactoryInstance
  nameWithType: IEPackage.EFactoryInstance
  fullName: NMF.Interop.Ecore.IEPackage.EFactoryInstance
- uid: NMF.Interop.Ecore.IEFactory
  commentId: T:NMF.Interop.Ecore.IEFactory
  parent: NMF.Interop.Ecore
  name: IEFactory
  nameWithType: IEFactory
  fullName: NMF.Interop.Ecore.IEFactory
- uid: NMF.Interop.Ecore.EPackage.EClassifiers*
  commentId: Overload:NMF.Interop.Ecore.EPackage.EClassifiers
  name: EClassifiers
  nameWithType: EPackage.EClassifiers
  fullName: NMF.Interop.Ecore.EPackage.EClassifiers
- uid: NMF.Interop.Ecore.IEPackage.EClassifiers
  commentId: P:NMF.Interop.Ecore.IEPackage.EClassifiers
  parent: NMF.Interop.Ecore.IEPackage
  name: EClassifiers
  nameWithType: IEPackage.EClassifiers
  fullName: NMF.Interop.Ecore.IEPackage.EClassifiers
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClassifier}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEClassifier}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEClassifier>
  nameWithType: IOrderedSetExpression<IEClassifier>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEClassifier>
  nameWithType.vb: IOrderedSetExpression(Of IEClassifier)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEClassifier)
  name.vb: IOrderedSetExpression(Of IEClassifier)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEClassifier
    name: IEClassifier
    nameWithType: IEClassifier
    fullName: NMF.Interop.Ecore.IEClassifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEClassifier
    name: IEClassifier
    nameWithType: IEClassifier
    fullName: NMF.Interop.Ecore.IEClassifier
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
- uid: NMF.Interop.Ecore.EPackage.ESubpackages*
  commentId: Overload:NMF.Interop.Ecore.EPackage.ESubpackages
  name: ESubpackages
  nameWithType: EPackage.ESubpackages
  fullName: NMF.Interop.Ecore.EPackage.ESubpackages
- uid: NMF.Interop.Ecore.IEPackage.ESubpackages
  commentId: P:NMF.Interop.Ecore.IEPackage.ESubpackages
  parent: NMF.Interop.Ecore.IEPackage
  name: ESubpackages
  nameWithType: IEPackage.ESubpackages
  fullName: NMF.Interop.Ecore.IEPackage.ESubpackages
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEPackage}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEPackage}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEPackage>
  nameWithType: IOrderedSetExpression<IEPackage>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEPackage>
  nameWithType.vb: IOrderedSetExpression(Of IEPackage)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEPackage)
  name.vb: IOrderedSetExpression(Of IEPackage)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Interop.Ecore.IEPackage
    name: IEPackage
    nameWithType: IEPackage
    fullName: NMF.Interop.Ecore.IEPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Interop.Ecore.IEPackage
    name: IEPackage
    nameWithType: IEPackage
    fullName: NMF.Interop.Ecore.IEPackage
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.ESuperPackage*
  commentId: Overload:NMF.Interop.Ecore.EPackage.ESuperPackage
  name: ESuperPackage
  nameWithType: EPackage.ESuperPackage
  fullName: NMF.Interop.Ecore.EPackage.ESuperPackage
- uid: NMF.Interop.Ecore.IEPackage.ESuperPackage
  commentId: P:NMF.Interop.Ecore.IEPackage.ESuperPackage
  parent: NMF.Interop.Ecore.IEPackage
  name: ESuperPackage
  nameWithType: IEPackage.ESuperPackage
  fullName: NMF.Interop.Ecore.IEPackage.ESuperPackage
- uid: NMF.Interop.Ecore.EModelElement.Children
  commentId: P:NMF.Interop.Ecore.EModelElement.Children
  parent: NMF.Interop.Ecore.EModelElement
  name: Children
  nameWithType: EModelElement.Children
  fullName: NMF.Interop.Ecore.EModelElement.Children
- uid: NMF.Interop.Ecore.EPackage.Children*
  commentId: Overload:NMF.Interop.Ecore.EPackage.Children
  name: Children
  nameWithType: EPackage.Children
  fullName: NMF.Interop.Ecore.EPackage.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Interop.Ecore.EModelElement.ReferencedElements
  commentId: P:NMF.Interop.Ecore.EModelElement.ReferencedElements
  parent: NMF.Interop.Ecore.EModelElement
  name: ReferencedElements
  nameWithType: EModelElement.ReferencedElements
  fullName: NMF.Interop.Ecore.EModelElement.ReferencedElements
- uid: NMF.Interop.Ecore.EPackage.ReferencedElements*
  commentId: Overload:NMF.Interop.Ecore.EPackage.ReferencedElements
  name: ReferencedElements
  nameWithType: EPackage.ReferencedElements
  fullName: NMF.Interop.Ecore.EPackage.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Interop.Ecore.EPackage.ClassInstance*
  commentId: Overload:NMF.Interop.Ecore.EPackage.ClassInstance
  name: ClassInstance
  nameWithType: EPackage.ClassInstance
  fullName: NMF.Interop.Ecore.EPackage.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Interop.Ecore.IEPackage.NsURIChanging
  commentId: E:NMF.Interop.Ecore.IEPackage.NsURIChanging
  parent: NMF.Interop.Ecore.IEPackage
  name: NsURIChanging
  nameWithType: IEPackage.NsURIChanging
  fullName: NMF.Interop.Ecore.IEPackage.NsURIChanging
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.IEPackage.NsURIChanged
  commentId: E:NMF.Interop.Ecore.IEPackage.NsURIChanged
  parent: NMF.Interop.Ecore.IEPackage
  name: NsURIChanged
  nameWithType: IEPackage.NsURIChanged
  fullName: NMF.Interop.Ecore.IEPackage.NsURIChanged
- uid: NMF.Interop.Ecore.IEPackage.NsPrefixChanging
  commentId: E:NMF.Interop.Ecore.IEPackage.NsPrefixChanging
  parent: NMF.Interop.Ecore.IEPackage
  name: NsPrefixChanging
  nameWithType: IEPackage.NsPrefixChanging
  fullName: NMF.Interop.Ecore.IEPackage.NsPrefixChanging
- uid: NMF.Interop.Ecore.IEPackage.NsPrefixChanged
  commentId: E:NMF.Interop.Ecore.IEPackage.NsPrefixChanged
  parent: NMF.Interop.Ecore.IEPackage
  name: NsPrefixChanged
  nameWithType: IEPackage.NsPrefixChanged
  fullName: NMF.Interop.Ecore.IEPackage.NsPrefixChanged
- uid: NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanging
  commentId: E:NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanging
  parent: NMF.Interop.Ecore.IEPackage
  name: EFactoryInstanceChanging
  nameWithType: IEPackage.EFactoryInstanceChanging
  fullName: NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanging
- uid: NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanged
  commentId: E:NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanged
  parent: NMF.Interop.Ecore.IEPackage
  name: EFactoryInstanceChanged
  nameWithType: IEPackage.EFactoryInstanceChanged
  fullName: NMF.Interop.Ecore.IEPackage.EFactoryInstanceChanged
- uid: NMF.Interop.Ecore.IEPackage.ESuperPackageChanging
  commentId: E:NMF.Interop.Ecore.IEPackage.ESuperPackageChanging
  parent: NMF.Interop.Ecore.IEPackage
  name: ESuperPackageChanging
  nameWithType: IEPackage.ESuperPackageChanging
  fullName: NMF.Interop.Ecore.IEPackage.ESuperPackageChanging
- uid: NMF.Interop.Ecore.IEPackage.ESuperPackageChanged
  commentId: E:NMF.Interop.Ecore.IEPackage.ESuperPackageChanged
  parent: NMF.Interop.Ecore.IEPackage
  name: ESuperPackageChanged
  nameWithType: IEPackage.ESuperPackageChanged
  fullName: NMF.Interop.Ecore.IEPackage.ESuperPackageChanged
- uid: NMF.Interop.Ecore.EPackage.OnNsURIChanging*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnNsURIChanging
  name: OnNsURIChanging
  nameWithType: EPackage.OnNsURIChanging
  fullName: NMF.Interop.Ecore.EPackage.OnNsURIChanging
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Interop.Ecore.EPackage.OnNsURIChanged*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnNsURIChanged
  name: OnNsURIChanged
  nameWithType: EPackage.OnNsURIChanged
  fullName: NMF.Interop.Ecore.EPackage.OnNsURIChanged
- uid: NMF.Interop.Ecore.EPackage.OnNsPrefixChanging*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnNsPrefixChanging
  name: OnNsPrefixChanging
  nameWithType: EPackage.OnNsPrefixChanging
  fullName: NMF.Interop.Ecore.EPackage.OnNsPrefixChanging
- uid: NMF.Interop.Ecore.EPackage.OnNsPrefixChanged*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnNsPrefixChanged
  name: OnNsPrefixChanged
  nameWithType: EPackage.OnNsPrefixChanged
  fullName: NMF.Interop.Ecore.EPackage.OnNsPrefixChanged
- uid: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging
  name: OnEFactoryInstanceChanging
  nameWithType: EPackage.OnEFactoryInstanceChanging
  fullName: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanging
- uid: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged
  name: OnEFactoryInstanceChanged
  nameWithType: EPackage.OnEFactoryInstanceChanged
  fullName: NMF.Interop.Ecore.EPackage.OnEFactoryInstanceChanged
- uid: NMF.Interop.Ecore.EPackage.OnESuperPackageChanging*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnESuperPackageChanging
  name: OnESuperPackageChanging
  nameWithType: EPackage.OnESuperPackageChanging
  fullName: NMF.Interop.Ecore.EPackage.OnESuperPackageChanging
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.OnParentChanging*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnParentChanging
  name: OnParentChanging
  nameWithType: EPackage.OnParentChanging
  fullName: NMF.Interop.Ecore.EPackage.OnParentChanging
- uid: NMF.Interop.Ecore.EPackage.OnESuperPackageChanged*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnESuperPackageChanged
  name: OnESuperPackageChanged
  nameWithType: EPackage.OnESuperPackageChanged
  fullName: NMF.Interop.Ecore.EPackage.OnESuperPackageChanged
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.OnParentChanged*
  commentId: Overload:NMF.Interop.Ecore.EPackage.OnParentChanged
  name: OnParentChanged
  nameWithType: EPackage.OnParentChanged
  fullName: NMF.Interop.Ecore.EPackage.OnParentChanged
- uid: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Interop.Ecore.EModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: EModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: EModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: EModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Interop.Ecore.EModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild
  name: GetRelativePathForNonIdentifiedChild
  nameWithType: EPackage.GetRelativePathForNonIdentifiedChild
  fullName: NMF.Interop.Ecore.EPackage.GetRelativePathForNonIdentifiedChild
- uid: NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Interop.Ecore.EModelElement
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: EModelElement.GetModelElementForReference(String, Int32)
  fullName: NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: EModelElement.GetModelElementForReference
    fullName: NMF.Interop.Ecore.EModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: EModelElement.GetModelElementForReference
    fullName: NMF.Interop.Ecore.EModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetModelElementForReference*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: EPackage.GetModelElementForReference
  fullName: NMF.Interop.Ecore.EPackage.GetModelElementForReference
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Interop.Ecore.ENamedElement
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: ENamedElement.GetAttributeValue(String, Int32)
  fullName: NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ENamedElement.GetAttributeValue
    fullName: NMF.Interop.Ecore.ENamedElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ENamedElement.GetAttributeValue
    fullName: NMF.Interop.Ecore.ENamedElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetAttributeValue*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetAttributeValue
  name: GetAttributeValue
  nameWithType: EPackage.GetAttributeValue
  fullName: NMF.Interop.Ecore.EPackage.GetAttributeValue
- uid: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Interop.Ecore.EModelElement
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: EModelElement.GetCollectionForFeature(String)
  fullName: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: EModelElement.GetCollectionForFeature
    fullName: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: EModelElement.GetCollectionForFeature
    fullName: NMF.Interop.Ecore.EModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetCollectionForFeature*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetCollectionForFeature
  name: GetCollectionForFeature
  nameWithType: EPackage.GetCollectionForFeature
  fullName: NMF.Interop.Ecore.EPackage.GetCollectionForFeature
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Interop.Ecore.ENamedElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Interop.Ecore.ENamedElement.SetFeature(System.String,System.Object)
  parent: NMF.Interop.Ecore.ENamedElement
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: ENamedElement.SetFeature(String, Object)
  fullName: NMF.Interop.Ecore.ENamedElement.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ENamedElement.SetFeature
    fullName: NMF.Interop.Ecore.ENamedElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ENamedElement.SetFeature
    fullName: NMF.Interop.Ecore.ENamedElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.SetFeature*
  commentId: Overload:NMF.Interop.Ecore.EPackage.SetFeature
  name: SetFeature
  nameWithType: EPackage.SetFeature
  fullName: NMF.Interop.Ecore.EPackage.SetFeature
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: ModelElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetExpressionForAttribute*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetExpressionForAttribute
  name: GetExpressionForAttribute
  nameWithType: EPackage.GetExpressionForAttribute
  fullName: NMF.Interop.Ecore.EPackage.GetExpressionForAttribute
- uid: NMF.Expressions.INotifyExpression{System.Object}
  commentId: T:NMF.Expressions.INotifyExpression{System.Object}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<Object>
  nameWithType: INotifyExpression<Object>
  fullName: NMF.Expressions.INotifyExpression<System.Object>
  nameWithType.vb: INotifyExpression(Of Object)
  fullName.vb: NMF.Expressions.INotifyExpression(Of System.Object)
  name.vb: INotifyExpression(Of Object)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotifyExpression`1
  commentId: T:NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: ModelElement.GetExpressionForReference(String)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetExpressionForReference*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetExpressionForReference
  name: GetExpressionForReference
  nameWithType: EPackage.GetExpressionForReference
  fullName: NMF.Interop.Ecore.EPackage.GetExpressionForReference
- uid: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<IModelElement>
  nameWithType: INotifyExpression<IModelElement>
  fullName: NMF.Expressions.INotifyExpression<NMF.Models.IModelElement>
  nameWithType.vb: INotifyExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.INotifyExpression(Of NMF.Models.IModelElement)
  name.vb: INotifyExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.ENamedElement.GetClass
  commentId: M:NMF.Interop.Ecore.ENamedElement.GetClass
  parent: NMF.Interop.Ecore.ENamedElement
  name: GetClass()
  nameWithType: ENamedElement.GetClass()
  fullName: NMF.Interop.Ecore.ENamedElement.GetClass()
  spec.csharp:
  - uid: NMF.Interop.Ecore.ENamedElement.GetClass
    name: GetClass
    nameWithType: ENamedElement.GetClass
    fullName: NMF.Interop.Ecore.ENamedElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Ecore.ENamedElement.GetClass
    name: GetClass
    nameWithType: ENamedElement.GetClass
    fullName: NMF.Interop.Ecore.ENamedElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Ecore.EPackage.GetClass*
  commentId: Overload:NMF.Interop.Ecore.EPackage.GetClass
  name: GetClass
  nameWithType: EPackage.GetClass
  fullName: NMF.Interop.Ecore.EPackage.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
