### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.IEGenericType
  commentId: T:NMF.Interop.Ecore.IEGenericType
  id: IEGenericType
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.IEGenericType.EClassifier
  - NMF.Interop.Ecore.IEGenericType.EClassifierChanged
  - NMF.Interop.Ecore.IEGenericType.EClassifierChanging
  - NMF.Interop.Ecore.IEGenericType.ELowerBound
  - NMF.Interop.Ecore.IEGenericType.ELowerBoundChanged
  - NMF.Interop.Ecore.IEGenericType.ELowerBoundChanging
  - NMF.Interop.Ecore.IEGenericType.ETypeArguments
  - NMF.Interop.Ecore.IEGenericType.ETypeParameter
  - NMF.Interop.Ecore.IEGenericType.ETypeParameterChanged
  - NMF.Interop.Ecore.IEGenericType.ETypeParameterChanging
  - NMF.Interop.Ecore.IEGenericType.EUpperBound
  - NMF.Interop.Ecore.IEGenericType.EUpperBoundChanged
  - NMF.Interop.Ecore.IEGenericType.EUpperBoundChanging
  langs:
  - csharp
  - vb
  name: IEGenericType
  nameWithType: IEGenericType
  fullName: NMF.Interop.Ecore.IEGenericType
  type: Interface
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IEGenericType
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe public interface for EGenericType\n"
  example: []
  syntax:
    content: >-
      [DefaultImplementationType(typeof(EGenericType))]

      [XmlDefaultImplementationType(typeof(EGenericType))]

      public interface IEGenericType : IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <DefaultImplementationType(GetType(EGenericType))>

      <XmlDefaultImplementationType(GetType(EGenericType))>

      Public Interface IEGenericType Inherits IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.IModelElement.Delete
  - NMF.Models.IModelElement.Deleted
  - NMF.Models.IModelElement.Deleting
  - NMF.Models.IModelElement.IsIdentified
  - NMF.Models.IModelElement.ToIdentifierString
  - NMF.Models.IModelElement.RelativeUri
  - NMF.Models.IModelElement.AbsoluteUri
  - NMF.Models.IModelElement.Resolve(System.Uri)
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.IModelElement.Model
  - NMF.Models.IModelElement.Parent
  - NMF.Models.IModelElement.ParentChanged
  - NMF.Models.IModelElement.Children
  - NMF.Models.IModelElement.ReferencedElements
  - NMF.Models.IModelElement.Extensions
  - NMF.Models.IModelElement.GetExtension``1
  - NMF.Models.IModelElement.GetClass
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.IModelElement.Freeze
  - NMF.Models.IModelElement.Lock
  - NMF.Models.IModelElement.Unlock
  - NMF.Models.IModelElement.TryUnlock
  - NMF.Models.IModelElement.IsFrozen
  - NMF.Models.IModelElement.IsLocked
  - NMF.Models.IModelElement.BubbledChange
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  attributes:
  - type: NMF.Utilities.DefaultImplementationTypeAttribute
    ctor: NMF.Utilities.DefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.EGenericType
  - type: NMF.Serialization.XmlDefaultImplementationTypeAttribute
    ctor: NMF.Serialization.XmlDefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.EGenericType
- uid: NMF.Interop.Ecore.IEGenericType.EUpperBound
  commentId: P:NMF.Interop.Ecore.IEGenericType.EUpperBound
  id: EUpperBound
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EUpperBound
  nameWithType: IEGenericType.EUpperBound
  fullName: NMF.Interop.Ecore.IEGenericType.EUpperBound
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EUpperBound
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 44
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eUpperBound property\n"
  example: []
  syntax:
    content: IEGenericType EUpperBound { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEGenericType
    content.vb: Property EUpperBound As IEGenericType
  overload: NMF.Interop.Ecore.IEGenericType.EUpperBound*
- uid: NMF.Interop.Ecore.IEGenericType.ETypeArguments
  commentId: P:NMF.Interop.Ecore.IEGenericType.ETypeArguments
  id: ETypeArguments
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ETypeArguments
  nameWithType: IEGenericType.ETypeArguments
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeArguments
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ETypeArguments
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 53
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eTypeArguments property\n"
  example: []
  syntax:
    content: IOrderedSetExpression<IEGenericType> ETypeArguments { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
    content.vb: ReadOnly Property ETypeArguments As IOrderedSetExpression(Of IEGenericType)
  overload: NMF.Interop.Ecore.IEGenericType.ETypeArguments*
- uid: NMF.Interop.Ecore.IEGenericType.ELowerBound
  commentId: P:NMF.Interop.Ecore.IEGenericType.ELowerBound
  id: ELowerBound
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ELowerBound
  nameWithType: IEGenericType.ELowerBound
  fullName: NMF.Interop.Ecore.IEGenericType.ELowerBound
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ELowerBound
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 61
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eLowerBound property\n"
  example: []
  syntax:
    content: IEGenericType ELowerBound { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEGenericType
    content.vb: Property ELowerBound As IEGenericType
  overload: NMF.Interop.Ecore.IEGenericType.ELowerBound*
- uid: NMF.Interop.Ecore.IEGenericType.ETypeParameter
  commentId: P:NMF.Interop.Ecore.IEGenericType.ETypeParameter
  id: ETypeParameter
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ETypeParameter
  nameWithType: IEGenericType.ETypeParameter
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeParameter
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ETypeParameter
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 70
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eTypeParameter property\n"
  example: []
  syntax:
    content: IETypeParameter ETypeParameter { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IETypeParameter
    content.vb: Property ETypeParameter As IETypeParameter
  overload: NMF.Interop.Ecore.IEGenericType.ETypeParameter*
- uid: NMF.Interop.Ecore.IEGenericType.EClassifier
  commentId: P:NMF.Interop.Ecore.IEGenericType.EClassifier
  id: EClassifier
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EClassifier
  nameWithType: IEGenericType.EClassifier
  fullName: NMF.Interop.Ecore.IEGenericType.EClassifier
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClassifier
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 79
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eClassifier property\n"
  example: []
  syntax:
    content: IEClassifier EClassifier { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEClassifier
    content.vb: Property EClassifier As IEClassifier
  overload: NMF.Interop.Ecore.IEGenericType.EClassifier*
- uid: NMF.Interop.Ecore.IEGenericType.EUpperBoundChanging
  commentId: E:NMF.Interop.Ecore.IEGenericType.EUpperBoundChanging
  id: EUpperBoundChanging
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EUpperBoundChanging
  nameWithType: IEGenericType.EUpperBoundChanging
  fullName: NMF.Interop.Ecore.IEGenericType.EUpperBoundChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EUpperBoundChanging
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 88
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the EUpperBound property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EUpperBoundChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EUpperBoundChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.EUpperBoundChanged
  commentId: E:NMF.Interop.Ecore.IEGenericType.EUpperBoundChanged
  id: EUpperBoundChanged
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EUpperBoundChanged
  nameWithType: IEGenericType.EUpperBoundChanged
  fullName: NMF.Interop.Ecore.IEGenericType.EUpperBoundChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EUpperBoundChanged
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 93
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the EUpperBound property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EUpperBoundChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EUpperBoundChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.ELowerBoundChanging
  commentId: E:NMF.Interop.Ecore.IEGenericType.ELowerBoundChanging
  id: ELowerBoundChanging
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ELowerBoundChanging
  nameWithType: IEGenericType.ELowerBoundChanging
  fullName: NMF.Interop.Ecore.IEGenericType.ELowerBoundChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ELowerBoundChanging
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 98
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the ELowerBound property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ELowerBoundChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ELowerBoundChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.ELowerBoundChanged
  commentId: E:NMF.Interop.Ecore.IEGenericType.ELowerBoundChanged
  id: ELowerBoundChanged
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ELowerBoundChanged
  nameWithType: IEGenericType.ELowerBoundChanged
  fullName: NMF.Interop.Ecore.IEGenericType.ELowerBoundChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ELowerBoundChanged
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 103
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the ELowerBound property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ELowerBoundChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ELowerBoundChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.ETypeParameterChanging
  commentId: E:NMF.Interop.Ecore.IEGenericType.ETypeParameterChanging
  id: ETypeParameterChanging
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ETypeParameterChanging
  nameWithType: IEGenericType.ETypeParameterChanging
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeParameterChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ETypeParameterChanging
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 108
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the ETypeParameter property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ETypeParameterChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ETypeParameterChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.ETypeParameterChanged
  commentId: E:NMF.Interop.Ecore.IEGenericType.ETypeParameterChanged
  id: ETypeParameterChanged
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: ETypeParameterChanged
  nameWithType: IEGenericType.ETypeParameterChanged
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeParameterChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ETypeParameterChanged
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 113
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the ETypeParameter property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ETypeParameterChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ETypeParameterChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.EClassifierChanging
  commentId: E:NMF.Interop.Ecore.IEGenericType.EClassifierChanging
  id: EClassifierChanging
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EClassifierChanging
  nameWithType: IEGenericType.EClassifierChanging
  fullName: NMF.Interop.Ecore.IEGenericType.EClassifierChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClassifierChanging
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 118
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the EClassifier property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EClassifierChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EClassifierChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEGenericType.EClassifierChanged
  commentId: E:NMF.Interop.Ecore.IEGenericType.EClassifierChanged
  id: EClassifierChanged
  parent: NMF.Interop.Ecore.IEGenericType
  langs:
  - csharp
  - vb
  name: EClassifierChanged
  nameWithType: IEGenericType.EClassifierChanged
  fullName: NMF.Interop.Ecore.IEGenericType.EClassifierChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEGenericType.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EClassifierChanged
    path: src/Interop/EcoreInterop/Model/IEGenericType.cs
    startLine: 123
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the EClassifier property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EClassifierChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EClassifierChanged As EventHandler(Of ValueChangedEventArgs)
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Interop
    name: Interop
  - name: .
  - uid: NMF.Interop.Ecore
    name: Ecore
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Interop
    name: Interop
  - name: .
  - uid: NMF.Interop.Ecore
    name: Ecore
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, out int)
  nameWithType: IModelElement.GetContainerReference(IModelElement, out int)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, out int)
  nameWithType.vb: IModelElement.GetContainerReference(IModelElement, Integer)
  fullName.vb: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, Integer)
  name.vb: GetContainerReference(IModelElement, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, int)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, int)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, int)
  nameWithType.vb: IModelElement.GetAttributeValue(IAttribute, Integer)
  fullName.vb: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, Integer)
  name.vb: GetAttributeValue(IAttribute, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  name: CallOperation(IOperation, params object[])
  nameWithType: IModelElement.CallOperation(IOperation, params object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, params object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, ParamArray Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, ParamArray Object())
  name.vb: CallOperation(IOperation, ParamArray Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetReferencedElement(IReference, int)
  nameWithType: IModelElement.GetReferencedElement(IReference, int)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, int)
  nameWithType.vb: IModelElement.GetReferencedElement(IReference, Integer)
  fullName.vb: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, Integer)
  name.vb: GetReferencedElement(IReference, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, object)
  nameWithType.vb: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName.vb: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, Object)
  name.vb: SetAttributeValue(IAttribute, Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
- uid: NMF.Interop.Ecore.IEGenericType.EUpperBound*
  commentId: Overload:NMF.Interop.Ecore.IEGenericType.EUpperBound
  name: EUpperBound
  nameWithType: IEGenericType.EUpperBound
  fullName: NMF.Interop.Ecore.IEGenericType.EUpperBound
- uid: NMF.Interop.Ecore.IEGenericType
  commentId: T:NMF.Interop.Ecore.IEGenericType
  parent: NMF.Interop.Ecore
  name: IEGenericType
  nameWithType: IEGenericType
  fullName: NMF.Interop.Ecore.IEGenericType
- uid: NMF.Interop.Ecore.IEGenericType.ETypeArguments*
  commentId: Overload:NMF.Interop.Ecore.IEGenericType.ETypeArguments
  name: ETypeArguments
  nameWithType: IEGenericType.ETypeArguments
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeArguments
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Interop.Ecore.IEGenericType}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IEGenericType>
  nameWithType: IOrderedSetExpression<IEGenericType>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Interop.Ecore.IEGenericType>
  nameWithType.vb: IOrderedSetExpression(Of IEGenericType)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Interop.Ecore.IEGenericType)
  name.vb: IOrderedSetExpression(Of IEGenericType)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: <
  - uid: NMF.Interop.Ecore.IEGenericType
    name: IEGenericType
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Interop.Ecore.IEGenericType
    name: IEGenericType
  - name: )
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
- uid: NMF.Interop.Ecore.IEGenericType.ELowerBound*
  commentId: Overload:NMF.Interop.Ecore.IEGenericType.ELowerBound
  name: ELowerBound
  nameWithType: IEGenericType.ELowerBound
  fullName: NMF.Interop.Ecore.IEGenericType.ELowerBound
- uid: NMF.Interop.Ecore.IEGenericType.ETypeParameter*
  commentId: Overload:NMF.Interop.Ecore.IEGenericType.ETypeParameter
  name: ETypeParameter
  nameWithType: IEGenericType.ETypeParameter
  fullName: NMF.Interop.Ecore.IEGenericType.ETypeParameter
- uid: NMF.Interop.Ecore.IETypeParameter
  commentId: T:NMF.Interop.Ecore.IETypeParameter
  parent: NMF.Interop.Ecore
  name: IETypeParameter
  nameWithType: IETypeParameter
  fullName: NMF.Interop.Ecore.IETypeParameter
- uid: NMF.Interop.Ecore.IEGenericType.EClassifier*
  commentId: Overload:NMF.Interop.Ecore.IEGenericType.EClassifier
  name: EClassifier
  nameWithType: IEGenericType.EClassifier
  fullName: NMF.Interop.Ecore.IEGenericType.EClassifier
- uid: NMF.Interop.Ecore.IEClassifier
  commentId: T:NMF.Interop.Ecore.IEClassifier
  parent: NMF.Interop.Ecore
  name: IEClassifier
  nameWithType: IEClassifier
  fullName: NMF.Interop.Ecore.IEClassifier
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
