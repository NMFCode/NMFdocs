### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.IENamedElement
  commentId: T:NMF.Interop.Ecore.IENamedElement
  id: IENamedElement
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.IENamedElement.Name
  - NMF.Interop.Ecore.IENamedElement.NameChanged
  - NMF.Interop.Ecore.IENamedElement.NameChanging
  langs:
  - csharp
  - vb
  name: IENamedElement
  nameWithType: IENamedElement
  fullName: NMF.Interop.Ecore.IENamedElement
  type: Interface
  source:
    remote:
      path: Interop/EcoreInterop/Model/IENamedElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IENamedElement
    path: src/Interop/EcoreInterop/Model/IENamedElement.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe public interface for ENamedElement\n"
  example: []
  syntax:
    content: >-
      [DefaultImplementationType(typeof(ENamedElement))]

      [XmlDefaultImplementationType(typeof(ENamedElement))]

      public interface IENamedElement : IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <DefaultImplementationType(GetType(ENamedElement))>

      <XmlDefaultImplementationType(GetType(ENamedElement))>

      Public Interface IENamedElement
          Inherits IModelElement, IEModelElement
  inheritedMembers:
  - NMF.Interop.Ecore.IEModelElement.EAnnotations
  - NMF.Models.IModelElement.Delete
  - NMF.Models.IModelElement.Deleted
  - NMF.Models.IModelElement.Deleting
  - NMF.Models.IModelElement.IsIdentified
  - NMF.Models.IModelElement.ToIdentifierString
  - NMF.Models.IModelElement.RelativeUri
  - NMF.Models.IModelElement.AbsoluteUri
  - NMF.Models.IModelElement.Resolve(System.Uri)
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.IModelElement.Model
  - NMF.Models.IModelElement.Parent
  - NMF.Models.IModelElement.ParentChanged
  - NMF.Models.IModelElement.Children
  - NMF.Models.IModelElement.ReferencedElements
  - NMF.Models.IModelElement.Extensions
  - NMF.Models.IModelElement.GetExtension``1
  - NMF.Models.IModelElement.GetClass
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.IModelElement.Freeze
  - NMF.Models.IModelElement.Lock
  - NMF.Models.IModelElement.Unlock
  - NMF.Models.IModelElement.TryUnlock
  - NMF.Models.IModelElement.IsFrozen
  - NMF.Models.IModelElement.IsLocked
  - NMF.Models.IModelElement.BubbledChange
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  attributes:
  - type: NMF.Utilities.DefaultImplementationTypeAttribute
    ctor: NMF.Utilities.DefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.ENamedElement
  - type: NMF.Serialization.XmlDefaultImplementationTypeAttribute
    ctor: NMF.Serialization.XmlDefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.ENamedElement
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NMF.Interop.Ecore.IENamedElement.Name
  commentId: P:NMF.Interop.Ecore.IENamedElement.Name
  id: Name
  parent: NMF.Interop.Ecore.IENamedElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IENamedElement.Name
  fullName: NMF.Interop.Ecore.IENamedElement.Name
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IENamedElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Name
    path: src/Interop/EcoreInterop/Model/IENamedElement.cs
    startLine: 44
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe name property\n"
  example: []
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: NMF.Interop.Ecore.IENamedElement.Name*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IENamedElement.NameChanging
  commentId: E:NMF.Interop.Ecore.IENamedElement.NameChanging
  id: NameChanging
  parent: NMF.Interop.Ecore.IENamedElement
  langs:
  - csharp
  - vb
  name: NameChanging
  nameWithType: IENamedElement.NameChanging
  fullName: NMF.Interop.Ecore.IENamedElement.NameChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IENamedElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NameChanging
    path: src/Interop/EcoreInterop/Model/IENamedElement.cs
    startLine: 53
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Name property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> NameChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event NameChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IENamedElement.NameChanged
  commentId: E:NMF.Interop.Ecore.IENamedElement.NameChanged
  id: NameChanged
  parent: NMF.Interop.Ecore.IENamedElement
  langs:
  - csharp
  - vb
  name: NameChanged
  nameWithType: IENamedElement.NameChanged
  fullName: NMF.Interop.Ecore.IENamedElement.NameChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IENamedElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NameChanged
    path: src/Interop/EcoreInterop/Model/IENamedElement.cs
    startLine: 58
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Name property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> NameChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event NameChanged As EventHandler(Of ValueChangedEventArgs)
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
- uid: NMF.Interop.Ecore.IEModelElement.EAnnotations
  commentId: P:NMF.Interop.Ecore.IEModelElement.EAnnotations
  parent: NMF.Interop.Ecore.IEModelElement
  name: EAnnotations
  nameWithType: IEModelElement.EAnnotations
  fullName: NMF.Interop.Ecore.IEModelElement.EAnnotations
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: IModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: IModelElement.GetExtension<T>
    fullName: NMF.Models.IModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: IModelElement.GetExtension(Of T)
    fullName: NMF.Models.IModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: IModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: IModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Interop.Ecore.IEModelElement
  commentId: T:NMF.Interop.Ecore.IEModelElement
  parent: NMF.Interop.Ecore
  name: IEModelElement
  nameWithType: IEModelElement
  fullName: NMF.Interop.Ecore.IEModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Interop.Ecore.IENamedElement.Name*
  commentId: Overload:NMF.Interop.Ecore.IENamedElement.Name
  name: Name
  nameWithType: IENamedElement.Name
  fullName: NMF.Interop.Ecore.IENamedElement.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
