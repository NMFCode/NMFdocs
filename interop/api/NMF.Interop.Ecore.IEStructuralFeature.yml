### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Ecore.IEStructuralFeature
  commentId: T:NMF.Interop.Ecore.IEStructuralFeature
  id: IEStructuralFeature
  parent: NMF.Interop.Ecore
  children:
  - NMF.Interop.Ecore.IEStructuralFeature.Changeable
  - NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanged
  - NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanging
  - NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
  - NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanged
  - NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanging
  - NMF.Interop.Ecore.IEStructuralFeature.Derived
  - NMF.Interop.Ecore.IEStructuralFeature.DerivedChanged
  - NMF.Interop.Ecore.IEStructuralFeature.DerivedChanging
  - NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
  - NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanged
  - NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanging
  - NMF.Interop.Ecore.IEStructuralFeature.Transient
  - NMF.Interop.Ecore.IEStructuralFeature.TransientChanged
  - NMF.Interop.Ecore.IEStructuralFeature.TransientChanging
  - NMF.Interop.Ecore.IEStructuralFeature.Unsettable
  - NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanged
  - NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanging
  - NMF.Interop.Ecore.IEStructuralFeature.Volatile
  - NMF.Interop.Ecore.IEStructuralFeature.VolatileChanged
  - NMF.Interop.Ecore.IEStructuralFeature.VolatileChanging
  langs:
  - csharp
  - vb
  name: IEStructuralFeature
  nameWithType: IEStructuralFeature
  fullName: NMF.Interop.Ecore.IEStructuralFeature
  type: Interface
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IEStructuralFeature
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe public interface for EStructuralFeature\n"
  example: []
  syntax:
    content: >-
      [DefaultImplementationType(typeof(EStructuralFeature))]

      [XmlDefaultImplementationType(typeof(EStructuralFeature))]

      public interface IEStructuralFeature : IETypedElement, IENamedElement, IEModelElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <DefaultImplementationType(GetType(EStructuralFeature))>

      <XmlDefaultImplementationType(GetType(EStructuralFeature))>

      Public Interface IEStructuralFeature
          Inherits IModelElement, IETypedElement
  inheritedMembers:
  - NMF.Interop.Ecore.IETypedElement.Ordered
  - NMF.Interop.Ecore.IETypedElement.Unique
  - NMF.Interop.Ecore.IETypedElement.LowerBound
  - NMF.Interop.Ecore.IETypedElement.UpperBound
  - NMF.Interop.Ecore.IETypedElement.EType
  - NMF.Interop.Ecore.IETypedElement.EGenericType
  - NMF.Interop.Ecore.IETypedElement.OrderedChanging
  - NMF.Interop.Ecore.IETypedElement.OrderedChanged
  - NMF.Interop.Ecore.IETypedElement.UniqueChanging
  - NMF.Interop.Ecore.IETypedElement.UniqueChanged
  - NMF.Interop.Ecore.IETypedElement.LowerBoundChanging
  - NMF.Interop.Ecore.IETypedElement.LowerBoundChanged
  - NMF.Interop.Ecore.IETypedElement.UpperBoundChanging
  - NMF.Interop.Ecore.IETypedElement.UpperBoundChanged
  - NMF.Interop.Ecore.IETypedElement.ETypeChanging
  - NMF.Interop.Ecore.IETypedElement.ETypeChanged
  - NMF.Interop.Ecore.IETypedElement.EGenericTypeChanging
  - NMF.Interop.Ecore.IETypedElement.EGenericTypeChanged
  - NMF.Interop.Ecore.IENamedElement.Name
  - NMF.Interop.Ecore.IENamedElement.NameChanging
  - NMF.Interop.Ecore.IENamedElement.NameChanged
  - NMF.Interop.Ecore.IEModelElement.EAnnotations
  - NMF.Models.IModelElement.Delete
  - NMF.Models.IModelElement.Deleted
  - NMF.Models.IModelElement.Deleting
  - NMF.Models.IModelElement.IsIdentified
  - NMF.Models.IModelElement.ToIdentifierString
  - NMF.Models.IModelElement.RelativeUri
  - NMF.Models.IModelElement.AbsoluteUri
  - NMF.Models.IModelElement.Resolve(System.Uri)
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.IModelElement.Model
  - NMF.Models.IModelElement.Parent
  - NMF.Models.IModelElement.ParentChanged
  - NMF.Models.IModelElement.Children
  - NMF.Models.IModelElement.ReferencedElements
  - NMF.Models.IModelElement.Extensions
  - NMF.Models.IModelElement.GetExtension``1
  - NMF.Models.IModelElement.GetClass
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.IModelElement.Freeze
  - NMF.Models.IModelElement.Lock
  - NMF.Models.IModelElement.Unlock
  - NMF.Models.IModelElement.TryUnlock
  - NMF.Models.IModelElement.IsFrozen
  - NMF.Models.IModelElement.IsLocked
  - NMF.Models.IModelElement.BubbledChange
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  attributes:
  - type: NMF.Utilities.DefaultImplementationTypeAttribute
    ctor: NMF.Utilities.DefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.EStructuralFeature
  - type: NMF.Serialization.XmlDefaultImplementationTypeAttribute
    ctor: NMF.Serialization.XmlDefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Interop.Ecore.EStructuralFeature
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NMF.Interop.Ecore.IEStructuralFeature.Changeable
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.Changeable
  id: Changeable
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: Changeable
  nameWithType: IEStructuralFeature.Changeable
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Changeable
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Changeable
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 44
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe changeable property\n"
  example: []
  syntax:
    content: bool? Changeable { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property Changeable As Boolean?
  overload: NMF.Interop.Ecore.IEStructuralFeature.Changeable*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.Volatile
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.Volatile
  id: Volatile
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: Volatile
  nameWithType: IEStructuralFeature.Volatile
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Volatile
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Volatile
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 53
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe volatile property\n"
  example: []
  syntax:
    content: bool? Volatile { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property Volatile As Boolean?
  overload: NMF.Interop.Ecore.IEStructuralFeature.Volatile*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.Transient
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.Transient
  id: Transient
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: Transient
  nameWithType: IEStructuralFeature.Transient
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Transient
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Transient
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 62
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe transient property\n"
  example: []
  syntax:
    content: bool? Transient { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property Transient As Boolean?
  overload: NMF.Interop.Ecore.IEStructuralFeature.Transient*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
  id: DefaultValueLiteral
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: DefaultValueLiteral
  nameWithType: IEStructuralFeature.DefaultValueLiteral
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValueLiteral
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 71
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe defaultValueLiteral property\n"
  example: []
  syntax:
    content: string DefaultValueLiteral { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property DefaultValueLiteral As String
  overload: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.Unsettable
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.Unsettable
  id: Unsettable
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: Unsettable
  nameWithType: IEStructuralFeature.Unsettable
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Unsettable
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Unsettable
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 80
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe unsettable property\n"
  example: []
  syntax:
    content: bool? Unsettable { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property Unsettable As Boolean?
  overload: NMF.Interop.Ecore.IEStructuralFeature.Unsettable*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.Derived
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.Derived
  id: Derived
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: Derived
  nameWithType: IEStructuralFeature.Derived
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Derived
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Derived
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 89
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe derived property\n"
  example: []
  syntax:
    content: bool? Derived { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property Derived As Boolean?
  overload: NMF.Interop.Ecore.IEStructuralFeature.Derived*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
  commentId: P:NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
  id: EContainingClass
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: EContainingClass
  nameWithType: IEStructuralFeature.EContainingClass
  fullName: NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EContainingClass
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 98
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nThe eContainingClass property\n"
  example: []
  syntax:
    content: IEClass EContainingClass { get; set; }
    parameters: []
    return:
      type: NMF.Interop.Ecore.IEClass
    content.vb: Property EContainingClass As IEClass
  overload: NMF.Interop.Ecore.IEStructuralFeature.EContainingClass*
  modifiers.csharp:
  - get
  - set
- uid: NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanging
  id: ChangeableChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: ChangeableChanging
  nameWithType: IEStructuralFeature.ChangeableChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ChangeableChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 107
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Changeable property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ChangeableChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ChangeableChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanged
  id: ChangeableChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: ChangeableChanged
  nameWithType: IEStructuralFeature.ChangeableChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.ChangeableChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ChangeableChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 112
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Changeable property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ChangeableChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ChangeableChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.VolatileChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.VolatileChanging
  id: VolatileChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: VolatileChanging
  nameWithType: IEStructuralFeature.VolatileChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.VolatileChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: VolatileChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 117
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Volatile property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> VolatileChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event VolatileChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.VolatileChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.VolatileChanged
  id: VolatileChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: VolatileChanged
  nameWithType: IEStructuralFeature.VolatileChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.VolatileChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: VolatileChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 122
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Volatile property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> VolatileChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event VolatileChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.TransientChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.TransientChanging
  id: TransientChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: TransientChanging
  nameWithType: IEStructuralFeature.TransientChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.TransientChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TransientChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 127
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Transient property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> TransientChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event TransientChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.TransientChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.TransientChanged
  id: TransientChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: TransientChanged
  nameWithType: IEStructuralFeature.TransientChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.TransientChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TransientChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 132
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Transient property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> TransientChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event TransientChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanging
  id: DefaultValueLiteralChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: DefaultValueLiteralChanging
  nameWithType: IEStructuralFeature.DefaultValueLiteralChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValueLiteralChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 137
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the DefaultValueLiteral property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DefaultValueLiteralChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DefaultValueLiteralChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanged
  id: DefaultValueLiteralChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: DefaultValueLiteralChanged
  nameWithType: IEStructuralFeature.DefaultValueLiteralChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteralChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValueLiteralChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 142
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the DefaultValueLiteral property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DefaultValueLiteralChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DefaultValueLiteralChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanging
  id: UnsettableChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: UnsettableChanging
  nameWithType: IEStructuralFeature.UnsettableChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnsettableChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 147
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Unsettable property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> UnsettableChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event UnsettableChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanged
  id: UnsettableChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: UnsettableChanged
  nameWithType: IEStructuralFeature.UnsettableChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.UnsettableChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnsettableChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 152
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Unsettable property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> UnsettableChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event UnsettableChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.DerivedChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.DerivedChanging
  id: DerivedChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: DerivedChanging
  nameWithType: IEStructuralFeature.DerivedChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DerivedChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DerivedChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 157
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the Derived property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DerivedChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DerivedChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.DerivedChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.DerivedChanged
  id: DerivedChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: DerivedChanged
  nameWithType: IEStructuralFeature.DerivedChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DerivedChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DerivedChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 162
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the Derived property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DerivedChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DerivedChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanging
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanging
  id: EContainingClassChanging
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: EContainingClassChanging
  nameWithType: IEStructuralFeature.EContainingClassChanging
  fullName: NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanging
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EContainingClassChanging
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 167
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired before the EContainingClass property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EContainingClassChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EContainingClassChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanged
  commentId: E:NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanged
  id: EContainingClassChanged
  parent: NMF.Interop.Ecore.IEStructuralFeature
  langs:
  - csharp
  - vb
  name: EContainingClassChanged
  nameWithType: IEStructuralFeature.EContainingClassChanged
  fullName: NMF.Interop.Ecore.IEStructuralFeature.EContainingClassChanged
  type: Event
  source:
    remote:
      path: Interop/EcoreInterop/Model/IEStructuralFeature.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EContainingClassChanged
    path: src/Interop/EcoreInterop/Model/IEStructuralFeature.cs
    startLine: 172
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Ecore
  summary: "\nGets fired when the EContainingClass property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> EContainingClassChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event EContainingClassChanged As EventHandler(Of ValueChangedEventArgs)
references:
- uid: NMF.Interop.Ecore
  commentId: N:NMF.Interop.Ecore
  name: NMF.Interop.Ecore
  nameWithType: NMF.Interop.Ecore
  fullName: NMF.Interop.Ecore
- uid: NMF.Interop.Ecore.IETypedElement.Ordered
  commentId: P:NMF.Interop.Ecore.IETypedElement.Ordered
  parent: NMF.Interop.Ecore.IETypedElement
  name: Ordered
  nameWithType: IETypedElement.Ordered
  fullName: NMF.Interop.Ecore.IETypedElement.Ordered
- uid: NMF.Interop.Ecore.IETypedElement.Unique
  commentId: P:NMF.Interop.Ecore.IETypedElement.Unique
  parent: NMF.Interop.Ecore.IETypedElement
  name: Unique
  nameWithType: IETypedElement.Unique
  fullName: NMF.Interop.Ecore.IETypedElement.Unique
- uid: NMF.Interop.Ecore.IETypedElement.LowerBound
  commentId: P:NMF.Interop.Ecore.IETypedElement.LowerBound
  parent: NMF.Interop.Ecore.IETypedElement
  name: LowerBound
  nameWithType: IETypedElement.LowerBound
  fullName: NMF.Interop.Ecore.IETypedElement.LowerBound
- uid: NMF.Interop.Ecore.IETypedElement.UpperBound
  commentId: P:NMF.Interop.Ecore.IETypedElement.UpperBound
  parent: NMF.Interop.Ecore.IETypedElement
  name: UpperBound
  nameWithType: IETypedElement.UpperBound
  fullName: NMF.Interop.Ecore.IETypedElement.UpperBound
- uid: NMF.Interop.Ecore.IETypedElement.EType
  commentId: P:NMF.Interop.Ecore.IETypedElement.EType
  parent: NMF.Interop.Ecore.IETypedElement
  name: EType
  nameWithType: IETypedElement.EType
  fullName: NMF.Interop.Ecore.IETypedElement.EType
- uid: NMF.Interop.Ecore.IETypedElement.EGenericType
  commentId: P:NMF.Interop.Ecore.IETypedElement.EGenericType
  parent: NMF.Interop.Ecore.IETypedElement
  name: EGenericType
  nameWithType: IETypedElement.EGenericType
  fullName: NMF.Interop.Ecore.IETypedElement.EGenericType
- uid: NMF.Interop.Ecore.IETypedElement.OrderedChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.OrderedChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: OrderedChanging
  nameWithType: IETypedElement.OrderedChanging
  fullName: NMF.Interop.Ecore.IETypedElement.OrderedChanging
- uid: NMF.Interop.Ecore.IETypedElement.OrderedChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.OrderedChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: OrderedChanged
  nameWithType: IETypedElement.OrderedChanged
  fullName: NMF.Interop.Ecore.IETypedElement.OrderedChanged
- uid: NMF.Interop.Ecore.IETypedElement.UniqueChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.UniqueChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: UniqueChanging
  nameWithType: IETypedElement.UniqueChanging
  fullName: NMF.Interop.Ecore.IETypedElement.UniqueChanging
- uid: NMF.Interop.Ecore.IETypedElement.UniqueChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.UniqueChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: UniqueChanged
  nameWithType: IETypedElement.UniqueChanged
  fullName: NMF.Interop.Ecore.IETypedElement.UniqueChanged
- uid: NMF.Interop.Ecore.IETypedElement.LowerBoundChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.LowerBoundChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: LowerBoundChanging
  nameWithType: IETypedElement.LowerBoundChanging
  fullName: NMF.Interop.Ecore.IETypedElement.LowerBoundChanging
- uid: NMF.Interop.Ecore.IETypedElement.LowerBoundChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.LowerBoundChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: LowerBoundChanged
  nameWithType: IETypedElement.LowerBoundChanged
  fullName: NMF.Interop.Ecore.IETypedElement.LowerBoundChanged
- uid: NMF.Interop.Ecore.IETypedElement.UpperBoundChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.UpperBoundChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: UpperBoundChanging
  nameWithType: IETypedElement.UpperBoundChanging
  fullName: NMF.Interop.Ecore.IETypedElement.UpperBoundChanging
- uid: NMF.Interop.Ecore.IETypedElement.UpperBoundChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.UpperBoundChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: UpperBoundChanged
  nameWithType: IETypedElement.UpperBoundChanged
  fullName: NMF.Interop.Ecore.IETypedElement.UpperBoundChanged
- uid: NMF.Interop.Ecore.IETypedElement.ETypeChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.ETypeChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: ETypeChanging
  nameWithType: IETypedElement.ETypeChanging
  fullName: NMF.Interop.Ecore.IETypedElement.ETypeChanging
- uid: NMF.Interop.Ecore.IETypedElement.ETypeChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.ETypeChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: ETypeChanged
  nameWithType: IETypedElement.ETypeChanged
  fullName: NMF.Interop.Ecore.IETypedElement.ETypeChanged
- uid: NMF.Interop.Ecore.IETypedElement.EGenericTypeChanging
  commentId: E:NMF.Interop.Ecore.IETypedElement.EGenericTypeChanging
  parent: NMF.Interop.Ecore.IETypedElement
  name: EGenericTypeChanging
  nameWithType: IETypedElement.EGenericTypeChanging
  fullName: NMF.Interop.Ecore.IETypedElement.EGenericTypeChanging
- uid: NMF.Interop.Ecore.IETypedElement.EGenericTypeChanged
  commentId: E:NMF.Interop.Ecore.IETypedElement.EGenericTypeChanged
  parent: NMF.Interop.Ecore.IETypedElement
  name: EGenericTypeChanged
  nameWithType: IETypedElement.EGenericTypeChanged
  fullName: NMF.Interop.Ecore.IETypedElement.EGenericTypeChanged
- uid: NMF.Interop.Ecore.IENamedElement.Name
  commentId: P:NMF.Interop.Ecore.IENamedElement.Name
  parent: NMF.Interop.Ecore.IENamedElement
  name: Name
  nameWithType: IENamedElement.Name
  fullName: NMF.Interop.Ecore.IENamedElement.Name
- uid: NMF.Interop.Ecore.IENamedElement.NameChanging
  commentId: E:NMF.Interop.Ecore.IENamedElement.NameChanging
  parent: NMF.Interop.Ecore.IENamedElement
  name: NameChanging
  nameWithType: IENamedElement.NameChanging
  fullName: NMF.Interop.Ecore.IENamedElement.NameChanging
- uid: NMF.Interop.Ecore.IENamedElement.NameChanged
  commentId: E:NMF.Interop.Ecore.IENamedElement.NameChanged
  parent: NMF.Interop.Ecore.IENamedElement
  name: NameChanged
  nameWithType: IENamedElement.NameChanged
  fullName: NMF.Interop.Ecore.IENamedElement.NameChanged
- uid: NMF.Interop.Ecore.IEModelElement.EAnnotations
  commentId: P:NMF.Interop.Ecore.IEModelElement.EAnnotations
  parent: NMF.Interop.Ecore.IEModelElement
  name: EAnnotations
  nameWithType: IEModelElement.EAnnotations
  fullName: NMF.Interop.Ecore.IEModelElement.EAnnotations
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: IModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: IModelElement.GetExtension<T>
    fullName: NMF.Models.IModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: IModelElement.GetExtension(Of T)
    fullName: NMF.Models.IModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: IModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: IModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Interop.Ecore.IETypedElement
  commentId: T:NMF.Interop.Ecore.IETypedElement
  parent: NMF.Interop.Ecore
  name: IETypedElement
  nameWithType: IETypedElement
  fullName: NMF.Interop.Ecore.IETypedElement
- uid: NMF.Interop.Ecore.IENamedElement
  commentId: T:NMF.Interop.Ecore.IENamedElement
  parent: NMF.Interop.Ecore
  name: IENamedElement
  nameWithType: IENamedElement
  fullName: NMF.Interop.Ecore.IENamedElement
- uid: NMF.Interop.Ecore.IEModelElement
  commentId: T:NMF.Interop.Ecore.IEModelElement
  parent: NMF.Interop.Ecore
  name: IEModelElement
  nameWithType: IEModelElement
  fullName: NMF.Interop.Ecore.IEModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Interop.Ecore.IEStructuralFeature.Changeable*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.Changeable
  name: Changeable
  nameWithType: IEStructuralFeature.Changeable
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Changeable
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Interop.Ecore.IEStructuralFeature.Volatile*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.Volatile
  name: Volatile
  nameWithType: IEStructuralFeature.Volatile
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Volatile
- uid: NMF.Interop.Ecore.IEStructuralFeature.Transient*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.Transient
  name: Transient
  nameWithType: IEStructuralFeature.Transient
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Transient
- uid: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
  name: DefaultValueLiteral
  nameWithType: IEStructuralFeature.DefaultValueLiteral
  fullName: NMF.Interop.Ecore.IEStructuralFeature.DefaultValueLiteral
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Interop.Ecore.IEStructuralFeature.Unsettable*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.Unsettable
  name: Unsettable
  nameWithType: IEStructuralFeature.Unsettable
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Unsettable
- uid: NMF.Interop.Ecore.IEStructuralFeature.Derived*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.Derived
  name: Derived
  nameWithType: IEStructuralFeature.Derived
  fullName: NMF.Interop.Ecore.IEStructuralFeature.Derived
- uid: NMF.Interop.Ecore.IEStructuralFeature.EContainingClass*
  commentId: Overload:NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
  name: EContainingClass
  nameWithType: IEStructuralFeature.EContainingClass
  fullName: NMF.Interop.Ecore.IEStructuralFeature.EContainingClass
- uid: NMF.Interop.Ecore.IEClass
  commentId: T:NMF.Interop.Ecore.IEClass
  parent: NMF.Interop.Ecore
  name: IEClass
  nameWithType: IEClass
  fullName: NMF.Interop.Ecore.IEClass
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
