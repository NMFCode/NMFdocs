### YamlMime:ManagedReference
items:
- uid: NMF.Interop.Layout.AttributeLayoutInformation
  commentId: T:NMF.Interop.Layout.AttributeLayoutInformation
  id: AttributeLayoutInformation
  parent: NMF.Interop.Layout
  children:
  - NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
  - NMF.Interop.Layout.AttributeLayoutInformation.GetClass
  langs:
  - csharp
  - vb
  name: AttributeLayoutInformation
  nameWithType: AttributeLayoutInformation
  fullName: NMF.Interop.Layout.AttributeLayoutInformation
  type: Class
  source:
    remote:
      path: Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttributeLayoutInformation
    path: src/Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
    startLine: 36
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Layout
  summary: "\nThe default implementation of the AttributeLayoutInformation class\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://www.emftext.org/commons/layout")]

      [XmlNamespacePrefix("layout")]

      [ModelRepresentationClass("http://www.emftext.org/commons/layout#//AttributeLayoutInformation/")]

      public class AttributeLayoutInformation : LayoutInformation, IAttributeLayoutInformation, ILayoutInformation, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://www.emftext.org/commons/layout")>

      <XmlNamespacePrefix("layout")>

      <ModelRepresentationClass("http://www.emftext.org/commons/layout#//AttributeLayoutInformation/")>

      Public Class AttributeLayoutInformation
          Inherits LayoutInformation
          Implements IAttributeLayoutInformation, ILayoutInformation, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Interop.Layout.LayoutInformation
  implements:
  - NMF.Interop.Layout.IAttributeLayoutInformation
  - NMF.Interop.Layout.ILayoutInformation
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Interop.Layout.LayoutInformation.StartOffset
  - NMF.Interop.Layout.LayoutInformation.HiddenTokenText
  - NMF.Interop.Layout.LayoutInformation.VisibleTokenText
  - NMF.Interop.Layout.LayoutInformation.SyntaxElementID
  - NMF.Interop.Layout.LayoutInformation.StartOffsetChanging
  - NMF.Interop.Layout.LayoutInformation.StartOffsetChanged
  - NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanging
  - NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanged
  - NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanging
  - NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanged
  - NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanging
  - NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanged
  - NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String,System.Int32)
  - NMF.Interop.Layout.LayoutInformation.SetFeature(System.String,System.Object)
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.Children
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.IsIdentified
  - NMF.Models.ModelElement.ToIdentifierString
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.GetExpressionForReference(System.String)
  - NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.ReferencedElements
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.emftext.org/commons/layout
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: layout
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.emftext.org/commons/layout#//AttributeLayoutInformation/
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
  commentId: P:NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
  id: ClassInstance
  parent: NMF.Interop.Layout.AttributeLayoutInformation
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: AttributeLayoutInformation.ClassInstance
  fullName: NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
  type: Property
  source:
    remote:
      path: Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
    startLine: 47
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Layout
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Interop.Layout.AttributeLayoutInformation.GetClass
  commentId: M:NMF.Interop.Layout.AttributeLayoutInformation.GetClass
  id: GetClass
  parent: NMF.Interop.Layout.AttributeLayoutInformation
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: AttributeLayoutInformation.GetClass()
  fullName: NMF.Interop.Layout.AttributeLayoutInformation.GetClass()
  type: Method
  source:
    remote:
      path: Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Interop/EcoreInterop/Layout/AttributeLayoutInformation.cs
    startLine: 62
  assemblies:
  - NMF.EcoreInterop
  namespace: NMF.Interop.Layout
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Interop.Layout.LayoutInformation.GetClass
  overload: NMF.Interop.Layout.AttributeLayoutInformation.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Interop.Layout
  commentId: N:NMF.Interop.Layout
  name: NMF.Interop.Layout
  nameWithType: NMF.Interop.Layout
  fullName: NMF.Interop.Layout
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Interop.Layout.LayoutInformation
  commentId: T:NMF.Interop.Layout.LayoutInformation
  parent: NMF.Interop.Layout
  name: LayoutInformation
  nameWithType: LayoutInformation
  fullName: NMF.Interop.Layout.LayoutInformation
- uid: NMF.Interop.Layout.IAttributeLayoutInformation
  commentId: T:NMF.Interop.Layout.IAttributeLayoutInformation
  parent: NMF.Interop.Layout
  name: IAttributeLayoutInformation
  nameWithType: IAttributeLayoutInformation
  fullName: NMF.Interop.Layout.IAttributeLayoutInformation
- uid: NMF.Interop.Layout.ILayoutInformation
  commentId: T:NMF.Interop.Layout.ILayoutInformation
  parent: NMF.Interop.Layout
  name: ILayoutInformation
  nameWithType: ILayoutInformation
  fullName: NMF.Interop.Layout.ILayoutInformation
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Interop.Layout.LayoutInformation.StartOffset
  commentId: P:NMF.Interop.Layout.LayoutInformation.StartOffset
  parent: NMF.Interop.Layout.LayoutInformation
  name: StartOffset
  nameWithType: LayoutInformation.StartOffset
  fullName: NMF.Interop.Layout.LayoutInformation.StartOffset
- uid: NMF.Interop.Layout.LayoutInformation.HiddenTokenText
  commentId: P:NMF.Interop.Layout.LayoutInformation.HiddenTokenText
  parent: NMF.Interop.Layout.LayoutInformation
  name: HiddenTokenText
  nameWithType: LayoutInformation.HiddenTokenText
  fullName: NMF.Interop.Layout.LayoutInformation.HiddenTokenText
- uid: NMF.Interop.Layout.LayoutInformation.VisibleTokenText
  commentId: P:NMF.Interop.Layout.LayoutInformation.VisibleTokenText
  parent: NMF.Interop.Layout.LayoutInformation
  name: VisibleTokenText
  nameWithType: LayoutInformation.VisibleTokenText
  fullName: NMF.Interop.Layout.LayoutInformation.VisibleTokenText
- uid: NMF.Interop.Layout.LayoutInformation.SyntaxElementID
  commentId: P:NMF.Interop.Layout.LayoutInformation.SyntaxElementID
  parent: NMF.Interop.Layout.LayoutInformation
  name: SyntaxElementID
  nameWithType: LayoutInformation.SyntaxElementID
  fullName: NMF.Interop.Layout.LayoutInformation.SyntaxElementID
- uid: NMF.Interop.Layout.LayoutInformation.StartOffsetChanging
  commentId: E:NMF.Interop.Layout.LayoutInformation.StartOffsetChanging
  parent: NMF.Interop.Layout.LayoutInformation
  name: StartOffsetChanging
  nameWithType: LayoutInformation.StartOffsetChanging
  fullName: NMF.Interop.Layout.LayoutInformation.StartOffsetChanging
- uid: NMF.Interop.Layout.LayoutInformation.StartOffsetChanged
  commentId: E:NMF.Interop.Layout.LayoutInformation.StartOffsetChanged
  parent: NMF.Interop.Layout.LayoutInformation
  name: StartOffsetChanged
  nameWithType: LayoutInformation.StartOffsetChanged
  fullName: NMF.Interop.Layout.LayoutInformation.StartOffsetChanged
- uid: NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanging
  commentId: E:NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanging
  parent: NMF.Interop.Layout.LayoutInformation
  name: HiddenTokenTextChanging
  nameWithType: LayoutInformation.HiddenTokenTextChanging
  fullName: NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanging
- uid: NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanged
  commentId: E:NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanged
  parent: NMF.Interop.Layout.LayoutInformation
  name: HiddenTokenTextChanged
  nameWithType: LayoutInformation.HiddenTokenTextChanged
  fullName: NMF.Interop.Layout.LayoutInformation.HiddenTokenTextChanged
- uid: NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanging
  commentId: E:NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanging
  parent: NMF.Interop.Layout.LayoutInformation
  name: VisibleTokenTextChanging
  nameWithType: LayoutInformation.VisibleTokenTextChanging
  fullName: NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanging
- uid: NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanged
  commentId: E:NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanged
  parent: NMF.Interop.Layout.LayoutInformation
  name: VisibleTokenTextChanged
  nameWithType: LayoutInformation.VisibleTokenTextChanged
  fullName: NMF.Interop.Layout.LayoutInformation.VisibleTokenTextChanged
- uid: NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanging
  commentId: E:NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanging
  parent: NMF.Interop.Layout.LayoutInformation
  name: SyntaxElementIDChanging
  nameWithType: LayoutInformation.SyntaxElementIDChanging
  fullName: NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanging
- uid: NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanged
  commentId: E:NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanged
  parent: NMF.Interop.Layout.LayoutInformation
  name: SyntaxElementIDChanged
  nameWithType: LayoutInformation.SyntaxElementIDChanged
  fullName: NMF.Interop.Layout.LayoutInformation.SyntaxElementIDChanged
- uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnStartOffsetChanging(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnStartOffsetChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnStartOffsetChanging
    nameWithType: LayoutInformation.OnStartOffsetChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnStartOffsetChanging
    nameWithType: LayoutInformation.OnStartOffsetChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnStartOffsetChanged(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnStartOffsetChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnStartOffsetChanged
    nameWithType: LayoutInformation.OnStartOffsetChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnStartOffsetChanged
    nameWithType: LayoutInformation.OnStartOffsetChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnStartOffsetChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnHiddenTokenTextChanging(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnHiddenTokenTextChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnHiddenTokenTextChanging
    nameWithType: LayoutInformation.OnHiddenTokenTextChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnHiddenTokenTextChanging
    nameWithType: LayoutInformation.OnHiddenTokenTextChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnHiddenTokenTextChanged(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnHiddenTokenTextChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnHiddenTokenTextChanged
    nameWithType: LayoutInformation.OnHiddenTokenTextChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnHiddenTokenTextChanged
    nameWithType: LayoutInformation.OnHiddenTokenTextChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnHiddenTokenTextChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnVisibleTokenTextChanging(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnVisibleTokenTextChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnVisibleTokenTextChanging
    nameWithType: LayoutInformation.OnVisibleTokenTextChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnVisibleTokenTextChanging
    nameWithType: LayoutInformation.OnVisibleTokenTextChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnVisibleTokenTextChanged(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnVisibleTokenTextChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnVisibleTokenTextChanged
    nameWithType: LayoutInformation.OnVisibleTokenTextChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnVisibleTokenTextChanged
    nameWithType: LayoutInformation.OnVisibleTokenTextChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnVisibleTokenTextChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnSyntaxElementIDChanging(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnSyntaxElementIDChanging(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnSyntaxElementIDChanging
    nameWithType: LayoutInformation.OnSyntaxElementIDChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnSyntaxElementIDChanging
    nameWithType: LayoutInformation.OnSyntaxElementIDChanging
    fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Interop.Layout.LayoutInformation
  name: OnSyntaxElementIDChanged(ValueChangedEventArgs)
  nameWithType: LayoutInformation.OnSyntaxElementIDChanged(ValueChangedEventArgs)
  fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnSyntaxElementIDChanged
    nameWithType: LayoutInformation.OnSyntaxElementIDChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnSyntaxElementIDChanged
    nameWithType: LayoutInformation.OnSyntaxElementIDChanged
    fullName: NMF.Interop.Layout.LayoutInformation.OnSyntaxElementIDChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Interop.Layout.LayoutInformation
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: LayoutInformation.GetAttributeValue(String, Int32)
  fullName: NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: LayoutInformation.GetAttributeValue
    fullName: NMF.Interop.Layout.LayoutInformation.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: LayoutInformation.GetAttributeValue
    fullName: NMF.Interop.Layout.LayoutInformation.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.LayoutInformation.SetFeature(System.String,System.Object)
  commentId: M:NMF.Interop.Layout.LayoutInformation.SetFeature(System.String,System.Object)
  parent: NMF.Interop.Layout.LayoutInformation
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: LayoutInformation.SetFeature(String, Object)
  fullName: NMF.Interop.Layout.LayoutInformation.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: LayoutInformation.SetFeature
    fullName: NMF.Interop.Layout.LayoutInformation.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: LayoutInformation.SetFeature
    fullName: NMF.Interop.Layout.LayoutInformation.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  parent: NMF.Models.ModelElement
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.IsIdentified
  commentId: P:NMF.Models.ModelElement.IsIdentified
  parent: NMF.Models.ModelElement
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
- uid: NMF.Models.ModelElement.ToIdentifierString
  commentId: M:NMF.Models.ModelElement.ToIdentifierString
  parent: NMF.Models.ModelElement
  name: ToIdentifierString()
  nameWithType: ModelElement.ToIdentifierString()
  fullName: NMF.Models.ModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: ModelElement.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.ModelElement.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: ModelElement.GetCollectionForFeature(String)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: ModelElement.GetExpressionForReference(String)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: ModelElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.ReferencedElements
  commentId: P:NMF.Models.ModelElement.ReferencedElements
  parent: NMF.Models.ModelElement
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance*
  commentId: Overload:NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
  name: ClassInstance
  nameWithType: AttributeLayoutInformation.ClassInstance
  fullName: NMF.Interop.Layout.AttributeLayoutInformation.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Interop.Layout.LayoutInformation.GetClass
  commentId: M:NMF.Interop.Layout.LayoutInformation.GetClass
  parent: NMF.Interop.Layout.LayoutInformation
  name: GetClass()
  nameWithType: LayoutInformation.GetClass()
  fullName: NMF.Interop.Layout.LayoutInformation.GetClass()
  spec.csharp:
  - uid: NMF.Interop.Layout.LayoutInformation.GetClass
    name: GetClass
    nameWithType: LayoutInformation.GetClass
    fullName: NMF.Interop.Layout.LayoutInformation.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Interop.Layout.LayoutInformation.GetClass
    name: GetClass
    nameWithType: LayoutInformation.GetClass
    fullName: NMF.Interop.Layout.LayoutInformation.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Interop.Layout.AttributeLayoutInformation.GetClass*
  commentId: Overload:NMF.Interop.Layout.AttributeLayoutInformation.GetClass
  name: GetClass
  nameWithType: AttributeLayoutInformation.GetClass
  fullName: NMF.Interop.Layout.AttributeLayoutInformation.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
